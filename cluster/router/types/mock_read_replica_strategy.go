//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2025 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by mockery v2.53.2. DO NOT EDIT.

package types

import mock "github.com/stretchr/testify/mock"

// MockReadReplicaStrategy is an autogenerated mock type for the ReadReplicaStrategy type
type MockReadReplicaStrategy struct {
	mock.Mock
}

type MockReadReplicaStrategy_Expecter struct {
	mock *mock.Mock
}

func (_m *MockReadReplicaStrategy) EXPECT() *MockReadReplicaStrategy_Expecter {
	return &MockReadReplicaStrategy_Expecter{mock: &_m.Mock}
}

// Apply provides a mock function with given fields: replicas
func (_m *MockReadReplicaStrategy) Apply(replicas ReadReplicaSet) ReadReplicaSet {
	ret := _m.Called(replicas)

	if len(ret) == 0 {
		panic("no return value specified for Apply")
	}

	var r0 ReadReplicaSet
	if rf, ok := ret.Get(0).(func(ReadReplicaSet) ReadReplicaSet); ok {
		r0 = rf(replicas)
	} else {
		r0 = ret.Get(0).(ReadReplicaSet)
	}

	return r0
}

// MockReadReplicaStrategy_Apply_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Apply'
type MockReadReplicaStrategy_Apply_Call struct {
	*mock.Call
}

// Apply is a helper method to define mock.On call
//   - replicas ReadReplicaSet
func (_e *MockReadReplicaStrategy_Expecter) Apply(replicas interface{}) *MockReadReplicaStrategy_Apply_Call {
	return &MockReadReplicaStrategy_Apply_Call{Call: _e.mock.On("Apply", replicas)}
}

func (_c *MockReadReplicaStrategy_Apply_Call) Run(run func(replicas ReadReplicaSet)) *MockReadReplicaStrategy_Apply_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(ReadReplicaSet))
	})
	return _c
}

func (_c *MockReadReplicaStrategy_Apply_Call) Return(_a0 ReadReplicaSet) *MockReadReplicaStrategy_Apply_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockReadReplicaStrategy_Apply_Call) RunAndReturn(run func(ReadReplicaSet) ReadReplicaSet) *MockReadReplicaStrategy_Apply_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockReadReplicaStrategy creates a new instance of MockReadReplicaStrategy. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockReadReplicaStrategy(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockReadReplicaStrategy {
	mock := &MockReadReplicaStrategy{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
