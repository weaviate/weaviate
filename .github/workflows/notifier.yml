name: Notify Slack on PR from community or Any Issue

on:
  issues:
    types: [opened]
  pull_request:
    types: [opened]

jobs:
  notify-slack:
    runs-on: ubuntu-latest
    steps:
      - name: Check if user is part of the weaviate team
        if: github.actor != 'dependabot[bot]'
        id: check_user
        run: |         
          response=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_ORG_Members_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/${{ github.repository_owner }}/teams/core/memberships/${{ github.actor }})
          echo $response
          if [ "$response" -eq 200 ]; then
            echo "is_non_member=false" >> $GITHUB_ENV
          elif [ "$response" -eq 404 ]; then
            echo "is_non_member=true" >> $GITHUB_ENV
          else
            echo "error checking membership: HTTP $response"
            exit 1
          fi

      - name: Send Slack Notification for PR (Community)
        if: github.actor != 'dependabot[bot]' && github.event_name == 'pull_request' && steps.check_user.outputs.is_non_member == 'true'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "ðŸ“¢ A Pull Request has been opened by a *community*:\n*User:* ${{ github.actor }}\n*Title:* ${{ github.event.pull_request.title }}\n*Link:* ${{ github.event.pull_request.html_url }}"
          }' $SLACK_WEBHOOK_URL

      - name: Send Slack Notification for All Issues
        if: github.actor != 'dependabot[bot]' && github.event_name == 'issues'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "ðŸš¨ A new Issue has been opened:\n*User:* ${{ github.actor }}\n*Title:* ${{ github.event.issue.title }}\n*Link:* ${{ github.event.issue.html_url }}"
          }' $SLACK_WEBHOOK_URL
