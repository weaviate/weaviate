// Code generated by protoc-gen-go. DO NOT EDIT.

package protocol

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BatchDeleteRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Collection       string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Filters          *Filters               `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	Verbose          bool                   `protobuf:"varint,3,opt,name=verbose,proto3" json:"verbose,omitempty"`
	DryRun           bool                   `protobuf:"varint,4,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	ConsistencyLevel *ConsistencyLevel      `protobuf:"varint,5,opt,name=consistency_level,json=consistencyLevel,proto3,enum=weaviate.v1.ConsistencyLevel,oneof" json:"consistency_level,omitempty"`
	Tenant           *string                `protobuf:"bytes,6,opt,name=tenant,proto3,oneof" json:"tenant,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BatchDeleteRequest) Reset() {
	*x = BatchDeleteRequest{}
	mi := &file_v1_batch_delete_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteRequest) ProtoMessage() {}

func (x *BatchDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_batch_delete_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteRequest) Descriptor() ([]byte, []int) {
	return file_v1_batch_delete_proto_rawDescGZIP(), []int{0}
}

func (x *BatchDeleteRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *BatchDeleteRequest) GetFilters() *Filters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *BatchDeleteRequest) GetVerbose() bool {
	if x != nil {
		return x.Verbose
	}
	return false
}

func (x *BatchDeleteRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

func (x *BatchDeleteRequest) GetConsistencyLevel() ConsistencyLevel {
	if x != nil && x.ConsistencyLevel != nil {
		return *x.ConsistencyLevel
	}
	return ConsistencyLevel_CONSISTENCY_LEVEL_UNSPECIFIED
}

func (x *BatchDeleteRequest) GetTenant() string {
	if x != nil && x.Tenant != nil {
		return *x.Tenant
	}
	return ""
}

type BatchDeleteReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Took          float32                `protobuf:"fixed32,1,opt,name=took,proto3" json:"took,omitempty"`
	Failed        int64                  `protobuf:"varint,2,opt,name=failed,proto3" json:"failed,omitempty"`
	Matches       int64                  `protobuf:"varint,3,opt,name=matches,proto3" json:"matches,omitempty"`
	Successful    int64                  `protobuf:"varint,4,opt,name=successful,proto3" json:"successful,omitempty"`
	Objects       []*BatchDeleteObject   `protobuf:"bytes,5,rep,name=objects,proto3" json:"objects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteReply) Reset() {
	*x = BatchDeleteReply{}
	mi := &file_v1_batch_delete_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteReply) ProtoMessage() {}

func (x *BatchDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_batch_delete_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteReply.ProtoReflect.Descriptor instead.
func (*BatchDeleteReply) Descriptor() ([]byte, []int) {
	return file_v1_batch_delete_proto_rawDescGZIP(), []int{1}
}

func (x *BatchDeleteReply) GetTook() float32 {
	if x != nil {
		return x.Took
	}
	return 0
}

func (x *BatchDeleteReply) GetFailed() int64 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *BatchDeleteReply) GetMatches() int64 {
	if x != nil {
		return x.Matches
	}
	return 0
}

func (x *BatchDeleteReply) GetSuccessful() int64 {
	if x != nil {
		return x.Successful
	}
	return 0
}

func (x *BatchDeleteReply) GetObjects() []*BatchDeleteObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

type BatchDeleteObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          []byte                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Successful    bool                   `protobuf:"varint,2,opt,name=successful,proto3" json:"successful,omitempty"`
	Error         *string                `protobuf:"bytes,3,opt,name=error,proto3,oneof" json:"error,omitempty"` // empty string means no error
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteObject) Reset() {
	*x = BatchDeleteObject{}
	mi := &file_v1_batch_delete_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteObject) ProtoMessage() {}

func (x *BatchDeleteObject) ProtoReflect() protoreflect.Message {
	mi := &file_v1_batch_delete_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteObject.ProtoReflect.Descriptor instead.
func (*BatchDeleteObject) Descriptor() ([]byte, []int) {
	return file_v1_batch_delete_proto_rawDescGZIP(), []int{2}
}

func (x *BatchDeleteObject) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *BatchDeleteObject) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *BatchDeleteObject) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

var File_v1_batch_delete_proto protoreflect.FileDescriptor

const file_v1_batch_delete_proto_rawDesc = "" +
	"\n" +
	"\x15v1/batch_delete.proto\x12\vweaviate.v1\x1a\rv1/base.proto\"\xa6\x02\n" +
	"\x12BatchDeleteRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12.\n" +
	"\afilters\x18\x02 \x01(\v2\x14.weaviate.v1.FiltersR\afilters\x12\x18\n" +
	"\averbose\x18\x03 \x01(\bR\averbose\x12\x17\n" +
	"\adry_run\x18\x04 \x01(\bR\x06dryRun\x12O\n" +
	"\x11consistency_level\x18\x05 \x01(\x0e2\x1d.weaviate.v1.ConsistencyLevelH\x00R\x10consistencyLevel\x88\x01\x01\x12\x1b\n" +
	"\x06tenant\x18\x06 \x01(\tH\x01R\x06tenant\x88\x01\x01B\x14\n" +
	"\x12_consistency_levelB\t\n" +
	"\a_tenant\"\xb2\x01\n" +
	"\x10BatchDeleteReply\x12\x12\n" +
	"\x04took\x18\x01 \x01(\x02R\x04took\x12\x16\n" +
	"\x06failed\x18\x02 \x01(\x03R\x06failed\x12\x18\n" +
	"\amatches\x18\x03 \x01(\x03R\amatches\x12\x1e\n" +
	"\n" +
	"successful\x18\x04 \x01(\x03R\n" +
	"successful\x128\n" +
	"\aobjects\x18\x05 \x03(\v2\x1e.weaviate.v1.BatchDeleteObjectR\aobjects\"l\n" +
	"\x11BatchDeleteObject\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\fR\x04uuid\x12\x1e\n" +
	"\n" +
	"successful\x18\x02 \x01(\bR\n" +
	"successful\x12\x19\n" +
	"\x05error\x18\x03 \x01(\tH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_errorBu\n" +
	"#io.weaviate.client.grpc.protocol.v1B\x18WeaviateProtoBatchDeleteZ4github.com/weaviate/weaviate/grpc/generated;protocolb\x06proto3"

var (
	file_v1_batch_delete_proto_rawDescOnce sync.Once
	file_v1_batch_delete_proto_rawDescData []byte
)

func file_v1_batch_delete_proto_rawDescGZIP() []byte {
	file_v1_batch_delete_proto_rawDescOnce.Do(func() {
		file_v1_batch_delete_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_batch_delete_proto_rawDesc), len(file_v1_batch_delete_proto_rawDesc)))
	})
	return file_v1_batch_delete_proto_rawDescData
}

var (
	file_v1_batch_delete_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
	file_v1_batch_delete_proto_goTypes  = []any{
		(*BatchDeleteRequest)(nil), // 0: weaviate.v1.BatchDeleteRequest
		(*BatchDeleteReply)(nil),   // 1: weaviate.v1.BatchDeleteReply
		(*BatchDeleteObject)(nil),  // 2: weaviate.v1.BatchDeleteObject
		(*Filters)(nil),            // 3: weaviate.v1.Filters
		(ConsistencyLevel)(0),      // 4: weaviate.v1.ConsistencyLevel
	}
)

var file_v1_batch_delete_proto_depIdxs = []int32{
	3, // 0: weaviate.v1.BatchDeleteRequest.filters:type_name -> weaviate.v1.Filters
	4, // 1: weaviate.v1.BatchDeleteRequest.consistency_level:type_name -> weaviate.v1.ConsistencyLevel
	2, // 2: weaviate.v1.BatchDeleteReply.objects:type_name -> weaviate.v1.BatchDeleteObject
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_v1_batch_delete_proto_init() }
func file_v1_batch_delete_proto_init() {
	if File_v1_batch_delete_proto != nil {
		return
	}
	file_v1_base_proto_init()
	file_v1_batch_delete_proto_msgTypes[0].OneofWrappers = []any{}
	file_v1_batch_delete_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_batch_delete_proto_rawDesc), len(file_v1_batch_delete_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_batch_delete_proto_goTypes,
		DependencyIndexes: file_v1_batch_delete_proto_depIdxs,
		MessageInfos:      file_v1_batch_delete_proto_msgTypes,
	}.Build()
	File_v1_batch_delete_proto = out.File
	file_v1_batch_delete_proto_goTypes = nil
	file_v1_batch_delete_proto_depIdxs = nil
}
