// Code generated by protoc-gen-go. DO NOT EDIT.

package protocol

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BatchObjectsRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Objects          []*BatchObject         `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
	ConsistencyLevel *ConsistencyLevel      `protobuf:"varint,2,opt,name=consistency_level,json=consistencyLevel,proto3,enum=weaviate.v1.ConsistencyLevel,oneof" json:"consistency_level,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BatchObjectsRequest) Reset() {
	*x = BatchObjectsRequest{}
	mi := &file_v1_batch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchObjectsRequest) ProtoMessage() {}

func (x *BatchObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_batch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchObjectsRequest.ProtoReflect.Descriptor instead.
func (*BatchObjectsRequest) Descriptor() ([]byte, []int) {
	return file_v1_batch_proto_rawDescGZIP(), []int{0}
}

func (x *BatchObjectsRequest) GetObjects() []*BatchObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *BatchObjectsRequest) GetConsistencyLevel() ConsistencyLevel {
	if x != nil && x.ConsistencyLevel != nil {
		return *x.ConsistencyLevel
	}
	return ConsistencyLevel_CONSISTENCY_LEVEL_UNSPECIFIED
}

type BatchObject struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Uuid  string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
	//
	// Deprecated: Marked as deprecated in v1/batch.proto.
	Vector      []float32               `protobuf:"fixed32,2,rep,packed,name=vector,proto3" json:"vector,omitempty"` // deprecated, will be removed
	Properties  *BatchObject_Properties `protobuf:"bytes,3,opt,name=properties,proto3" json:"properties,omitempty"`
	Collection  string                  `protobuf:"bytes,4,opt,name=collection,proto3" json:"collection,omitempty"`
	Tenant      string                  `protobuf:"bytes,5,opt,name=tenant,proto3" json:"tenant,omitempty"`
	VectorBytes []byte                  `protobuf:"bytes,6,opt,name=vector_bytes,json=vectorBytes,proto3" json:"vector_bytes,omitempty"`
	// protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
	Vectors       []*Vectors `protobuf:"bytes,23,rep,name=vectors,proto3" json:"vectors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchObject) Reset() {
	*x = BatchObject{}
	mi := &file_v1_batch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchObject) ProtoMessage() {}

func (x *BatchObject) ProtoReflect() protoreflect.Message {
	mi := &file_v1_batch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchObject.ProtoReflect.Descriptor instead.
func (*BatchObject) Descriptor() ([]byte, []int) {
	return file_v1_batch_proto_rawDescGZIP(), []int{1}
}

func (x *BatchObject) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// Deprecated: Marked as deprecated in v1/batch.proto.
func (x *BatchObject) GetVector() []float32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *BatchObject) GetProperties() *BatchObject_Properties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *BatchObject) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *BatchObject) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *BatchObject) GetVectorBytes() []byte {
	if x != nil {
		return x.VectorBytes
	}
	return nil
}

func (x *BatchObject) GetVectors() []*Vectors {
	if x != nil {
		return x.Vectors
	}
	return nil
}

type BatchObjectsReply struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Took          float32                         `protobuf:"fixed32,1,opt,name=took,proto3" json:"took,omitempty"`
	Errors        []*BatchObjectsReply_BatchError `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchObjectsReply) Reset() {
	*x = BatchObjectsReply{}
	mi := &file_v1_batch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchObjectsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchObjectsReply) ProtoMessage() {}

func (x *BatchObjectsReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_batch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchObjectsReply.ProtoReflect.Descriptor instead.
func (*BatchObjectsReply) Descriptor() ([]byte, []int) {
	return file_v1_batch_proto_rawDescGZIP(), []int{2}
}

func (x *BatchObjectsReply) GetTook() float32 {
	if x != nil {
		return x.Took
	}
	return 0
}

func (x *BatchObjectsReply) GetErrors() []*BatchObjectsReply_BatchError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type BatchObject_Properties struct {
	state                  protoimpl.MessageState              `protogen:"open.v1"`
	NonRefProperties       *structpb.Struct                    `protobuf:"bytes,1,opt,name=non_ref_properties,json=nonRefProperties,proto3" json:"non_ref_properties,omitempty"`
	SingleTargetRefProps   []*BatchObject_SingleTargetRefProps `protobuf:"bytes,2,rep,name=single_target_ref_props,json=singleTargetRefProps,proto3" json:"single_target_ref_props,omitempty"`
	MultiTargetRefProps    []*BatchObject_MultiTargetRefProps  `protobuf:"bytes,3,rep,name=multi_target_ref_props,json=multiTargetRefProps,proto3" json:"multi_target_ref_props,omitempty"`
	NumberArrayProperties  []*NumberArrayProperties            `protobuf:"bytes,4,rep,name=number_array_properties,json=numberArrayProperties,proto3" json:"number_array_properties,omitempty"`
	IntArrayProperties     []*IntArrayProperties               `protobuf:"bytes,5,rep,name=int_array_properties,json=intArrayProperties,proto3" json:"int_array_properties,omitempty"`
	TextArrayProperties    []*TextArrayProperties              `protobuf:"bytes,6,rep,name=text_array_properties,json=textArrayProperties,proto3" json:"text_array_properties,omitempty"`
	BooleanArrayProperties []*BooleanArrayProperties           `protobuf:"bytes,7,rep,name=boolean_array_properties,json=booleanArrayProperties,proto3" json:"boolean_array_properties,omitempty"`
	ObjectProperties       []*ObjectProperties                 `protobuf:"bytes,8,rep,name=object_properties,json=objectProperties,proto3" json:"object_properties,omitempty"`
	ObjectArrayProperties  []*ObjectArrayProperties            `protobuf:"bytes,9,rep,name=object_array_properties,json=objectArrayProperties,proto3" json:"object_array_properties,omitempty"`
	// empty lists do not have a type in many languages and clients do not know which datatype the property has.
	// Weaviate can get the datatype from its schema
	EmptyListProps []string `protobuf:"bytes,10,rep,name=empty_list_props,json=emptyListProps,proto3" json:"empty_list_props,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BatchObject_Properties) Reset() {
	*x = BatchObject_Properties{}
	mi := &file_v1_batch_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchObject_Properties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchObject_Properties) ProtoMessage() {}

func (x *BatchObject_Properties) ProtoReflect() protoreflect.Message {
	mi := &file_v1_batch_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchObject_Properties.ProtoReflect.Descriptor instead.
func (*BatchObject_Properties) Descriptor() ([]byte, []int) {
	return file_v1_batch_proto_rawDescGZIP(), []int{1, 0}
}

func (x *BatchObject_Properties) GetNonRefProperties() *structpb.Struct {
	if x != nil {
		return x.NonRefProperties
	}
	return nil
}

func (x *BatchObject_Properties) GetSingleTargetRefProps() []*BatchObject_SingleTargetRefProps {
	if x != nil {
		return x.SingleTargetRefProps
	}
	return nil
}

func (x *BatchObject_Properties) GetMultiTargetRefProps() []*BatchObject_MultiTargetRefProps {
	if x != nil {
		return x.MultiTargetRefProps
	}
	return nil
}

func (x *BatchObject_Properties) GetNumberArrayProperties() []*NumberArrayProperties {
	if x != nil {
		return x.NumberArrayProperties
	}
	return nil
}

func (x *BatchObject_Properties) GetIntArrayProperties() []*IntArrayProperties {
	if x != nil {
		return x.IntArrayProperties
	}
	return nil
}

func (x *BatchObject_Properties) GetTextArrayProperties() []*TextArrayProperties {
	if x != nil {
		return x.TextArrayProperties
	}
	return nil
}

func (x *BatchObject_Properties) GetBooleanArrayProperties() []*BooleanArrayProperties {
	if x != nil {
		return x.BooleanArrayProperties
	}
	return nil
}

func (x *BatchObject_Properties) GetObjectProperties() []*ObjectProperties {
	if x != nil {
		return x.ObjectProperties
	}
	return nil
}

func (x *BatchObject_Properties) GetObjectArrayProperties() []*ObjectArrayProperties {
	if x != nil {
		return x.ObjectArrayProperties
	}
	return nil
}

func (x *BatchObject_Properties) GetEmptyListProps() []string {
	if x != nil {
		return x.EmptyListProps
	}
	return nil
}

type BatchObject_SingleTargetRefProps struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuids         []string               `protobuf:"bytes,1,rep,name=uuids,proto3" json:"uuids,omitempty"`
	PropName      string                 `protobuf:"bytes,2,opt,name=prop_name,json=propName,proto3" json:"prop_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchObject_SingleTargetRefProps) Reset() {
	*x = BatchObject_SingleTargetRefProps{}
	mi := &file_v1_batch_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchObject_SingleTargetRefProps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchObject_SingleTargetRefProps) ProtoMessage() {}

func (x *BatchObject_SingleTargetRefProps) ProtoReflect() protoreflect.Message {
	mi := &file_v1_batch_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchObject_SingleTargetRefProps.ProtoReflect.Descriptor instead.
func (*BatchObject_SingleTargetRefProps) Descriptor() ([]byte, []int) {
	return file_v1_batch_proto_rawDescGZIP(), []int{1, 1}
}

func (x *BatchObject_SingleTargetRefProps) GetUuids() []string {
	if x != nil {
		return x.Uuids
	}
	return nil
}

func (x *BatchObject_SingleTargetRefProps) GetPropName() string {
	if x != nil {
		return x.PropName
	}
	return ""
}

type BatchObject_MultiTargetRefProps struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Uuids            []string               `protobuf:"bytes,1,rep,name=uuids,proto3" json:"uuids,omitempty"`
	PropName         string                 `protobuf:"bytes,2,opt,name=prop_name,json=propName,proto3" json:"prop_name,omitempty"`
	TargetCollection string                 `protobuf:"bytes,3,opt,name=target_collection,json=targetCollection,proto3" json:"target_collection,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BatchObject_MultiTargetRefProps) Reset() {
	*x = BatchObject_MultiTargetRefProps{}
	mi := &file_v1_batch_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchObject_MultiTargetRefProps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchObject_MultiTargetRefProps) ProtoMessage() {}

func (x *BatchObject_MultiTargetRefProps) ProtoReflect() protoreflect.Message {
	mi := &file_v1_batch_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchObject_MultiTargetRefProps.ProtoReflect.Descriptor instead.
func (*BatchObject_MultiTargetRefProps) Descriptor() ([]byte, []int) {
	return file_v1_batch_proto_rawDescGZIP(), []int{1, 2}
}

func (x *BatchObject_MultiTargetRefProps) GetUuids() []string {
	if x != nil {
		return x.Uuids
	}
	return nil
}

func (x *BatchObject_MultiTargetRefProps) GetPropName() string {
	if x != nil {
		return x.PropName
	}
	return ""
}

func (x *BatchObject_MultiTargetRefProps) GetTargetCollection() string {
	if x != nil {
		return x.TargetCollection
	}
	return ""
}

type BatchObjectsReply_BatchError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchObjectsReply_BatchError) Reset() {
	*x = BatchObjectsReply_BatchError{}
	mi := &file_v1_batch_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchObjectsReply_BatchError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchObjectsReply_BatchError) ProtoMessage() {}

func (x *BatchObjectsReply_BatchError) ProtoReflect() protoreflect.Message {
	mi := &file_v1_batch_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchObjectsReply_BatchError.ProtoReflect.Descriptor instead.
func (*BatchObjectsReply_BatchError) Descriptor() ([]byte, []int) {
	return file_v1_batch_proto_rawDescGZIP(), []int{2, 0}
}

func (x *BatchObjectsReply_BatchError) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *BatchObjectsReply_BatchError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_v1_batch_proto protoreflect.FileDescriptor

const file_v1_batch_proto_rawDesc = "" +
	"\n" +
	"\x0ev1/batch.proto\x12\vweaviate.v1\x1a\x1cgoogle/protobuf/struct.proto\x1a\rv1/base.proto\"\xb0\x01\n" +
	"\x13BatchObjectsRequest\x122\n" +
	"\aobjects\x18\x01 \x03(\v2\x18.weaviate.v1.BatchObjectR\aobjects\x12O\n" +
	"\x11consistency_level\x18\x02 \x01(\x0e2\x1d.weaviate.v1.ConsistencyLevelH\x00R\x10consistencyLevel\x88\x01\x01B\x14\n" +
	"\x12_consistency_level\"\xa4\n" +
	"\n" +
	"\vBatchObject\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x1a\n" +
	"\x06vector\x18\x02 \x03(\x02B\x02\x18\x01R\x06vector\x12C\n" +
	"\n" +
	"properties\x18\x03 \x01(\v2#.weaviate.v1.BatchObject.PropertiesR\n" +
	"properties\x12\x1e\n" +
	"\n" +
	"collection\x18\x04 \x01(\tR\n" +
	"collection\x12\x16\n" +
	"\x06tenant\x18\x05 \x01(\tR\x06tenant\x12!\n" +
	"\fvector_bytes\x18\x06 \x01(\fR\vvectorBytes\x12.\n" +
	"\avectors\x18\x17 \x03(\v2\x14.weaviate.v1.VectorsR\avectors\x1a\xd2\x06\n" +
	"\n" +
	"Properties\x12E\n" +
	"\x12non_ref_properties\x18\x01 \x01(\v2\x17.google.protobuf.StructR\x10nonRefProperties\x12d\n" +
	"\x17single_target_ref_props\x18\x02 \x03(\v2-.weaviate.v1.BatchObject.SingleTargetRefPropsR\x14singleTargetRefProps\x12a\n" +
	"\x16multi_target_ref_props\x18\x03 \x03(\v2,.weaviate.v1.BatchObject.MultiTargetRefPropsR\x13multiTargetRefProps\x12Z\n" +
	"\x17number_array_properties\x18\x04 \x03(\v2\".weaviate.v1.NumberArrayPropertiesR\x15numberArrayProperties\x12Q\n" +
	"\x14int_array_properties\x18\x05 \x03(\v2\x1f.weaviate.v1.IntArrayPropertiesR\x12intArrayProperties\x12T\n" +
	"\x15text_array_properties\x18\x06 \x03(\v2 .weaviate.v1.TextArrayPropertiesR\x13textArrayProperties\x12]\n" +
	"\x18boolean_array_properties\x18\a \x03(\v2#.weaviate.v1.BooleanArrayPropertiesR\x16booleanArrayProperties\x12J\n" +
	"\x11object_properties\x18\b \x03(\v2\x1d.weaviate.v1.ObjectPropertiesR\x10objectProperties\x12Z\n" +
	"\x17object_array_properties\x18\t \x03(\v2\".weaviate.v1.ObjectArrayPropertiesR\x15objectArrayProperties\x12(\n" +
	"\x10empty_list_props\x18\n" +
	" \x03(\tR\x0eemptyListProps\x1aI\n" +
	"\x14SingleTargetRefProps\x12\x14\n" +
	"\x05uuids\x18\x01 \x03(\tR\x05uuids\x12\x1b\n" +
	"\tprop_name\x18\x02 \x01(\tR\bpropName\x1au\n" +
	"\x13MultiTargetRefProps\x12\x14\n" +
	"\x05uuids\x18\x01 \x03(\tR\x05uuids\x12\x1b\n" +
	"\tprop_name\x18\x02 \x01(\tR\bpropName\x12+\n" +
	"\x11target_collection\x18\x03 \x01(\tR\x10targetCollection\"\xa4\x01\n" +
	"\x11BatchObjectsReply\x12\x12\n" +
	"\x04took\x18\x01 \x01(\x02R\x04took\x12A\n" +
	"\x06errors\x18\x02 \x03(\v2).weaviate.v1.BatchObjectsReply.BatchErrorR\x06errors\x1a8\n" +
	"\n" +
	"BatchError\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05errorBo\n" +
	"#io.weaviate.client.grpc.protocol.v1B\x12WeaviateProtoBatchZ4github.com/weaviate/weaviate/grpc/generated;protocolb\x06proto3"

var (
	file_v1_batch_proto_rawDescOnce sync.Once
	file_v1_batch_proto_rawDescData []byte
)

func file_v1_batch_proto_rawDescGZIP() []byte {
	file_v1_batch_proto_rawDescOnce.Do(func() {
		file_v1_batch_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_batch_proto_rawDesc), len(file_v1_batch_proto_rawDesc)))
	})
	return file_v1_batch_proto_rawDescData
}

var (
	file_v1_batch_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
	file_v1_batch_proto_goTypes  = []any{
		(*BatchObjectsRequest)(nil),              // 0: weaviate.v1.BatchObjectsRequest
		(*BatchObject)(nil),                      // 1: weaviate.v1.BatchObject
		(*BatchObjectsReply)(nil),                // 2: weaviate.v1.BatchObjectsReply
		(*BatchObject_Properties)(nil),           // 3: weaviate.v1.BatchObject.Properties
		(*BatchObject_SingleTargetRefProps)(nil), // 4: weaviate.v1.BatchObject.SingleTargetRefProps
		(*BatchObject_MultiTargetRefProps)(nil),  // 5: weaviate.v1.BatchObject.MultiTargetRefProps
		(*BatchObjectsReply_BatchError)(nil),     // 6: weaviate.v1.BatchObjectsReply.BatchError
		(ConsistencyLevel)(0),                    // 7: weaviate.v1.ConsistencyLevel
		(*Vectors)(nil),                          // 8: weaviate.v1.Vectors
		(*structpb.Struct)(nil),                  // 9: google.protobuf.Struct
		(*NumberArrayProperties)(nil),            // 10: weaviate.v1.NumberArrayProperties
		(*IntArrayProperties)(nil),               // 11: weaviate.v1.IntArrayProperties
		(*TextArrayProperties)(nil),              // 12: weaviate.v1.TextArrayProperties
		(*BooleanArrayProperties)(nil),           // 13: weaviate.v1.BooleanArrayProperties
		(*ObjectProperties)(nil),                 // 14: weaviate.v1.ObjectProperties
		(*ObjectArrayProperties)(nil),            // 15: weaviate.v1.ObjectArrayProperties
	}
)

var file_v1_batch_proto_depIdxs = []int32{
	1,  // 0: weaviate.v1.BatchObjectsRequest.objects:type_name -> weaviate.v1.BatchObject
	7,  // 1: weaviate.v1.BatchObjectsRequest.consistency_level:type_name -> weaviate.v1.ConsistencyLevel
	3,  // 2: weaviate.v1.BatchObject.properties:type_name -> weaviate.v1.BatchObject.Properties
	8,  // 3: weaviate.v1.BatchObject.vectors:type_name -> weaviate.v1.Vectors
	6,  // 4: weaviate.v1.BatchObjectsReply.errors:type_name -> weaviate.v1.BatchObjectsReply.BatchError
	9,  // 5: weaviate.v1.BatchObject.Properties.non_ref_properties:type_name -> google.protobuf.Struct
	4,  // 6: weaviate.v1.BatchObject.Properties.single_target_ref_props:type_name -> weaviate.v1.BatchObject.SingleTargetRefProps
	5,  // 7: weaviate.v1.BatchObject.Properties.multi_target_ref_props:type_name -> weaviate.v1.BatchObject.MultiTargetRefProps
	10, // 8: weaviate.v1.BatchObject.Properties.number_array_properties:type_name -> weaviate.v1.NumberArrayProperties
	11, // 9: weaviate.v1.BatchObject.Properties.int_array_properties:type_name -> weaviate.v1.IntArrayProperties
	12, // 10: weaviate.v1.BatchObject.Properties.text_array_properties:type_name -> weaviate.v1.TextArrayProperties
	13, // 11: weaviate.v1.BatchObject.Properties.boolean_array_properties:type_name -> weaviate.v1.BooleanArrayProperties
	14, // 12: weaviate.v1.BatchObject.Properties.object_properties:type_name -> weaviate.v1.ObjectProperties
	15, // 13: weaviate.v1.BatchObject.Properties.object_array_properties:type_name -> weaviate.v1.ObjectArrayProperties
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_v1_batch_proto_init() }
func file_v1_batch_proto_init() {
	if File_v1_batch_proto != nil {
		return
	}
	file_v1_base_proto_init()
	file_v1_batch_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_batch_proto_rawDesc), len(file_v1_batch_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_batch_proto_goTypes,
		DependencyIndexes: file_v1_batch_proto_depIdxs,
		MessageInfos:      file_v1_batch_proto_msgTypes,
	}.Build()
	File_v1_batch_proto = out.File
	file_v1_batch_proto_goTypes = nil
	file_v1_batch_proto_depIdxs = nil
}
