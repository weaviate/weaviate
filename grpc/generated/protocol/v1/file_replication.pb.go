// Code generated by protoc-gen-go. DO NOT EDIT.

package protocol

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CompressionType int32

const (
	CompressionType_COMPRESSION_TYPE_UNSPECIFIED CompressionType = 0 // No compression
	CompressionType_COMPRESSION_TYPE_GZIP        CompressionType = 1 // gzip (compress/gzip)
	CompressionType_COMPRESSION_TYPE_ZLIB        CompressionType = 2 // zlib (compress/zlib)
	CompressionType_COMPRESSION_TYPE_DEFLATE     CompressionType = 3 // raw DEFLATE (compress/flate)
)

// Enum value maps for CompressionType.
var (
	CompressionType_name = map[int32]string{
		0: "COMPRESSION_TYPE_UNSPECIFIED",
		1: "COMPRESSION_TYPE_GZIP",
		2: "COMPRESSION_TYPE_ZLIB",
		3: "COMPRESSION_TYPE_DEFLATE",
	}
	CompressionType_value = map[string]int32{
		"COMPRESSION_TYPE_UNSPECIFIED": 0,
		"COMPRESSION_TYPE_GZIP":        1,
		"COMPRESSION_TYPE_ZLIB":        2,
		"COMPRESSION_TYPE_DEFLATE":     3,
	}
)

func (x CompressionType) Enum() *CompressionType {
	p := new(CompressionType)
	*p = x
	return p
}

func (x CompressionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompressionType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_file_replication_proto_enumTypes[0].Descriptor()
}

func (CompressionType) Type() protoreflect.EnumType {
	return &file_v1_file_replication_proto_enumTypes[0]
}

func (x CompressionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompressionType.Descriptor instead.
func (CompressionType) EnumDescriptor() ([]byte, []int) {
	return file_v1_file_replication_proto_rawDescGZIP(), []int{0}
}

type PauseFileActivityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexName     string                 `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	ShardName     string                 `protobuf:"bytes,2,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	SchemaVersion uint64                 `protobuf:"varint,3,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseFileActivityRequest) Reset() {
	*x = PauseFileActivityRequest{}
	mi := &file_v1_file_replication_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseFileActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseFileActivityRequest) ProtoMessage() {}

func (x *PauseFileActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_file_replication_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseFileActivityRequest.ProtoReflect.Descriptor instead.
func (*PauseFileActivityRequest) Descriptor() ([]byte, []int) {
	return file_v1_file_replication_proto_rawDescGZIP(), []int{0}
}

func (x *PauseFileActivityRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *PauseFileActivityRequest) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

func (x *PauseFileActivityRequest) GetSchemaVersion() uint64 {
	if x != nil {
		return x.SchemaVersion
	}
	return 0
}

type PauseFileActivityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexName     string                 `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	ShardName     string                 `protobuf:"bytes,2,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseFileActivityResponse) Reset() {
	*x = PauseFileActivityResponse{}
	mi := &file_v1_file_replication_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseFileActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseFileActivityResponse) ProtoMessage() {}

func (x *PauseFileActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_file_replication_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseFileActivityResponse.ProtoReflect.Descriptor instead.
func (*PauseFileActivityResponse) Descriptor() ([]byte, []int) {
	return file_v1_file_replication_proto_rawDescGZIP(), []int{1}
}

func (x *PauseFileActivityResponse) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *PauseFileActivityResponse) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

type ResumeFileActivityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexName     string                 `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	ShardName     string                 `protobuf:"bytes,2,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResumeFileActivityRequest) Reset() {
	*x = ResumeFileActivityRequest{}
	mi := &file_v1_file_replication_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeFileActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeFileActivityRequest) ProtoMessage() {}

func (x *ResumeFileActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_file_replication_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeFileActivityRequest.ProtoReflect.Descriptor instead.
func (*ResumeFileActivityRequest) Descriptor() ([]byte, []int) {
	return file_v1_file_replication_proto_rawDescGZIP(), []int{2}
}

func (x *ResumeFileActivityRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *ResumeFileActivityRequest) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

type ResumeFileActivityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexName     string                 `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	ShardName     string                 `protobuf:"bytes,2,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResumeFileActivityResponse) Reset() {
	*x = ResumeFileActivityResponse{}
	mi := &file_v1_file_replication_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeFileActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeFileActivityResponse) ProtoMessage() {}

func (x *ResumeFileActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_file_replication_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeFileActivityResponse.ProtoReflect.Descriptor instead.
func (*ResumeFileActivityResponse) Descriptor() ([]byte, []int) {
	return file_v1_file_replication_proto_rawDescGZIP(), []int{3}
}

func (x *ResumeFileActivityResponse) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *ResumeFileActivityResponse) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

type ListFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexName     string                 `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	ShardName     string                 `protobuf:"bytes,2,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesRequest) Reset() {
	*x = ListFilesRequest{}
	mi := &file_v1_file_replication_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesRequest) ProtoMessage() {}

func (x *ListFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_file_replication_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesRequest.ProtoReflect.Descriptor instead.
func (*ListFilesRequest) Descriptor() ([]byte, []int) {
	return file_v1_file_replication_proto_rawDescGZIP(), []int{4}
}

func (x *ListFilesRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *ListFilesRequest) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

type ListFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexName     string                 `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	ShardName     string                 `protobuf:"bytes,2,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	FileNames     []string               `protobuf:"bytes,3,rep,name=file_names,json=fileNames,proto3" json:"file_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesResponse) Reset() {
	*x = ListFilesResponse{}
	mi := &file_v1_file_replication_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesResponse) ProtoMessage() {}

func (x *ListFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_file_replication_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesResponse.ProtoReflect.Descriptor instead.
func (*ListFilesResponse) Descriptor() ([]byte, []int) {
	return file_v1_file_replication_proto_rawDescGZIP(), []int{5}
}

func (x *ListFilesResponse) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *ListFilesResponse) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

func (x *ListFilesResponse) GetFileNames() []string {
	if x != nil {
		return x.FileNames
	}
	return nil
}

type GetFileMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexName     string                 `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	ShardName     string                 `protobuf:"bytes,2,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	FileName      string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileMetadataRequest) Reset() {
	*x = GetFileMetadataRequest{}
	mi := &file_v1_file_replication_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileMetadataRequest) ProtoMessage() {}

func (x *GetFileMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_file_replication_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetFileMetadataRequest) Descriptor() ([]byte, []int) {
	return file_v1_file_replication_proto_rawDescGZIP(), []int{6}
}

func (x *GetFileMetadataRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *GetFileMetadataRequest) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

func (x *GetFileMetadataRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type FileMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexName     string                 `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	ShardName     string                 `protobuf:"bytes,2,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	FileName      string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Crc32         uint32                 `protobuf:"varint,5,opt,name=crc32,proto3" json:"crc32,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileMetadata) Reset() {
	*x = FileMetadata{}
	mi := &file_v1_file_replication_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetadata) ProtoMessage() {}

func (x *FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_v1_file_replication_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetadata.ProtoReflect.Descriptor instead.
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return file_v1_file_replication_proto_rawDescGZIP(), []int{7}
}

func (x *FileMetadata) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *FileMetadata) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

func (x *FileMetadata) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileMetadata) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileMetadata) GetCrc32() uint32 {
	if x != nil {
		return x.Crc32
	}
	return 0
}

type GetFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexName     string                 `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	ShardName     string                 `protobuf:"bytes,2,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	FileName      string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Compression   CompressionType        `protobuf:"varint,4,opt,name=compression,proto3,enum=weaviate.v1.CompressionType" json:"compression,omitempty"` // Requested compression algorithm for streamed chunks
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileRequest) Reset() {
	*x = GetFileRequest{}
	mi := &file_v1_file_replication_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileRequest) ProtoMessage() {}

func (x *GetFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_file_replication_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileRequest.ProtoReflect.Descriptor instead.
func (*GetFileRequest) Descriptor() ([]byte, []int) {
	return file_v1_file_replication_proto_rawDescGZIP(), []int{8}
}

func (x *GetFileRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *GetFileRequest) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

func (x *GetFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *GetFileRequest) GetCompression() CompressionType {
	if x != nil {
		return x.Compression
	}
	return CompressionType_COMPRESSION_TYPE_UNSPECIFIED
}

type FileChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offset        int64                  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"` // Byte offset in the uncompressed file
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`      // Compressed or raw chunk data
	Eof           bool                   `protobuf:"varint,3,opt,name=eof,proto3" json:"eof,omitempty"`       // Indicates final chunk
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	mi := &file_v1_file_replication_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_v1_file_replication_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_v1_file_replication_proto_rawDescGZIP(), []int{9}
}

func (x *FileChunk) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FileChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileChunk) GetEof() bool {
	if x != nil {
		return x.Eof
	}
	return false
}

var File_v1_file_replication_proto protoreflect.FileDescriptor

const file_v1_file_replication_proto_rawDesc = "" +
	"\n" +
	"\x19v1/file_replication.proto\x12\vweaviate.v1\"\x7f\n" +
	"\x18PauseFileActivityRequest\x12\x1d\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tR\tindexName\x12\x1d\n" +
	"\n" +
	"shard_name\x18\x02 \x01(\tR\tshardName\x12%\n" +
	"\x0eschema_version\x18\x03 \x01(\x04R\rschemaVersion\"Y\n" +
	"\x19PauseFileActivityResponse\x12\x1d\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tR\tindexName\x12\x1d\n" +
	"\n" +
	"shard_name\x18\x02 \x01(\tR\tshardName\"Y\n" +
	"\x19ResumeFileActivityRequest\x12\x1d\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tR\tindexName\x12\x1d\n" +
	"\n" +
	"shard_name\x18\x02 \x01(\tR\tshardName\"Z\n" +
	"\x1aResumeFileActivityResponse\x12\x1d\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tR\tindexName\x12\x1d\n" +
	"\n" +
	"shard_name\x18\x02 \x01(\tR\tshardName\"P\n" +
	"\x10ListFilesRequest\x12\x1d\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tR\tindexName\x12\x1d\n" +
	"\n" +
	"shard_name\x18\x02 \x01(\tR\tshardName\"p\n" +
	"\x11ListFilesResponse\x12\x1d\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tR\tindexName\x12\x1d\n" +
	"\n" +
	"shard_name\x18\x02 \x01(\tR\tshardName\x12\x1d\n" +
	"\n" +
	"file_names\x18\x03 \x03(\tR\tfileNames\"s\n" +
	"\x16GetFileMetadataRequest\x12\x1d\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tR\tindexName\x12\x1d\n" +
	"\n" +
	"shard_name\x18\x02 \x01(\tR\tshardName\x12\x1b\n" +
	"\tfile_name\x18\x03 \x01(\tR\bfileName\"\x93\x01\n" +
	"\fFileMetadata\x12\x1d\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tR\tindexName\x12\x1d\n" +
	"\n" +
	"shard_name\x18\x02 \x01(\tR\tshardName\x12\x1b\n" +
	"\tfile_name\x18\x03 \x01(\tR\bfileName\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12\x14\n" +
	"\x05crc32\x18\x05 \x01(\rR\x05crc32\"\xab\x01\n" +
	"\x0eGetFileRequest\x12\x1d\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tR\tindexName\x12\x1d\n" +
	"\n" +
	"shard_name\x18\x02 \x01(\tR\tshardName\x12\x1b\n" +
	"\tfile_name\x18\x03 \x01(\tR\bfileName\x12>\n" +
	"\vcompression\x18\x04 \x01(\x0e2\x1c.weaviate.v1.CompressionTypeR\vcompression\"I\n" +
	"\tFileChunk\x12\x16\n" +
	"\x06offset\x18\x01 \x01(\x03R\x06offset\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x10\n" +
	"\x03eof\x18\x03 \x01(\bR\x03eof*\x87\x01\n" +
	"\x0fCompressionType\x12 \n" +
	"\x1cCOMPRESSION_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15COMPRESSION_TYPE_GZIP\x10\x01\x12\x19\n" +
	"\x15COMPRESSION_TYPE_ZLIB\x10\x02\x12\x1c\n" +
	"\x18COMPRESSION_TYPE_DEFLATE\x10\x032\xca\x03\n" +
	"\x16FileReplicationService\x12b\n" +
	"\x11PauseFileActivity\x12%.weaviate.v1.PauseFileActivityRequest\x1a&.weaviate.v1.PauseFileActivityResponse\x12e\n" +
	"\x12ResumeFileActivity\x12&.weaviate.v1.ResumeFileActivityRequest\x1a'.weaviate.v1.ResumeFileActivityResponse\x12J\n" +
	"\tListFiles\x12\x1d.weaviate.v1.ListFilesRequest\x1a\x1e.weaviate.v1.ListFilesResponse\x12U\n" +
	"\x0fGetFileMetadata\x12#.weaviate.v1.GetFileMetadataRequest\x1a\x19.weaviate.v1.FileMetadata(\x010\x01\x12B\n" +
	"\aGetFile\x12\x1b.weaviate.v1.GetFileRequest\x1a\x16.weaviate.v1.FileChunk(\x010\x01Bj\n" +
	"#io.weaviate.client.grpc.protocol.v1B\rWeaviateProtoZ4github.com/weaviate/weaviate/grpc/generated;protocolb\x06proto3"

var (
	file_v1_file_replication_proto_rawDescOnce sync.Once
	file_v1_file_replication_proto_rawDescData []byte
)

func file_v1_file_replication_proto_rawDescGZIP() []byte {
	file_v1_file_replication_proto_rawDescOnce.Do(func() {
		file_v1_file_replication_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_file_replication_proto_rawDesc), len(file_v1_file_replication_proto_rawDesc)))
	})
	return file_v1_file_replication_proto_rawDescData
}

var file_v1_file_replication_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_file_replication_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_v1_file_replication_proto_goTypes = []any{
	(CompressionType)(0),               // 0: weaviate.v1.CompressionType
	(*PauseFileActivityRequest)(nil),   // 1: weaviate.v1.PauseFileActivityRequest
	(*PauseFileActivityResponse)(nil),  // 2: weaviate.v1.PauseFileActivityResponse
	(*ResumeFileActivityRequest)(nil),  // 3: weaviate.v1.ResumeFileActivityRequest
	(*ResumeFileActivityResponse)(nil), // 4: weaviate.v1.ResumeFileActivityResponse
	(*ListFilesRequest)(nil),           // 5: weaviate.v1.ListFilesRequest
	(*ListFilesResponse)(nil),          // 6: weaviate.v1.ListFilesResponse
	(*GetFileMetadataRequest)(nil),     // 7: weaviate.v1.GetFileMetadataRequest
	(*FileMetadata)(nil),               // 8: weaviate.v1.FileMetadata
	(*GetFileRequest)(nil),             // 9: weaviate.v1.GetFileRequest
	(*FileChunk)(nil),                  // 10: weaviate.v1.FileChunk
}
var file_v1_file_replication_proto_depIdxs = []int32{
	0,  // 0: weaviate.v1.GetFileRequest.compression:type_name -> weaviate.v1.CompressionType
	1,  // 1: weaviate.v1.FileReplicationService.PauseFileActivity:input_type -> weaviate.v1.PauseFileActivityRequest
	3,  // 2: weaviate.v1.FileReplicationService.ResumeFileActivity:input_type -> weaviate.v1.ResumeFileActivityRequest
	5,  // 3: weaviate.v1.FileReplicationService.ListFiles:input_type -> weaviate.v1.ListFilesRequest
	7,  // 4: weaviate.v1.FileReplicationService.GetFileMetadata:input_type -> weaviate.v1.GetFileMetadataRequest
	9,  // 5: weaviate.v1.FileReplicationService.GetFile:input_type -> weaviate.v1.GetFileRequest
	2,  // 6: weaviate.v1.FileReplicationService.PauseFileActivity:output_type -> weaviate.v1.PauseFileActivityResponse
	4,  // 7: weaviate.v1.FileReplicationService.ResumeFileActivity:output_type -> weaviate.v1.ResumeFileActivityResponse
	6,  // 8: weaviate.v1.FileReplicationService.ListFiles:output_type -> weaviate.v1.ListFilesResponse
	8,  // 9: weaviate.v1.FileReplicationService.GetFileMetadata:output_type -> weaviate.v1.FileMetadata
	10, // 10: weaviate.v1.FileReplicationService.GetFile:output_type -> weaviate.v1.FileChunk
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_v1_file_replication_proto_init() }
func file_v1_file_replication_proto_init() {
	if File_v1_file_replication_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_file_replication_proto_rawDesc), len(file_v1_file_replication_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_file_replication_proto_goTypes,
		DependencyIndexes: file_v1_file_replication_proto_depIdxs,
		EnumInfos:         file_v1_file_replication_proto_enumTypes,
		MessageInfos:      file_v1_file_replication_proto_msgTypes,
	}.Build()
	File_v1_file_replication_proto = out.File
	file_v1_file_replication_proto_goTypes = nil
	file_v1_file_replication_proto_depIdxs = nil
}
