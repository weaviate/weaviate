// Code generated by protoc-gen-go. DO NOT EDIT.

package protocol

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CombinationMethod int32

const (
	CombinationMethod_COMBINATION_METHOD_UNSPECIFIED         CombinationMethod = 0
	CombinationMethod_COMBINATION_METHOD_TYPE_SUM            CombinationMethod = 1
	CombinationMethod_COMBINATION_METHOD_TYPE_MIN            CombinationMethod = 2
	CombinationMethod_COMBINATION_METHOD_TYPE_AVERAGE        CombinationMethod = 3
	CombinationMethod_COMBINATION_METHOD_TYPE_RELATIVE_SCORE CombinationMethod = 4
	CombinationMethod_COMBINATION_METHOD_TYPE_MANUAL         CombinationMethod = 5
)

// Enum value maps for CombinationMethod.
var (
	CombinationMethod_name = map[int32]string{
		0: "COMBINATION_METHOD_UNSPECIFIED",
		1: "COMBINATION_METHOD_TYPE_SUM",
		2: "COMBINATION_METHOD_TYPE_MIN",
		3: "COMBINATION_METHOD_TYPE_AVERAGE",
		4: "COMBINATION_METHOD_TYPE_RELATIVE_SCORE",
		5: "COMBINATION_METHOD_TYPE_MANUAL",
	}
	CombinationMethod_value = map[string]int32{
		"COMBINATION_METHOD_UNSPECIFIED":         0,
		"COMBINATION_METHOD_TYPE_SUM":            1,
		"COMBINATION_METHOD_TYPE_MIN":            2,
		"COMBINATION_METHOD_TYPE_AVERAGE":        3,
		"COMBINATION_METHOD_TYPE_RELATIVE_SCORE": 4,
		"COMBINATION_METHOD_TYPE_MANUAL":         5,
	}
)

func (x CombinationMethod) Enum() *CombinationMethod {
	p := new(CombinationMethod)
	*p = x
	return p
}

func (x CombinationMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CombinationMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_base_search_proto_enumTypes[0].Descriptor()
}

func (CombinationMethod) Type() protoreflect.EnumType {
	return &file_v1_base_search_proto_enumTypes[0]
}

func (x CombinationMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CombinationMethod.Descriptor instead.
func (CombinationMethod) EnumDescriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{0}
}

type SearchOperatorOptions_Operator int32

const (
	SearchOperatorOptions_OPERATOR_UNSPECIFIED SearchOperatorOptions_Operator = 0
	SearchOperatorOptions_OPERATOR_OR          SearchOperatorOptions_Operator = 1
	SearchOperatorOptions_OPERATOR_AND         SearchOperatorOptions_Operator = 2
)

// Enum value maps for SearchOperatorOptions_Operator.
var (
	SearchOperatorOptions_Operator_name = map[int32]string{
		0: "OPERATOR_UNSPECIFIED",
		1: "OPERATOR_OR",
		2: "OPERATOR_AND",
	}
	SearchOperatorOptions_Operator_value = map[string]int32{
		"OPERATOR_UNSPECIFIED": 0,
		"OPERATOR_OR":          1,
		"OPERATOR_AND":         2,
	}
)

func (x SearchOperatorOptions_Operator) Enum() *SearchOperatorOptions_Operator {
	p := new(SearchOperatorOptions_Operator)
	*p = x
	return p
}

func (x SearchOperatorOptions_Operator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchOperatorOptions_Operator) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_base_search_proto_enumTypes[1].Descriptor()
}

func (SearchOperatorOptions_Operator) Type() protoreflect.EnumType {
	return &file_v1_base_search_proto_enumTypes[1]
}

func (x SearchOperatorOptions_Operator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchOperatorOptions_Operator.Descriptor instead.
func (SearchOperatorOptions_Operator) EnumDescriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{3, 0}
}

type Hybrid_FusionType int32

const (
	Hybrid_FUSION_TYPE_UNSPECIFIED    Hybrid_FusionType = 0
	Hybrid_FUSION_TYPE_RANKED         Hybrid_FusionType = 1
	Hybrid_FUSION_TYPE_RELATIVE_SCORE Hybrid_FusionType = 2
)

// Enum value maps for Hybrid_FusionType.
var (
	Hybrid_FusionType_name = map[int32]string{
		0: "FUSION_TYPE_UNSPECIFIED",
		1: "FUSION_TYPE_RANKED",
		2: "FUSION_TYPE_RELATIVE_SCORE",
	}
	Hybrid_FusionType_value = map[string]int32{
		"FUSION_TYPE_UNSPECIFIED":    0,
		"FUSION_TYPE_RANKED":         1,
		"FUSION_TYPE_RELATIVE_SCORE": 2,
	}
)

func (x Hybrid_FusionType) Enum() *Hybrid_FusionType {
	p := new(Hybrid_FusionType)
	*p = x
	return p
}

func (x Hybrid_FusionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Hybrid_FusionType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_base_search_proto_enumTypes[2].Descriptor()
}

func (Hybrid_FusionType) Type() protoreflect.EnumType {
	return &file_v1_base_search_proto_enumTypes[2]
}

func (x Hybrid_FusionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Hybrid_FusionType.Descriptor instead.
func (Hybrid_FusionType) EnumDescriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{4, 0}
}

type WeightsForTarget struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        string                 `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Weight        float32                `protobuf:"fixed32,2,opt,name=weight,proto3" json:"weight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WeightsForTarget) Reset() {
	*x = WeightsForTarget{}
	mi := &file_v1_base_search_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeightsForTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeightsForTarget) ProtoMessage() {}

func (x *WeightsForTarget) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeightsForTarget.ProtoReflect.Descriptor instead.
func (*WeightsForTarget) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{0}
}

func (x *WeightsForTarget) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *WeightsForTarget) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type Targets struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetVectors []string               `protobuf:"bytes,1,rep,name=target_vectors,json=targetVectors,proto3" json:"target_vectors,omitempty"`
	Combination   CombinationMethod      `protobuf:"varint,2,opt,name=combination,proto3,enum=weaviate.v1.CombinationMethod" json:"combination,omitempty"`
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	Weights           map[string]float32  `protobuf:"bytes,3,rep,name=weights,proto3" json:"weights,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"` // deprecated in 1.26.2 - use weights_for_targets
	WeightsForTargets []*WeightsForTarget `protobuf:"bytes,4,rep,name=weights_for_targets,json=weightsForTargets,proto3" json:"weights_for_targets,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Targets) Reset() {
	*x = Targets{}
	mi := &file_v1_base_search_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Targets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Targets) ProtoMessage() {}

func (x *Targets) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Targets.ProtoReflect.Descriptor instead.
func (*Targets) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{1}
}

func (x *Targets) GetTargetVectors() []string {
	if x != nil {
		return x.TargetVectors
	}
	return nil
}

func (x *Targets) GetCombination() CombinationMethod {
	if x != nil {
		return x.Combination
	}
	return CombinationMethod_COMBINATION_METHOD_UNSPECIFIED
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *Targets) GetWeights() map[string]float32 {
	if x != nil {
		return x.Weights
	}
	return nil
}

func (x *Targets) GetWeightsForTargets() []*WeightsForTarget {
	if x != nil {
		return x.WeightsForTargets
	}
	return nil
}

type VectorForTarget struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	VectorBytes   []byte     `protobuf:"bytes,2,opt,name=vector_bytes,json=vectorBytes,proto3" json:"vector_bytes,omitempty"` // deprecated in 1.29.0 - use vectors
	Vectors       []*Vectors `protobuf:"bytes,3,rep,name=vectors,proto3" json:"vectors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VectorForTarget) Reset() {
	*x = VectorForTarget{}
	mi := &file_v1_base_search_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VectorForTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VectorForTarget) ProtoMessage() {}

func (x *VectorForTarget) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VectorForTarget.ProtoReflect.Descriptor instead.
func (*VectorForTarget) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{2}
}

func (x *VectorForTarget) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *VectorForTarget) GetVectorBytes() []byte {
	if x != nil {
		return x.VectorBytes
	}
	return nil
}

func (x *VectorForTarget) GetVectors() []*Vectors {
	if x != nil {
		return x.Vectors
	}
	return nil
}

type SearchOperatorOptions struct {
	state                protoimpl.MessageState         `protogen:"open.v1"`
	Operator             SearchOperatorOptions_Operator `protobuf:"varint,1,opt,name=operator,proto3,enum=weaviate.v1.SearchOperatorOptions_Operator" json:"operator,omitempty"`
	MinimumOrTokensMatch *int32                         `protobuf:"varint,2,opt,name=minimum_or_tokens_match,json=minimumOrTokensMatch,proto3,oneof" json:"minimum_or_tokens_match,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SearchOperatorOptions) Reset() {
	*x = SearchOperatorOptions{}
	mi := &file_v1_base_search_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchOperatorOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOperatorOptions) ProtoMessage() {}

func (x *SearchOperatorOptions) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOperatorOptions.ProtoReflect.Descriptor instead.
func (*SearchOperatorOptions) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{3}
}

func (x *SearchOperatorOptions) GetOperator() SearchOperatorOptions_Operator {
	if x != nil {
		return x.Operator
	}
	return SearchOperatorOptions_OPERATOR_UNSPECIFIED
}

func (x *SearchOperatorOptions) GetMinimumOrTokensMatch() int32 {
	if x != nil && x.MinimumOrTokensMatch != nil {
		return *x.MinimumOrTokensMatch
	}
	return 0
}

type Hybrid struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Query      string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Properties []string               `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty"`
	// protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
	//
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	Vector     []float32         `protobuf:"fixed32,3,rep,packed,name=vector,proto3" json:"vector,omitempty"` // will be removed in the future, use vectors
	Alpha      float32           `protobuf:"fixed32,4,opt,name=alpha,proto3" json:"alpha,omitempty"`
	FusionType Hybrid_FusionType `protobuf:"varint,5,opt,name=fusion_type,json=fusionType,proto3,enum=weaviate.v1.Hybrid_FusionType" json:"fusion_type,omitempty"`
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	VectorBytes []byte `protobuf:"bytes,6,opt,name=vector_bytes,json=vectorBytes,proto3" json:"vector_bytes,omitempty"` // deprecated in 1.29.0 - use vectors
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	TargetVectors      []string               `protobuf:"bytes,7,rep,name=target_vectors,json=targetVectors,proto3" json:"target_vectors,omitempty"` // deprecated in 1.26 - use targets
	NearText           *NearTextSearch        `protobuf:"bytes,8,opt,name=near_text,json=nearText,proto3" json:"near_text,omitempty"`                // targets in msg is ignored and should not be set for hybrid
	NearVector         *NearVector            `protobuf:"bytes,9,opt,name=near_vector,json=nearVector,proto3" json:"near_vector,omitempty"`          // same as above. Use the target vector in the hybrid message
	Targets            *Targets               `protobuf:"bytes,10,opt,name=targets,proto3" json:"targets,omitempty"`
	Bm25SearchOperator *SearchOperatorOptions `protobuf:"bytes,11,opt,name=bm25_search_operator,json=bm25SearchOperator,proto3,oneof" json:"bm25_search_operator,omitempty"`
	// only vector distance, but keep it extendable
	//
	// Types that are valid to be assigned to Threshold:
	//
	//	*Hybrid_VectorDistance
	Threshold     isHybrid_Threshold `protobuf_oneof:"threshold"`
	Vectors       []*Vectors         `protobuf:"bytes,21,rep,name=vectors,proto3" json:"vectors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Hybrid) Reset() {
	*x = Hybrid{}
	mi := &file_v1_base_search_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Hybrid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hybrid) ProtoMessage() {}

func (x *Hybrid) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hybrid.ProtoReflect.Descriptor instead.
func (*Hybrid) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{4}
}

func (x *Hybrid) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *Hybrid) GetProperties() []string {
	if x != nil {
		return x.Properties
	}
	return nil
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *Hybrid) GetVector() []float32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *Hybrid) GetAlpha() float32 {
	if x != nil {
		return x.Alpha
	}
	return 0
}

func (x *Hybrid) GetFusionType() Hybrid_FusionType {
	if x != nil {
		return x.FusionType
	}
	return Hybrid_FUSION_TYPE_UNSPECIFIED
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *Hybrid) GetVectorBytes() []byte {
	if x != nil {
		return x.VectorBytes
	}
	return nil
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *Hybrid) GetTargetVectors() []string {
	if x != nil {
		return x.TargetVectors
	}
	return nil
}

func (x *Hybrid) GetNearText() *NearTextSearch {
	if x != nil {
		return x.NearText
	}
	return nil
}

func (x *Hybrid) GetNearVector() *NearVector {
	if x != nil {
		return x.NearVector
	}
	return nil
}

func (x *Hybrid) GetTargets() *Targets {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *Hybrid) GetBm25SearchOperator() *SearchOperatorOptions {
	if x != nil {
		return x.Bm25SearchOperator
	}
	return nil
}

func (x *Hybrid) GetThreshold() isHybrid_Threshold {
	if x != nil {
		return x.Threshold
	}
	return nil
}

func (x *Hybrid) GetVectorDistance() float32 {
	if x != nil {
		if x, ok := x.Threshold.(*Hybrid_VectorDistance); ok {
			return x.VectorDistance
		}
	}
	return 0
}

func (x *Hybrid) GetVectors() []*Vectors {
	if x != nil {
		return x.Vectors
	}
	return nil
}

type isHybrid_Threshold interface {
	isHybrid_Threshold()
}

type Hybrid_VectorDistance struct {
	VectorDistance float32 `protobuf:"fixed32,20,opt,name=vector_distance,json=vectorDistance,proto3,oneof"`
}

func (*Hybrid_VectorDistance) isHybrid_Threshold() {}

type NearVector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
	//
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	Vector    []float32 `protobuf:"fixed32,1,rep,packed,name=vector,proto3" json:"vector,omitempty"` // will be removed in the future, use vectors
	Certainty *float64  `protobuf:"fixed64,2,opt,name=certainty,proto3,oneof" json:"certainty,omitempty"`
	Distance  *float64  `protobuf:"fixed64,3,opt,name=distance,proto3,oneof" json:"distance,omitempty"`
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	VectorBytes []byte `protobuf:"bytes,4,opt,name=vector_bytes,json=vectorBytes,proto3" json:"vector_bytes,omitempty"` // deprecated in 1.29.0 - use vectors
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	TargetVectors []string `protobuf:"bytes,5,rep,name=target_vectors,json=targetVectors,proto3" json:"target_vectors,omitempty"` // deprecated in 1.26 - use targets
	Targets       *Targets `protobuf:"bytes,6,opt,name=targets,proto3" json:"targets,omitempty"`
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	VectorPerTarget  map[string][]byte  `protobuf:"bytes,7,rep,name=vector_per_target,json=vectorPerTarget,proto3" json:"vector_per_target,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // deprecated in 1.26.2 - use vector_for_targets
	VectorForTargets []*VectorForTarget `protobuf:"bytes,8,rep,name=vector_for_targets,json=vectorForTargets,proto3" json:"vector_for_targets,omitempty"`
	Vectors          []*Vectors         `protobuf:"bytes,9,rep,name=vectors,proto3" json:"vectors,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NearVector) Reset() {
	*x = NearVector{}
	mi := &file_v1_base_search_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NearVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearVector) ProtoMessage() {}

func (x *NearVector) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearVector.ProtoReflect.Descriptor instead.
func (*NearVector) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{5}
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *NearVector) GetVector() []float32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *NearVector) GetCertainty() float64 {
	if x != nil && x.Certainty != nil {
		return *x.Certainty
	}
	return 0
}

func (x *NearVector) GetDistance() float64 {
	if x != nil && x.Distance != nil {
		return *x.Distance
	}
	return 0
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *NearVector) GetVectorBytes() []byte {
	if x != nil {
		return x.VectorBytes
	}
	return nil
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *NearVector) GetTargetVectors() []string {
	if x != nil {
		return x.TargetVectors
	}
	return nil
}

func (x *NearVector) GetTargets() *Targets {
	if x != nil {
		return x.Targets
	}
	return nil
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *NearVector) GetVectorPerTarget() map[string][]byte {
	if x != nil {
		return x.VectorPerTarget
	}
	return nil
}

func (x *NearVector) GetVectorForTargets() []*VectorForTarget {
	if x != nil {
		return x.VectorForTargets
	}
	return nil
}

func (x *NearVector) GetVectors() []*Vectors {
	if x != nil {
		return x.Vectors
	}
	return nil
}

type NearObject struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Certainty *float64               `protobuf:"fixed64,2,opt,name=certainty,proto3,oneof" json:"certainty,omitempty"`
	Distance  *float64               `protobuf:"fixed64,3,opt,name=distance,proto3,oneof" json:"distance,omitempty"`
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	TargetVectors []string `protobuf:"bytes,4,rep,name=target_vectors,json=targetVectors,proto3" json:"target_vectors,omitempty"` // deprecated in 1.26 - use targets
	Targets       *Targets `protobuf:"bytes,5,opt,name=targets,proto3" json:"targets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NearObject) Reset() {
	*x = NearObject{}
	mi := &file_v1_base_search_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NearObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearObject) ProtoMessage() {}

func (x *NearObject) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearObject.ProtoReflect.Descriptor instead.
func (*NearObject) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{6}
}

func (x *NearObject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NearObject) GetCertainty() float64 {
	if x != nil && x.Certainty != nil {
		return *x.Certainty
	}
	return 0
}

func (x *NearObject) GetDistance() float64 {
	if x != nil && x.Distance != nil {
		return *x.Distance
	}
	return 0
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *NearObject) GetTargetVectors() []string {
	if x != nil {
		return x.TargetVectors
	}
	return nil
}

func (x *NearObject) GetTargets() *Targets {
	if x != nil {
		return x.Targets
	}
	return nil
}

type NearTextSearch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
	Query     []string             `protobuf:"bytes,1,rep,name=query,proto3" json:"query,omitempty"`
	Certainty *float64             `protobuf:"fixed64,2,opt,name=certainty,proto3,oneof" json:"certainty,omitempty"`
	Distance  *float64             `protobuf:"fixed64,3,opt,name=distance,proto3,oneof" json:"distance,omitempty"`
	MoveTo    *NearTextSearch_Move `protobuf:"bytes,4,opt,name=move_to,json=moveTo,proto3,oneof" json:"move_to,omitempty"`
	MoveAway  *NearTextSearch_Move `protobuf:"bytes,5,opt,name=move_away,json=moveAway,proto3,oneof" json:"move_away,omitempty"`
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	TargetVectors []string `protobuf:"bytes,6,rep,name=target_vectors,json=targetVectors,proto3" json:"target_vectors,omitempty"` // deprecated in 1.26 - use targets
	Targets       *Targets `protobuf:"bytes,7,opt,name=targets,proto3" json:"targets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NearTextSearch) Reset() {
	*x = NearTextSearch{}
	mi := &file_v1_base_search_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NearTextSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearTextSearch) ProtoMessage() {}

func (x *NearTextSearch) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearTextSearch.ProtoReflect.Descriptor instead.
func (*NearTextSearch) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{7}
}

func (x *NearTextSearch) GetQuery() []string {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *NearTextSearch) GetCertainty() float64 {
	if x != nil && x.Certainty != nil {
		return *x.Certainty
	}
	return 0
}

func (x *NearTextSearch) GetDistance() float64 {
	if x != nil && x.Distance != nil {
		return *x.Distance
	}
	return 0
}

func (x *NearTextSearch) GetMoveTo() *NearTextSearch_Move {
	if x != nil {
		return x.MoveTo
	}
	return nil
}

func (x *NearTextSearch) GetMoveAway() *NearTextSearch_Move {
	if x != nil {
		return x.MoveAway
	}
	return nil
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *NearTextSearch) GetTargetVectors() []string {
	if x != nil {
		return x.TargetVectors
	}
	return nil
}

func (x *NearTextSearch) GetTargets() *Targets {
	if x != nil {
		return x.Targets
	}
	return nil
}

type NearImageSearch struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Image     string                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Certainty *float64               `protobuf:"fixed64,2,opt,name=certainty,proto3,oneof" json:"certainty,omitempty"`
	Distance  *float64               `protobuf:"fixed64,3,opt,name=distance,proto3,oneof" json:"distance,omitempty"`
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	TargetVectors []string `protobuf:"bytes,4,rep,name=target_vectors,json=targetVectors,proto3" json:"target_vectors,omitempty"` // deprecated in 1.26 - use targets
	Targets       *Targets `protobuf:"bytes,5,opt,name=targets,proto3" json:"targets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NearImageSearch) Reset() {
	*x = NearImageSearch{}
	mi := &file_v1_base_search_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NearImageSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearImageSearch) ProtoMessage() {}

func (x *NearImageSearch) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearImageSearch.ProtoReflect.Descriptor instead.
func (*NearImageSearch) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{8}
}

func (x *NearImageSearch) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *NearImageSearch) GetCertainty() float64 {
	if x != nil && x.Certainty != nil {
		return *x.Certainty
	}
	return 0
}

func (x *NearImageSearch) GetDistance() float64 {
	if x != nil && x.Distance != nil {
		return *x.Distance
	}
	return 0
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *NearImageSearch) GetTargetVectors() []string {
	if x != nil {
		return x.TargetVectors
	}
	return nil
}

func (x *NearImageSearch) GetTargets() *Targets {
	if x != nil {
		return x.Targets
	}
	return nil
}

type NearAudioSearch struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Audio     string                 `protobuf:"bytes,1,opt,name=audio,proto3" json:"audio,omitempty"`
	Certainty *float64               `protobuf:"fixed64,2,opt,name=certainty,proto3,oneof" json:"certainty,omitempty"`
	Distance  *float64               `protobuf:"fixed64,3,opt,name=distance,proto3,oneof" json:"distance,omitempty"`
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	TargetVectors []string `protobuf:"bytes,4,rep,name=target_vectors,json=targetVectors,proto3" json:"target_vectors,omitempty"` // deprecated in 1.26 - use targets
	Targets       *Targets `protobuf:"bytes,5,opt,name=targets,proto3" json:"targets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NearAudioSearch) Reset() {
	*x = NearAudioSearch{}
	mi := &file_v1_base_search_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NearAudioSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearAudioSearch) ProtoMessage() {}

func (x *NearAudioSearch) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearAudioSearch.ProtoReflect.Descriptor instead.
func (*NearAudioSearch) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{9}
}

func (x *NearAudioSearch) GetAudio() string {
	if x != nil {
		return x.Audio
	}
	return ""
}

func (x *NearAudioSearch) GetCertainty() float64 {
	if x != nil && x.Certainty != nil {
		return *x.Certainty
	}
	return 0
}

func (x *NearAudioSearch) GetDistance() float64 {
	if x != nil && x.Distance != nil {
		return *x.Distance
	}
	return 0
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *NearAudioSearch) GetTargetVectors() []string {
	if x != nil {
		return x.TargetVectors
	}
	return nil
}

func (x *NearAudioSearch) GetTargets() *Targets {
	if x != nil {
		return x.Targets
	}
	return nil
}

type NearVideoSearch struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Video     string                 `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`
	Certainty *float64               `protobuf:"fixed64,2,opt,name=certainty,proto3,oneof" json:"certainty,omitempty"`
	Distance  *float64               `protobuf:"fixed64,3,opt,name=distance,proto3,oneof" json:"distance,omitempty"`
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	TargetVectors []string `protobuf:"bytes,4,rep,name=target_vectors,json=targetVectors,proto3" json:"target_vectors,omitempty"` // deprecated in 1.26 - use targets
	Targets       *Targets `protobuf:"bytes,5,opt,name=targets,proto3" json:"targets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NearVideoSearch) Reset() {
	*x = NearVideoSearch{}
	mi := &file_v1_base_search_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NearVideoSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearVideoSearch) ProtoMessage() {}

func (x *NearVideoSearch) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearVideoSearch.ProtoReflect.Descriptor instead.
func (*NearVideoSearch) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{10}
}

func (x *NearVideoSearch) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *NearVideoSearch) GetCertainty() float64 {
	if x != nil && x.Certainty != nil {
		return *x.Certainty
	}
	return 0
}

func (x *NearVideoSearch) GetDistance() float64 {
	if x != nil && x.Distance != nil {
		return *x.Distance
	}
	return 0
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *NearVideoSearch) GetTargetVectors() []string {
	if x != nil {
		return x.TargetVectors
	}
	return nil
}

func (x *NearVideoSearch) GetTargets() *Targets {
	if x != nil {
		return x.Targets
	}
	return nil
}

type NearDepthSearch struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Depth     string                 `protobuf:"bytes,1,opt,name=depth,proto3" json:"depth,omitempty"`
	Certainty *float64               `protobuf:"fixed64,2,opt,name=certainty,proto3,oneof" json:"certainty,omitempty"`
	Distance  *float64               `protobuf:"fixed64,3,opt,name=distance,proto3,oneof" json:"distance,omitempty"`
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	TargetVectors []string `protobuf:"bytes,4,rep,name=target_vectors,json=targetVectors,proto3" json:"target_vectors,omitempty"` // deprecated in 1.26 - use targets
	Targets       *Targets `protobuf:"bytes,5,opt,name=targets,proto3" json:"targets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NearDepthSearch) Reset() {
	*x = NearDepthSearch{}
	mi := &file_v1_base_search_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NearDepthSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearDepthSearch) ProtoMessage() {}

func (x *NearDepthSearch) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearDepthSearch.ProtoReflect.Descriptor instead.
func (*NearDepthSearch) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{11}
}

func (x *NearDepthSearch) GetDepth() string {
	if x != nil {
		return x.Depth
	}
	return ""
}

func (x *NearDepthSearch) GetCertainty() float64 {
	if x != nil && x.Certainty != nil {
		return *x.Certainty
	}
	return 0
}

func (x *NearDepthSearch) GetDistance() float64 {
	if x != nil && x.Distance != nil {
		return *x.Distance
	}
	return 0
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *NearDepthSearch) GetTargetVectors() []string {
	if x != nil {
		return x.TargetVectors
	}
	return nil
}

func (x *NearDepthSearch) GetTargets() *Targets {
	if x != nil {
		return x.Targets
	}
	return nil
}

type NearThermalSearch struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Thermal   string                 `protobuf:"bytes,1,opt,name=thermal,proto3" json:"thermal,omitempty"`
	Certainty *float64               `protobuf:"fixed64,2,opt,name=certainty,proto3,oneof" json:"certainty,omitempty"`
	Distance  *float64               `protobuf:"fixed64,3,opt,name=distance,proto3,oneof" json:"distance,omitempty"`
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	TargetVectors []string `protobuf:"bytes,4,rep,name=target_vectors,json=targetVectors,proto3" json:"target_vectors,omitempty"` // deprecated in 1.26 - use targets
	Targets       *Targets `protobuf:"bytes,5,opt,name=targets,proto3" json:"targets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NearThermalSearch) Reset() {
	*x = NearThermalSearch{}
	mi := &file_v1_base_search_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NearThermalSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearThermalSearch) ProtoMessage() {}

func (x *NearThermalSearch) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearThermalSearch.ProtoReflect.Descriptor instead.
func (*NearThermalSearch) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{12}
}

func (x *NearThermalSearch) GetThermal() string {
	if x != nil {
		return x.Thermal
	}
	return ""
}

func (x *NearThermalSearch) GetCertainty() float64 {
	if x != nil && x.Certainty != nil {
		return *x.Certainty
	}
	return 0
}

func (x *NearThermalSearch) GetDistance() float64 {
	if x != nil && x.Distance != nil {
		return *x.Distance
	}
	return 0
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *NearThermalSearch) GetTargetVectors() []string {
	if x != nil {
		return x.TargetVectors
	}
	return nil
}

func (x *NearThermalSearch) GetTargets() *Targets {
	if x != nil {
		return x.Targets
	}
	return nil
}

type NearIMUSearch struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Imu       string                 `protobuf:"bytes,1,opt,name=imu,proto3" json:"imu,omitempty"`
	Certainty *float64               `protobuf:"fixed64,2,opt,name=certainty,proto3,oneof" json:"certainty,omitempty"`
	Distance  *float64               `protobuf:"fixed64,3,opt,name=distance,proto3,oneof" json:"distance,omitempty"`
	// Deprecated: Marked as deprecated in v1/base_search.proto.
	TargetVectors []string `protobuf:"bytes,4,rep,name=target_vectors,json=targetVectors,proto3" json:"target_vectors,omitempty"` // deprecated in 1.26 - use targets
	Targets       *Targets `protobuf:"bytes,5,opt,name=targets,proto3" json:"targets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NearIMUSearch) Reset() {
	*x = NearIMUSearch{}
	mi := &file_v1_base_search_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NearIMUSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearIMUSearch) ProtoMessage() {}

func (x *NearIMUSearch) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearIMUSearch.ProtoReflect.Descriptor instead.
func (*NearIMUSearch) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{13}
}

func (x *NearIMUSearch) GetImu() string {
	if x != nil {
		return x.Imu
	}
	return ""
}

func (x *NearIMUSearch) GetCertainty() float64 {
	if x != nil && x.Certainty != nil {
		return *x.Certainty
	}
	return 0
}

func (x *NearIMUSearch) GetDistance() float64 {
	if x != nil && x.Distance != nil {
		return *x.Distance
	}
	return 0
}

// Deprecated: Marked as deprecated in v1/base_search.proto.
func (x *NearIMUSearch) GetTargetVectors() []string {
	if x != nil {
		return x.TargetVectors
	}
	return nil
}

func (x *NearIMUSearch) GetTargets() *Targets {
	if x != nil {
		return x.Targets
	}
	return nil
}

type BM25 struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Query          string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Properties     []string               `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty"`
	SearchOperator *SearchOperatorOptions `protobuf:"bytes,3,opt,name=search_operator,json=searchOperator,proto3,oneof" json:"search_operator,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BM25) Reset() {
	*x = BM25{}
	mi := &file_v1_base_search_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BM25) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BM25) ProtoMessage() {}

func (x *BM25) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BM25.ProtoReflect.Descriptor instead.
func (*BM25) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{14}
}

func (x *BM25) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *BM25) GetProperties() []string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *BM25) GetSearchOperator() *SearchOperatorOptions {
	if x != nil {
		return x.SearchOperator
	}
	return nil
}

type NearTextSearch_Move struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Force         float32                `protobuf:"fixed32,1,opt,name=force,proto3" json:"force,omitempty"`
	Concepts      []string               `protobuf:"bytes,2,rep,name=concepts,proto3" json:"concepts,omitempty"`
	Uuids         []string               `protobuf:"bytes,3,rep,name=uuids,proto3" json:"uuids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NearTextSearch_Move) Reset() {
	*x = NearTextSearch_Move{}
	mi := &file_v1_base_search_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NearTextSearch_Move) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearTextSearch_Move) ProtoMessage() {}

func (x *NearTextSearch_Move) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_search_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearTextSearch_Move.ProtoReflect.Descriptor instead.
func (*NearTextSearch_Move) Descriptor() ([]byte, []int) {
	return file_v1_base_search_proto_rawDescGZIP(), []int{7, 0}
}

func (x *NearTextSearch_Move) GetForce() float32 {
	if x != nil {
		return x.Force
	}
	return 0
}

func (x *NearTextSearch_Move) GetConcepts() []string {
	if x != nil {
		return x.Concepts
	}
	return nil
}

func (x *NearTextSearch_Move) GetUuids() []string {
	if x != nil {
		return x.Uuids
	}
	return nil
}

var File_v1_base_search_proto protoreflect.FileDescriptor

const file_v1_base_search_proto_rawDesc = "" +
	"\n" +
	"\x14v1/base_search.proto\x12\vweaviate.v1\x1a\rv1/base.proto\"B\n" +
	"\x10WeightsForTarget\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\x12\x16\n" +
	"\x06weight\x18\x02 \x01(\x02R\x06weight\"\xbe\x02\n" +
	"\aTargets\x12%\n" +
	"\x0etarget_vectors\x18\x01 \x03(\tR\rtargetVectors\x12@\n" +
	"\vcombination\x18\x02 \x01(\x0e2\x1e.weaviate.v1.CombinationMethodR\vcombination\x12?\n" +
	"\aweights\x18\x03 \x03(\v2!.weaviate.v1.Targets.WeightsEntryB\x02\x18\x01R\aweights\x12M\n" +
	"\x13weights_for_targets\x18\x04 \x03(\v2\x1d.weaviate.v1.WeightsForTargetR\x11weightsForTargets\x1a:\n" +
	"\fWeightsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"|\n" +
	"\x0fVectorForTarget\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12%\n" +
	"\fvector_bytes\x18\x02 \x01(\fB\x02\x18\x01R\vvectorBytes\x12.\n" +
	"\avectors\x18\x03 \x03(\v2\x14.weaviate.v1.VectorsR\avectors\"\x81\x02\n" +
	"\x15SearchOperatorOptions\x12G\n" +
	"\boperator\x18\x01 \x01(\x0e2+.weaviate.v1.SearchOperatorOptions.OperatorR\boperator\x12:\n" +
	"\x17minimum_or_tokens_match\x18\x02 \x01(\x05H\x00R\x14minimumOrTokensMatch\x88\x01\x01\"G\n" +
	"\bOperator\x12\x18\n" +
	"\x14OPERATOR_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vOPERATOR_OR\x10\x01\x12\x10\n" +
	"\fOPERATOR_AND\x10\x02B\x1a\n" +
	"\x18_minimum_or_tokens_match\"\xe6\x05\n" +
	"\x06Hybrid\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x1e\n" +
	"\n" +
	"properties\x18\x02 \x03(\tR\n" +
	"properties\x12\x1a\n" +
	"\x06vector\x18\x03 \x03(\x02B\x02\x18\x01R\x06vector\x12\x14\n" +
	"\x05alpha\x18\x04 \x01(\x02R\x05alpha\x12?\n" +
	"\vfusion_type\x18\x05 \x01(\x0e2\x1e.weaviate.v1.Hybrid.FusionTypeR\n" +
	"fusionType\x12%\n" +
	"\fvector_bytes\x18\x06 \x01(\fB\x02\x18\x01R\vvectorBytes\x12)\n" +
	"\x0etarget_vectors\x18\a \x03(\tB\x02\x18\x01R\rtargetVectors\x128\n" +
	"\tnear_text\x18\b \x01(\v2\x1b.weaviate.v1.NearTextSearchR\bnearText\x128\n" +
	"\vnear_vector\x18\t \x01(\v2\x17.weaviate.v1.NearVectorR\n" +
	"nearVector\x12.\n" +
	"\atargets\x18\n" +
	" \x01(\v2\x14.weaviate.v1.TargetsR\atargets\x12Y\n" +
	"\x14bm25_search_operator\x18\v \x01(\v2\".weaviate.v1.SearchOperatorOptionsH\x01R\x12bm25SearchOperator\x88\x01\x01\x12)\n" +
	"\x0fvector_distance\x18\x14 \x01(\x02H\x00R\x0evectorDistance\x12.\n" +
	"\avectors\x18\x15 \x03(\v2\x14.weaviate.v1.VectorsR\avectors\"a\n" +
	"\n" +
	"FusionType\x12\x1b\n" +
	"\x17FUSION_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12FUSION_TYPE_RANKED\x10\x01\x12\x1e\n" +
	"\x1aFUSION_TYPE_RELATIVE_SCORE\x10\x02B\v\n" +
	"\tthresholdB\x17\n" +
	"\x15_bm25_search_operator\"\xa7\x04\n" +
	"\n" +
	"NearVector\x12\x1a\n" +
	"\x06vector\x18\x01 \x03(\x02B\x02\x18\x01R\x06vector\x12!\n" +
	"\tcertainty\x18\x02 \x01(\x01H\x00R\tcertainty\x88\x01\x01\x12\x1f\n" +
	"\bdistance\x18\x03 \x01(\x01H\x01R\bdistance\x88\x01\x01\x12%\n" +
	"\fvector_bytes\x18\x04 \x01(\fB\x02\x18\x01R\vvectorBytes\x12)\n" +
	"\x0etarget_vectors\x18\x05 \x03(\tB\x02\x18\x01R\rtargetVectors\x12.\n" +
	"\atargets\x18\x06 \x01(\v2\x14.weaviate.v1.TargetsR\atargets\x12\\\n" +
	"\x11vector_per_target\x18\a \x03(\v2,.weaviate.v1.NearVector.VectorPerTargetEntryB\x02\x18\x01R\x0fvectorPerTarget\x12J\n" +
	"\x12vector_for_targets\x18\b \x03(\v2\x1c.weaviate.v1.VectorForTargetR\x10vectorForTargets\x12.\n" +
	"\avectors\x18\t \x03(\v2\x14.weaviate.v1.VectorsR\avectors\x1aB\n" +
	"\x14VectorPerTargetEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01B\f\n" +
	"\n" +
	"_certaintyB\v\n" +
	"\t_distance\"\xd6\x01\n" +
	"\n" +
	"NearObject\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\tcertainty\x18\x02 \x01(\x01H\x00R\tcertainty\x88\x01\x01\x12\x1f\n" +
	"\bdistance\x18\x03 \x01(\x01H\x01R\bdistance\x88\x01\x01\x12)\n" +
	"\x0etarget_vectors\x18\x04 \x03(\tB\x02\x18\x01R\rtargetVectors\x12.\n" +
	"\atargets\x18\x05 \x01(\v2\x14.weaviate.v1.TargetsR\atargetsB\f\n" +
	"\n" +
	"_certaintyB\v\n" +
	"\t_distance\"\xce\x03\n" +
	"\x0eNearTextSearch\x12\x14\n" +
	"\x05query\x18\x01 \x03(\tR\x05query\x12!\n" +
	"\tcertainty\x18\x02 \x01(\x01H\x00R\tcertainty\x88\x01\x01\x12\x1f\n" +
	"\bdistance\x18\x03 \x01(\x01H\x01R\bdistance\x88\x01\x01\x12>\n" +
	"\amove_to\x18\x04 \x01(\v2 .weaviate.v1.NearTextSearch.MoveH\x02R\x06moveTo\x88\x01\x01\x12B\n" +
	"\tmove_away\x18\x05 \x01(\v2 .weaviate.v1.NearTextSearch.MoveH\x03R\bmoveAway\x88\x01\x01\x12)\n" +
	"\x0etarget_vectors\x18\x06 \x03(\tB\x02\x18\x01R\rtargetVectors\x12.\n" +
	"\atargets\x18\a \x01(\v2\x14.weaviate.v1.TargetsR\atargets\x1aN\n" +
	"\x04Move\x12\x14\n" +
	"\x05force\x18\x01 \x01(\x02R\x05force\x12\x1a\n" +
	"\bconcepts\x18\x02 \x03(\tR\bconcepts\x12\x14\n" +
	"\x05uuids\x18\x03 \x03(\tR\x05uuidsB\f\n" +
	"\n" +
	"_certaintyB\v\n" +
	"\t_distanceB\n" +
	"\n" +
	"\b_move_toB\f\n" +
	"\n" +
	"_move_away\"\xe1\x01\n" +
	"\x0fNearImageSearch\x12\x14\n" +
	"\x05image\x18\x01 \x01(\tR\x05image\x12!\n" +
	"\tcertainty\x18\x02 \x01(\x01H\x00R\tcertainty\x88\x01\x01\x12\x1f\n" +
	"\bdistance\x18\x03 \x01(\x01H\x01R\bdistance\x88\x01\x01\x12)\n" +
	"\x0etarget_vectors\x18\x04 \x03(\tB\x02\x18\x01R\rtargetVectors\x12.\n" +
	"\atargets\x18\x05 \x01(\v2\x14.weaviate.v1.TargetsR\atargetsB\f\n" +
	"\n" +
	"_certaintyB\v\n" +
	"\t_distance\"\xe1\x01\n" +
	"\x0fNearAudioSearch\x12\x14\n" +
	"\x05audio\x18\x01 \x01(\tR\x05audio\x12!\n" +
	"\tcertainty\x18\x02 \x01(\x01H\x00R\tcertainty\x88\x01\x01\x12\x1f\n" +
	"\bdistance\x18\x03 \x01(\x01H\x01R\bdistance\x88\x01\x01\x12)\n" +
	"\x0etarget_vectors\x18\x04 \x03(\tB\x02\x18\x01R\rtargetVectors\x12.\n" +
	"\atargets\x18\x05 \x01(\v2\x14.weaviate.v1.TargetsR\atargetsB\f\n" +
	"\n" +
	"_certaintyB\v\n" +
	"\t_distance\"\xe1\x01\n" +
	"\x0fNearVideoSearch\x12\x14\n" +
	"\x05video\x18\x01 \x01(\tR\x05video\x12!\n" +
	"\tcertainty\x18\x02 \x01(\x01H\x00R\tcertainty\x88\x01\x01\x12\x1f\n" +
	"\bdistance\x18\x03 \x01(\x01H\x01R\bdistance\x88\x01\x01\x12)\n" +
	"\x0etarget_vectors\x18\x04 \x03(\tB\x02\x18\x01R\rtargetVectors\x12.\n" +
	"\atargets\x18\x05 \x01(\v2\x14.weaviate.v1.TargetsR\atargetsB\f\n" +
	"\n" +
	"_certaintyB\v\n" +
	"\t_distance\"\xe1\x01\n" +
	"\x0fNearDepthSearch\x12\x14\n" +
	"\x05depth\x18\x01 \x01(\tR\x05depth\x12!\n" +
	"\tcertainty\x18\x02 \x01(\x01H\x00R\tcertainty\x88\x01\x01\x12\x1f\n" +
	"\bdistance\x18\x03 \x01(\x01H\x01R\bdistance\x88\x01\x01\x12)\n" +
	"\x0etarget_vectors\x18\x04 \x03(\tB\x02\x18\x01R\rtargetVectors\x12.\n" +
	"\atargets\x18\x05 \x01(\v2\x14.weaviate.v1.TargetsR\atargetsB\f\n" +
	"\n" +
	"_certaintyB\v\n" +
	"\t_distance\"\xe7\x01\n" +
	"\x11NearThermalSearch\x12\x18\n" +
	"\athermal\x18\x01 \x01(\tR\athermal\x12!\n" +
	"\tcertainty\x18\x02 \x01(\x01H\x00R\tcertainty\x88\x01\x01\x12\x1f\n" +
	"\bdistance\x18\x03 \x01(\x01H\x01R\bdistance\x88\x01\x01\x12)\n" +
	"\x0etarget_vectors\x18\x04 \x03(\tB\x02\x18\x01R\rtargetVectors\x12.\n" +
	"\atargets\x18\x05 \x01(\v2\x14.weaviate.v1.TargetsR\atargetsB\f\n" +
	"\n" +
	"_certaintyB\v\n" +
	"\t_distance\"\xdb\x01\n" +
	"\rNearIMUSearch\x12\x10\n" +
	"\x03imu\x18\x01 \x01(\tR\x03imu\x12!\n" +
	"\tcertainty\x18\x02 \x01(\x01H\x00R\tcertainty\x88\x01\x01\x12\x1f\n" +
	"\bdistance\x18\x03 \x01(\x01H\x01R\bdistance\x88\x01\x01\x12)\n" +
	"\x0etarget_vectors\x18\x04 \x03(\tB\x02\x18\x01R\rtargetVectors\x12.\n" +
	"\atargets\x18\x05 \x01(\v2\x14.weaviate.v1.TargetsR\atargetsB\f\n" +
	"\n" +
	"_certaintyB\v\n" +
	"\t_distance\"\xa2\x01\n" +
	"\x04BM25\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x1e\n" +
	"\n" +
	"properties\x18\x02 \x03(\tR\n" +
	"properties\x12P\n" +
	"\x0fsearch_operator\x18\x03 \x01(\v2\".weaviate.v1.SearchOperatorOptionsH\x00R\x0esearchOperator\x88\x01\x01B\x12\n" +
	"\x10_search_operator*\xee\x01\n" +
	"\x11CombinationMethod\x12\"\n" +
	"\x1eCOMBINATION_METHOD_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bCOMBINATION_METHOD_TYPE_SUM\x10\x01\x12\x1f\n" +
	"\x1bCOMBINATION_METHOD_TYPE_MIN\x10\x02\x12#\n" +
	"\x1fCOMBINATION_METHOD_TYPE_AVERAGE\x10\x03\x12*\n" +
	"&COMBINATION_METHOD_TYPE_RELATIVE_SCORE\x10\x04\x12\"\n" +
	"\x1eCOMBINATION_METHOD_TYPE_MANUAL\x10\x05Bt\n" +
	"#io.weaviate.client.grpc.protocol.v1B\x17WeaviateProtoBaseSearchZ4github.com/weaviate/weaviate/grpc/generated;protocolb\x06proto3"

var (
	file_v1_base_search_proto_rawDescOnce sync.Once
	file_v1_base_search_proto_rawDescData []byte
)

func file_v1_base_search_proto_rawDescGZIP() []byte {
	file_v1_base_search_proto_rawDescOnce.Do(func() {
		file_v1_base_search_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_base_search_proto_rawDesc), len(file_v1_base_search_proto_rawDesc)))
	})
	return file_v1_base_search_proto_rawDescData
}

var (
	file_v1_base_search_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
	file_v1_base_search_proto_msgTypes  = make([]protoimpl.MessageInfo, 18)
	file_v1_base_search_proto_goTypes   = []any{
		(CombinationMethod)(0),              // 0: weaviate.v1.CombinationMethod
		(SearchOperatorOptions_Operator)(0), // 1: weaviate.v1.SearchOperatorOptions.Operator
		(Hybrid_FusionType)(0),              // 2: weaviate.v1.Hybrid.FusionType
		(*WeightsForTarget)(nil),            // 3: weaviate.v1.WeightsForTarget
		(*Targets)(nil),                     // 4: weaviate.v1.Targets
		(*VectorForTarget)(nil),             // 5: weaviate.v1.VectorForTarget
		(*SearchOperatorOptions)(nil),       // 6: weaviate.v1.SearchOperatorOptions
		(*Hybrid)(nil),                      // 7: weaviate.v1.Hybrid
		(*NearVector)(nil),                  // 8: weaviate.v1.NearVector
		(*NearObject)(nil),                  // 9: weaviate.v1.NearObject
		(*NearTextSearch)(nil),              // 10: weaviate.v1.NearTextSearch
		(*NearImageSearch)(nil),             // 11: weaviate.v1.NearImageSearch
		(*NearAudioSearch)(nil),             // 12: weaviate.v1.NearAudioSearch
		(*NearVideoSearch)(nil),             // 13: weaviate.v1.NearVideoSearch
		(*NearDepthSearch)(nil),             // 14: weaviate.v1.NearDepthSearch
		(*NearThermalSearch)(nil),           // 15: weaviate.v1.NearThermalSearch
		(*NearIMUSearch)(nil),               // 16: weaviate.v1.NearIMUSearch
		(*BM25)(nil),                        // 17: weaviate.v1.BM25
		nil,                                 // 18: weaviate.v1.Targets.WeightsEntry
		nil,                                 // 19: weaviate.v1.NearVector.VectorPerTargetEntry
		(*NearTextSearch_Move)(nil),         // 20: weaviate.v1.NearTextSearch.Move
		(*Vectors)(nil),                     // 21: weaviate.v1.Vectors
	}
)

var file_v1_base_search_proto_depIdxs = []int32{
	0,  // 0: weaviate.v1.Targets.combination:type_name -> weaviate.v1.CombinationMethod
	18, // 1: weaviate.v1.Targets.weights:type_name -> weaviate.v1.Targets.WeightsEntry
	3,  // 2: weaviate.v1.Targets.weights_for_targets:type_name -> weaviate.v1.WeightsForTarget
	21, // 3: weaviate.v1.VectorForTarget.vectors:type_name -> weaviate.v1.Vectors
	1,  // 4: weaviate.v1.SearchOperatorOptions.operator:type_name -> weaviate.v1.SearchOperatorOptions.Operator
	2,  // 5: weaviate.v1.Hybrid.fusion_type:type_name -> weaviate.v1.Hybrid.FusionType
	10, // 6: weaviate.v1.Hybrid.near_text:type_name -> weaviate.v1.NearTextSearch
	8,  // 7: weaviate.v1.Hybrid.near_vector:type_name -> weaviate.v1.NearVector
	4,  // 8: weaviate.v1.Hybrid.targets:type_name -> weaviate.v1.Targets
	6,  // 9: weaviate.v1.Hybrid.bm25_search_operator:type_name -> weaviate.v1.SearchOperatorOptions
	21, // 10: weaviate.v1.Hybrid.vectors:type_name -> weaviate.v1.Vectors
	4,  // 11: weaviate.v1.NearVector.targets:type_name -> weaviate.v1.Targets
	19, // 12: weaviate.v1.NearVector.vector_per_target:type_name -> weaviate.v1.NearVector.VectorPerTargetEntry
	5,  // 13: weaviate.v1.NearVector.vector_for_targets:type_name -> weaviate.v1.VectorForTarget
	21, // 14: weaviate.v1.NearVector.vectors:type_name -> weaviate.v1.Vectors
	4,  // 15: weaviate.v1.NearObject.targets:type_name -> weaviate.v1.Targets
	20, // 16: weaviate.v1.NearTextSearch.move_to:type_name -> weaviate.v1.NearTextSearch.Move
	20, // 17: weaviate.v1.NearTextSearch.move_away:type_name -> weaviate.v1.NearTextSearch.Move
	4,  // 18: weaviate.v1.NearTextSearch.targets:type_name -> weaviate.v1.Targets
	4,  // 19: weaviate.v1.NearImageSearch.targets:type_name -> weaviate.v1.Targets
	4,  // 20: weaviate.v1.NearAudioSearch.targets:type_name -> weaviate.v1.Targets
	4,  // 21: weaviate.v1.NearVideoSearch.targets:type_name -> weaviate.v1.Targets
	4,  // 22: weaviate.v1.NearDepthSearch.targets:type_name -> weaviate.v1.Targets
	4,  // 23: weaviate.v1.NearThermalSearch.targets:type_name -> weaviate.v1.Targets
	4,  // 24: weaviate.v1.NearIMUSearch.targets:type_name -> weaviate.v1.Targets
	6,  // 25: weaviate.v1.BM25.search_operator:type_name -> weaviate.v1.SearchOperatorOptions
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_v1_base_search_proto_init() }
func file_v1_base_search_proto_init() {
	if File_v1_base_search_proto != nil {
		return
	}
	file_v1_base_proto_init()
	file_v1_base_search_proto_msgTypes[3].OneofWrappers = []any{}
	file_v1_base_search_proto_msgTypes[4].OneofWrappers = []any{
		(*Hybrid_VectorDistance)(nil),
	}
	file_v1_base_search_proto_msgTypes[5].OneofWrappers = []any{}
	file_v1_base_search_proto_msgTypes[6].OneofWrappers = []any{}
	file_v1_base_search_proto_msgTypes[7].OneofWrappers = []any{}
	file_v1_base_search_proto_msgTypes[8].OneofWrappers = []any{}
	file_v1_base_search_proto_msgTypes[9].OneofWrappers = []any{}
	file_v1_base_search_proto_msgTypes[10].OneofWrappers = []any{}
	file_v1_base_search_proto_msgTypes[11].OneofWrappers = []any{}
	file_v1_base_search_proto_msgTypes[12].OneofWrappers = []any{}
	file_v1_base_search_proto_msgTypes[13].OneofWrappers = []any{}
	file_v1_base_search_proto_msgTypes[14].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_base_search_proto_rawDesc), len(file_v1_base_search_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_base_search_proto_goTypes,
		DependencyIndexes: file_v1_base_search_proto_depIdxs,
		EnumInfos:         file_v1_base_search_proto_enumTypes,
		MessageInfos:      file_v1_base_search_proto_msgTypes,
	}.Build()
	File_v1_base_search_proto = out.File
	file_v1_base_search_proto_goTypes = nil
	file_v1_base_search_proto_depIdxs = nil
}
