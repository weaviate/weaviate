// Code generated by protoc-gen-go. DO NOT EDIT.

package protocol

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AggregateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// required
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// parameters
	Tenant string `protobuf:"bytes,10,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// what is returned
	ObjectsCount bool                            `protobuf:"varint,20,opt,name=objects_count,json=objectsCount,proto3" json:"objects_count,omitempty"`
	Aggregations []*AggregateRequest_Aggregation `protobuf:"bytes,21,rep,name=aggregations,proto3" json:"aggregations,omitempty"`
	// affects aggregation results
	ObjectLimit *uint32                   `protobuf:"varint,30,opt,name=object_limit,json=objectLimit,proto3,oneof" json:"object_limit,omitempty"`
	GroupBy     *AggregateRequest_GroupBy `protobuf:"bytes,31,opt,name=group_by,json=groupBy,proto3,oneof" json:"group_by,omitempty"`
	Limit       *uint32                   `protobuf:"varint,32,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	// matches/searches for objects
	Filters *Filters `protobuf:"bytes,40,opt,name=filters,proto3,oneof" json:"filters,omitempty"`
	// Types that are valid to be assigned to Search:
	//
	//	*AggregateRequest_Hybrid
	//	*AggregateRequest_NearVector
	//	*AggregateRequest_NearObject
	//	*AggregateRequest_NearText
	//	*AggregateRequest_NearImage
	//	*AggregateRequest_NearAudio
	//	*AggregateRequest_NearVideo
	//	*AggregateRequest_NearDepth
	//	*AggregateRequest_NearThermal
	//	*AggregateRequest_NearImu
	Search        isAggregateRequest_Search `protobuf_oneof:"search"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateRequest) Reset() {
	*x = AggregateRequest{}
	mi := &file_v1_aggregate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateRequest) ProtoMessage() {}

func (x *AggregateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateRequest.ProtoReflect.Descriptor instead.
func (*AggregateRequest) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{0}
}

func (x *AggregateRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *AggregateRequest) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *AggregateRequest) GetObjectsCount() bool {
	if x != nil {
		return x.ObjectsCount
	}
	return false
}

func (x *AggregateRequest) GetAggregations() []*AggregateRequest_Aggregation {
	if x != nil {
		return x.Aggregations
	}
	return nil
}

func (x *AggregateRequest) GetObjectLimit() uint32 {
	if x != nil && x.ObjectLimit != nil {
		return *x.ObjectLimit
	}
	return 0
}

func (x *AggregateRequest) GetGroupBy() *AggregateRequest_GroupBy {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *AggregateRequest) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *AggregateRequest) GetFilters() *Filters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *AggregateRequest) GetSearch() isAggregateRequest_Search {
	if x != nil {
		return x.Search
	}
	return nil
}

func (x *AggregateRequest) GetHybrid() *Hybrid {
	if x != nil {
		if x, ok := x.Search.(*AggregateRequest_Hybrid); ok {
			return x.Hybrid
		}
	}
	return nil
}

func (x *AggregateRequest) GetNearVector() *NearVector {
	if x != nil {
		if x, ok := x.Search.(*AggregateRequest_NearVector); ok {
			return x.NearVector
		}
	}
	return nil
}

func (x *AggregateRequest) GetNearObject() *NearObject {
	if x != nil {
		if x, ok := x.Search.(*AggregateRequest_NearObject); ok {
			return x.NearObject
		}
	}
	return nil
}

func (x *AggregateRequest) GetNearText() *NearTextSearch {
	if x != nil {
		if x, ok := x.Search.(*AggregateRequest_NearText); ok {
			return x.NearText
		}
	}
	return nil
}

func (x *AggregateRequest) GetNearImage() *NearImageSearch {
	if x != nil {
		if x, ok := x.Search.(*AggregateRequest_NearImage); ok {
			return x.NearImage
		}
	}
	return nil
}

func (x *AggregateRequest) GetNearAudio() *NearAudioSearch {
	if x != nil {
		if x, ok := x.Search.(*AggregateRequest_NearAudio); ok {
			return x.NearAudio
		}
	}
	return nil
}

func (x *AggregateRequest) GetNearVideo() *NearVideoSearch {
	if x != nil {
		if x, ok := x.Search.(*AggregateRequest_NearVideo); ok {
			return x.NearVideo
		}
	}
	return nil
}

func (x *AggregateRequest) GetNearDepth() *NearDepthSearch {
	if x != nil {
		if x, ok := x.Search.(*AggregateRequest_NearDepth); ok {
			return x.NearDepth
		}
	}
	return nil
}

func (x *AggregateRequest) GetNearThermal() *NearThermalSearch {
	if x != nil {
		if x, ok := x.Search.(*AggregateRequest_NearThermal); ok {
			return x.NearThermal
		}
	}
	return nil
}

func (x *AggregateRequest) GetNearImu() *NearIMUSearch {
	if x != nil {
		if x, ok := x.Search.(*AggregateRequest_NearImu); ok {
			return x.NearImu
		}
	}
	return nil
}

type isAggregateRequest_Search interface {
	isAggregateRequest_Search()
}

type AggregateRequest_Hybrid struct {
	Hybrid *Hybrid `protobuf:"bytes,41,opt,name=hybrid,proto3,oneof"`
}

type AggregateRequest_NearVector struct {
	NearVector *NearVector `protobuf:"bytes,42,opt,name=near_vector,json=nearVector,proto3,oneof"`
}

type AggregateRequest_NearObject struct {
	NearObject *NearObject `protobuf:"bytes,43,opt,name=near_object,json=nearObject,proto3,oneof"`
}

type AggregateRequest_NearText struct {
	NearText *NearTextSearch `protobuf:"bytes,44,opt,name=near_text,json=nearText,proto3,oneof"`
}

type AggregateRequest_NearImage struct {
	NearImage *NearImageSearch `protobuf:"bytes,45,opt,name=near_image,json=nearImage,proto3,oneof"`
}

type AggregateRequest_NearAudio struct {
	NearAudio *NearAudioSearch `protobuf:"bytes,46,opt,name=near_audio,json=nearAudio,proto3,oneof"`
}

type AggregateRequest_NearVideo struct {
	NearVideo *NearVideoSearch `protobuf:"bytes,47,opt,name=near_video,json=nearVideo,proto3,oneof"`
}

type AggregateRequest_NearDepth struct {
	NearDepth *NearDepthSearch `protobuf:"bytes,48,opt,name=near_depth,json=nearDepth,proto3,oneof"`
}

type AggregateRequest_NearThermal struct {
	NearThermal *NearThermalSearch `protobuf:"bytes,49,opt,name=near_thermal,json=nearThermal,proto3,oneof"`
}

type AggregateRequest_NearImu struct {
	NearImu *NearIMUSearch `protobuf:"bytes,50,opt,name=near_imu,json=nearImu,proto3,oneof"`
}

func (*AggregateRequest_Hybrid) isAggregateRequest_Search() {}

func (*AggregateRequest_NearVector) isAggregateRequest_Search() {}

func (*AggregateRequest_NearObject) isAggregateRequest_Search() {}

func (*AggregateRequest_NearText) isAggregateRequest_Search() {}

func (*AggregateRequest_NearImage) isAggregateRequest_Search() {}

func (*AggregateRequest_NearAudio) isAggregateRequest_Search() {}

func (*AggregateRequest_NearVideo) isAggregateRequest_Search() {}

func (*AggregateRequest_NearDepth) isAggregateRequest_Search() {}

func (*AggregateRequest_NearThermal) isAggregateRequest_Search() {}

func (*AggregateRequest_NearImu) isAggregateRequest_Search() {}

type AggregateReply struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Took  float32                `protobuf:"fixed32,1,opt,name=took,proto3" json:"took,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*AggregateReply_SingleResult
	//	*AggregateReply_GroupedResults
	Result        isAggregateReply_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateReply) Reset() {
	*x = AggregateReply{}
	mi := &file_v1_aggregate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateReply) ProtoMessage() {}

func (x *AggregateReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateReply.ProtoReflect.Descriptor instead.
func (*AggregateReply) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{1}
}

func (x *AggregateReply) GetTook() float32 {
	if x != nil {
		return x.Took
	}
	return 0
}

func (x *AggregateReply) GetResult() isAggregateReply_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AggregateReply) GetSingleResult() *AggregateReply_Single {
	if x != nil {
		if x, ok := x.Result.(*AggregateReply_SingleResult); ok {
			return x.SingleResult
		}
	}
	return nil
}

func (x *AggregateReply) GetGroupedResults() *AggregateReply_Grouped {
	if x != nil {
		if x, ok := x.Result.(*AggregateReply_GroupedResults); ok {
			return x.GroupedResults
		}
	}
	return nil
}

type isAggregateReply_Result interface {
	isAggregateReply_Result()
}

type AggregateReply_SingleResult struct {
	SingleResult *AggregateReply_Single `protobuf:"bytes,2,opt,name=single_result,json=singleResult,proto3,oneof"`
}

type AggregateReply_GroupedResults struct {
	GroupedResults *AggregateReply_Grouped `protobuf:"bytes,3,opt,name=grouped_results,json=groupedResults,proto3,oneof"`
}

func (*AggregateReply_SingleResult) isAggregateReply_Result() {}

func (*AggregateReply_GroupedResults) isAggregateReply_Result() {}

type AggregateRequest_Aggregation struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Property string                 `protobuf:"bytes,1,opt,name=property,proto3" json:"property,omitempty"`
	// Types that are valid to be assigned to Aggregation:
	//
	//	*AggregateRequest_Aggregation_Int
	//	*AggregateRequest_Aggregation_Number_
	//	*AggregateRequest_Aggregation_Text_
	//	*AggregateRequest_Aggregation_Boolean_
	//	*AggregateRequest_Aggregation_Date_
	//	*AggregateRequest_Aggregation_Reference_
	Aggregation   isAggregateRequest_Aggregation_Aggregation `protobuf_oneof:"aggregation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateRequest_Aggregation) Reset() {
	*x = AggregateRequest_Aggregation{}
	mi := &file_v1_aggregate_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateRequest_Aggregation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateRequest_Aggregation) ProtoMessage() {}

func (x *AggregateRequest_Aggregation) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateRequest_Aggregation.ProtoReflect.Descriptor instead.
func (*AggregateRequest_Aggregation) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AggregateRequest_Aggregation) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

func (x *AggregateRequest_Aggregation) GetAggregation() isAggregateRequest_Aggregation_Aggregation {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

func (x *AggregateRequest_Aggregation) GetInt() *AggregateRequest_Aggregation_Integer {
	if x != nil {
		if x, ok := x.Aggregation.(*AggregateRequest_Aggregation_Int); ok {
			return x.Int
		}
	}
	return nil
}

func (x *AggregateRequest_Aggregation) GetNumber() *AggregateRequest_Aggregation_Number {
	if x != nil {
		if x, ok := x.Aggregation.(*AggregateRequest_Aggregation_Number_); ok {
			return x.Number
		}
	}
	return nil
}

func (x *AggregateRequest_Aggregation) GetText() *AggregateRequest_Aggregation_Text {
	if x != nil {
		if x, ok := x.Aggregation.(*AggregateRequest_Aggregation_Text_); ok {
			return x.Text
		}
	}
	return nil
}

func (x *AggregateRequest_Aggregation) GetBoolean() *AggregateRequest_Aggregation_Boolean {
	if x != nil {
		if x, ok := x.Aggregation.(*AggregateRequest_Aggregation_Boolean_); ok {
			return x.Boolean
		}
	}
	return nil
}

func (x *AggregateRequest_Aggregation) GetDate() *AggregateRequest_Aggregation_Date {
	if x != nil {
		if x, ok := x.Aggregation.(*AggregateRequest_Aggregation_Date_); ok {
			return x.Date
		}
	}
	return nil
}

func (x *AggregateRequest_Aggregation) GetReference() *AggregateRequest_Aggregation_Reference {
	if x != nil {
		if x, ok := x.Aggregation.(*AggregateRequest_Aggregation_Reference_); ok {
			return x.Reference
		}
	}
	return nil
}

type isAggregateRequest_Aggregation_Aggregation interface {
	isAggregateRequest_Aggregation_Aggregation()
}

type AggregateRequest_Aggregation_Int struct {
	Int *AggregateRequest_Aggregation_Integer `protobuf:"bytes,2,opt,name=int,proto3,oneof"`
}

type AggregateRequest_Aggregation_Number_ struct {
	Number *AggregateRequest_Aggregation_Number `protobuf:"bytes,3,opt,name=number,proto3,oneof"`
}

type AggregateRequest_Aggregation_Text_ struct {
	Text *AggregateRequest_Aggregation_Text `protobuf:"bytes,4,opt,name=text,proto3,oneof"`
}

type AggregateRequest_Aggregation_Boolean_ struct {
	Boolean *AggregateRequest_Aggregation_Boolean `protobuf:"bytes,5,opt,name=boolean,proto3,oneof"`
}

type AggregateRequest_Aggregation_Date_ struct {
	Date *AggregateRequest_Aggregation_Date `protobuf:"bytes,6,opt,name=date,proto3,oneof"`
}

type AggregateRequest_Aggregation_Reference_ struct {
	Reference *AggregateRequest_Aggregation_Reference `protobuf:"bytes,7,opt,name=reference,proto3,oneof"`
}

func (*AggregateRequest_Aggregation_Int) isAggregateRequest_Aggregation_Aggregation() {}

func (*AggregateRequest_Aggregation_Number_) isAggregateRequest_Aggregation_Aggregation() {}

func (*AggregateRequest_Aggregation_Text_) isAggregateRequest_Aggregation_Aggregation() {}

func (*AggregateRequest_Aggregation_Boolean_) isAggregateRequest_Aggregation_Aggregation() {}

func (*AggregateRequest_Aggregation_Date_) isAggregateRequest_Aggregation_Aggregation() {}

func (*AggregateRequest_Aggregation_Reference_) isAggregateRequest_Aggregation_Aggregation() {}

type AggregateRequest_GroupBy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Property      string                 `protobuf:"bytes,2,opt,name=property,proto3" json:"property,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateRequest_GroupBy) Reset() {
	*x = AggregateRequest_GroupBy{}
	mi := &file_v1_aggregate_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateRequest_GroupBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateRequest_GroupBy) ProtoMessage() {}

func (x *AggregateRequest_GroupBy) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateRequest_GroupBy.ProtoReflect.Descriptor instead.
func (*AggregateRequest_GroupBy) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{0, 1}
}

func (x *AggregateRequest_GroupBy) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *AggregateRequest_GroupBy) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

type AggregateRequest_Aggregation_Integer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         bool                   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Type          bool                   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Sum           bool                   `protobuf:"varint,3,opt,name=sum,proto3" json:"sum,omitempty"`
	Mean          bool                   `protobuf:"varint,4,opt,name=mean,proto3" json:"mean,omitempty"`
	Mode          bool                   `protobuf:"varint,5,opt,name=mode,proto3" json:"mode,omitempty"`
	Median        bool                   `protobuf:"varint,6,opt,name=median,proto3" json:"median,omitempty"`
	Maximum       bool                   `protobuf:"varint,7,opt,name=maximum,proto3" json:"maximum,omitempty"`
	Minimum       bool                   `protobuf:"varint,8,opt,name=minimum,proto3" json:"minimum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateRequest_Aggregation_Integer) Reset() {
	*x = AggregateRequest_Aggregation_Integer{}
	mi := &file_v1_aggregate_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateRequest_Aggregation_Integer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateRequest_Aggregation_Integer) ProtoMessage() {}

func (x *AggregateRequest_Aggregation_Integer) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateRequest_Aggregation_Integer.ProtoReflect.Descriptor instead.
func (*AggregateRequest_Aggregation_Integer) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *AggregateRequest_Aggregation_Integer) GetCount() bool {
	if x != nil {
		return x.Count
	}
	return false
}

func (x *AggregateRequest_Aggregation_Integer) GetType() bool {
	if x != nil {
		return x.Type
	}
	return false
}

func (x *AggregateRequest_Aggregation_Integer) GetSum() bool {
	if x != nil {
		return x.Sum
	}
	return false
}

func (x *AggregateRequest_Aggregation_Integer) GetMean() bool {
	if x != nil {
		return x.Mean
	}
	return false
}

func (x *AggregateRequest_Aggregation_Integer) GetMode() bool {
	if x != nil {
		return x.Mode
	}
	return false
}

func (x *AggregateRequest_Aggregation_Integer) GetMedian() bool {
	if x != nil {
		return x.Median
	}
	return false
}

func (x *AggregateRequest_Aggregation_Integer) GetMaximum() bool {
	if x != nil {
		return x.Maximum
	}
	return false
}

func (x *AggregateRequest_Aggregation_Integer) GetMinimum() bool {
	if x != nil {
		return x.Minimum
	}
	return false
}

type AggregateRequest_Aggregation_Number struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         bool                   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Type          bool                   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Sum           bool                   `protobuf:"varint,3,opt,name=sum,proto3" json:"sum,omitempty"`
	Mean          bool                   `protobuf:"varint,4,opt,name=mean,proto3" json:"mean,omitempty"`
	Mode          bool                   `protobuf:"varint,5,opt,name=mode,proto3" json:"mode,omitempty"`
	Median        bool                   `protobuf:"varint,6,opt,name=median,proto3" json:"median,omitempty"`
	Maximum       bool                   `protobuf:"varint,7,opt,name=maximum,proto3" json:"maximum,omitempty"`
	Minimum       bool                   `protobuf:"varint,8,opt,name=minimum,proto3" json:"minimum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateRequest_Aggregation_Number) Reset() {
	*x = AggregateRequest_Aggregation_Number{}
	mi := &file_v1_aggregate_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateRequest_Aggregation_Number) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateRequest_Aggregation_Number) ProtoMessage() {}

func (x *AggregateRequest_Aggregation_Number) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateRequest_Aggregation_Number.ProtoReflect.Descriptor instead.
func (*AggregateRequest_Aggregation_Number) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *AggregateRequest_Aggregation_Number) GetCount() bool {
	if x != nil {
		return x.Count
	}
	return false
}

func (x *AggregateRequest_Aggregation_Number) GetType() bool {
	if x != nil {
		return x.Type
	}
	return false
}

func (x *AggregateRequest_Aggregation_Number) GetSum() bool {
	if x != nil {
		return x.Sum
	}
	return false
}

func (x *AggregateRequest_Aggregation_Number) GetMean() bool {
	if x != nil {
		return x.Mean
	}
	return false
}

func (x *AggregateRequest_Aggregation_Number) GetMode() bool {
	if x != nil {
		return x.Mode
	}
	return false
}

func (x *AggregateRequest_Aggregation_Number) GetMedian() bool {
	if x != nil {
		return x.Median
	}
	return false
}

func (x *AggregateRequest_Aggregation_Number) GetMaximum() bool {
	if x != nil {
		return x.Maximum
	}
	return false
}

func (x *AggregateRequest_Aggregation_Number) GetMinimum() bool {
	if x != nil {
		return x.Minimum
	}
	return false
}

type AggregateRequest_Aggregation_Text struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Count              bool                   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Type               bool                   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	TopOccurences      bool                   `protobuf:"varint,3,opt,name=top_occurences,json=topOccurences,proto3" json:"top_occurences,omitempty"`
	TopOccurencesLimit *uint32                `protobuf:"varint,4,opt,name=top_occurences_limit,json=topOccurencesLimit,proto3,oneof" json:"top_occurences_limit,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AggregateRequest_Aggregation_Text) Reset() {
	*x = AggregateRequest_Aggregation_Text{}
	mi := &file_v1_aggregate_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateRequest_Aggregation_Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateRequest_Aggregation_Text) ProtoMessage() {}

func (x *AggregateRequest_Aggregation_Text) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateRequest_Aggregation_Text.ProtoReflect.Descriptor instead.
func (*AggregateRequest_Aggregation_Text) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *AggregateRequest_Aggregation_Text) GetCount() bool {
	if x != nil {
		return x.Count
	}
	return false
}

func (x *AggregateRequest_Aggregation_Text) GetType() bool {
	if x != nil {
		return x.Type
	}
	return false
}

func (x *AggregateRequest_Aggregation_Text) GetTopOccurences() bool {
	if x != nil {
		return x.TopOccurences
	}
	return false
}

func (x *AggregateRequest_Aggregation_Text) GetTopOccurencesLimit() uint32 {
	if x != nil && x.TopOccurencesLimit != nil {
		return *x.TopOccurencesLimit
	}
	return 0
}

type AggregateRequest_Aggregation_Boolean struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Count           bool                   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Type            bool                   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	TotalTrue       bool                   `protobuf:"varint,3,opt,name=total_true,json=totalTrue,proto3" json:"total_true,omitempty"`
	TotalFalse      bool                   `protobuf:"varint,4,opt,name=total_false,json=totalFalse,proto3" json:"total_false,omitempty"`
	PercentageTrue  bool                   `protobuf:"varint,5,opt,name=percentage_true,json=percentageTrue,proto3" json:"percentage_true,omitempty"`
	PercentageFalse bool                   `protobuf:"varint,6,opt,name=percentage_false,json=percentageFalse,proto3" json:"percentage_false,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AggregateRequest_Aggregation_Boolean) Reset() {
	*x = AggregateRequest_Aggregation_Boolean{}
	mi := &file_v1_aggregate_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateRequest_Aggregation_Boolean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateRequest_Aggregation_Boolean) ProtoMessage() {}

func (x *AggregateRequest_Aggregation_Boolean) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateRequest_Aggregation_Boolean.ProtoReflect.Descriptor instead.
func (*AggregateRequest_Aggregation_Boolean) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{0, 0, 3}
}

func (x *AggregateRequest_Aggregation_Boolean) GetCount() bool {
	if x != nil {
		return x.Count
	}
	return false
}

func (x *AggregateRequest_Aggregation_Boolean) GetType() bool {
	if x != nil {
		return x.Type
	}
	return false
}

func (x *AggregateRequest_Aggregation_Boolean) GetTotalTrue() bool {
	if x != nil {
		return x.TotalTrue
	}
	return false
}

func (x *AggregateRequest_Aggregation_Boolean) GetTotalFalse() bool {
	if x != nil {
		return x.TotalFalse
	}
	return false
}

func (x *AggregateRequest_Aggregation_Boolean) GetPercentageTrue() bool {
	if x != nil {
		return x.PercentageTrue
	}
	return false
}

func (x *AggregateRequest_Aggregation_Boolean) GetPercentageFalse() bool {
	if x != nil {
		return x.PercentageFalse
	}
	return false
}

type AggregateRequest_Aggregation_Date struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         bool                   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Type          bool                   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Median        bool                   `protobuf:"varint,3,opt,name=median,proto3" json:"median,omitempty"`
	Mode          bool                   `protobuf:"varint,4,opt,name=mode,proto3" json:"mode,omitempty"`
	Maximum       bool                   `protobuf:"varint,5,opt,name=maximum,proto3" json:"maximum,omitempty"`
	Minimum       bool                   `protobuf:"varint,6,opt,name=minimum,proto3" json:"minimum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateRequest_Aggregation_Date) Reset() {
	*x = AggregateRequest_Aggregation_Date{}
	mi := &file_v1_aggregate_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateRequest_Aggregation_Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateRequest_Aggregation_Date) ProtoMessage() {}

func (x *AggregateRequest_Aggregation_Date) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateRequest_Aggregation_Date.ProtoReflect.Descriptor instead.
func (*AggregateRequest_Aggregation_Date) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{0, 0, 4}
}

func (x *AggregateRequest_Aggregation_Date) GetCount() bool {
	if x != nil {
		return x.Count
	}
	return false
}

func (x *AggregateRequest_Aggregation_Date) GetType() bool {
	if x != nil {
		return x.Type
	}
	return false
}

func (x *AggregateRequest_Aggregation_Date) GetMedian() bool {
	if x != nil {
		return x.Median
	}
	return false
}

func (x *AggregateRequest_Aggregation_Date) GetMode() bool {
	if x != nil {
		return x.Mode
	}
	return false
}

func (x *AggregateRequest_Aggregation_Date) GetMaximum() bool {
	if x != nil {
		return x.Maximum
	}
	return false
}

func (x *AggregateRequest_Aggregation_Date) GetMinimum() bool {
	if x != nil {
		return x.Minimum
	}
	return false
}

type AggregateRequest_Aggregation_Reference struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          bool                   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	PointingTo    bool                   `protobuf:"varint,2,opt,name=pointing_to,json=pointingTo,proto3" json:"pointing_to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateRequest_Aggregation_Reference) Reset() {
	*x = AggregateRequest_Aggregation_Reference{}
	mi := &file_v1_aggregate_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateRequest_Aggregation_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateRequest_Aggregation_Reference) ProtoMessage() {}

func (x *AggregateRequest_Aggregation_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateRequest_Aggregation_Reference.ProtoReflect.Descriptor instead.
func (*AggregateRequest_Aggregation_Reference) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{0, 0, 5}
}

func (x *AggregateRequest_Aggregation_Reference) GetType() bool {
	if x != nil {
		return x.Type
	}
	return false
}

func (x *AggregateRequest_Aggregation_Reference) GetPointingTo() bool {
	if x != nil {
		return x.PointingTo
	}
	return false
}

type AggregateReply_Aggregations struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Aggregations  []*AggregateReply_Aggregations_Aggregation `protobuf:"bytes,1,rep,name=aggregations,proto3" json:"aggregations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateReply_Aggregations) Reset() {
	*x = AggregateReply_Aggregations{}
	mi := &file_v1_aggregate_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateReply_Aggregations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateReply_Aggregations) ProtoMessage() {}

func (x *AggregateReply_Aggregations) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateReply_Aggregations.ProtoReflect.Descriptor instead.
func (*AggregateReply_Aggregations) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AggregateReply_Aggregations) GetAggregations() []*AggregateReply_Aggregations_Aggregation {
	if x != nil {
		return x.Aggregations
	}
	return nil
}

type AggregateReply_Single struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	ObjectsCount  *int64                       `protobuf:"varint,1,opt,name=objects_count,json=objectsCount,proto3,oneof" json:"objects_count,omitempty"`
	Aggregations  *AggregateReply_Aggregations `protobuf:"bytes,2,opt,name=aggregations,proto3,oneof" json:"aggregations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateReply_Single) Reset() {
	*x = AggregateReply_Single{}
	mi := &file_v1_aggregate_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateReply_Single) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateReply_Single) ProtoMessage() {}

func (x *AggregateReply_Single) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateReply_Single.ProtoReflect.Descriptor instead.
func (*AggregateReply_Single) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{1, 1}
}

func (x *AggregateReply_Single) GetObjectsCount() int64 {
	if x != nil && x.ObjectsCount != nil {
		return *x.ObjectsCount
	}
	return 0
}

func (x *AggregateReply_Single) GetAggregations() *AggregateReply_Aggregations {
	if x != nil {
		return x.Aggregations
	}
	return nil
}

type AggregateReply_Group struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	ObjectsCount  *int64                          `protobuf:"varint,1,opt,name=objects_count,json=objectsCount,proto3,oneof" json:"objects_count,omitempty"`
	Aggregations  *AggregateReply_Aggregations    `protobuf:"bytes,2,opt,name=aggregations,proto3,oneof" json:"aggregations,omitempty"`
	GroupedBy     *AggregateReply_Group_GroupedBy `protobuf:"bytes,3,opt,name=grouped_by,json=groupedBy,proto3,oneof" json:"grouped_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateReply_Group) Reset() {
	*x = AggregateReply_Group{}
	mi := &file_v1_aggregate_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateReply_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateReply_Group) ProtoMessage() {}

func (x *AggregateReply_Group) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateReply_Group.ProtoReflect.Descriptor instead.
func (*AggregateReply_Group) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{1, 2}
}

func (x *AggregateReply_Group) GetObjectsCount() int64 {
	if x != nil && x.ObjectsCount != nil {
		return *x.ObjectsCount
	}
	return 0
}

func (x *AggregateReply_Group) GetAggregations() *AggregateReply_Aggregations {
	if x != nil {
		return x.Aggregations
	}
	return nil
}

func (x *AggregateReply_Group) GetGroupedBy() *AggregateReply_Group_GroupedBy {
	if x != nil {
		return x.GroupedBy
	}
	return nil
}

type AggregateReply_Grouped struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Groups        []*AggregateReply_Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateReply_Grouped) Reset() {
	*x = AggregateReply_Grouped{}
	mi := &file_v1_aggregate_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateReply_Grouped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateReply_Grouped) ProtoMessage() {}

func (x *AggregateReply_Grouped) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateReply_Grouped.ProtoReflect.Descriptor instead.
func (*AggregateReply_Grouped) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{1, 3}
}

func (x *AggregateReply_Grouped) GetGroups() []*AggregateReply_Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type AggregateReply_Aggregations_Aggregation struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Property string                 `protobuf:"bytes,1,opt,name=property,proto3" json:"property,omitempty"`
	// Types that are valid to be assigned to Aggregation:
	//
	//	*AggregateReply_Aggregations_Aggregation_Int
	//	*AggregateReply_Aggregations_Aggregation_Number_
	//	*AggregateReply_Aggregations_Aggregation_Text_
	//	*AggregateReply_Aggregations_Aggregation_Boolean_
	//	*AggregateReply_Aggregations_Aggregation_Date_
	//	*AggregateReply_Aggregations_Aggregation_Reference_
	Aggregation   isAggregateReply_Aggregations_Aggregation_Aggregation `protobuf_oneof:"aggregation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateReply_Aggregations_Aggregation) Reset() {
	*x = AggregateReply_Aggregations_Aggregation{}
	mi := &file_v1_aggregate_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateReply_Aggregations_Aggregation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateReply_Aggregations_Aggregation) ProtoMessage() {}

func (x *AggregateReply_Aggregations_Aggregation) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateReply_Aggregations_Aggregation.ProtoReflect.Descriptor instead.
func (*AggregateReply_Aggregations_Aggregation) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *AggregateReply_Aggregations_Aggregation) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

func (x *AggregateReply_Aggregations_Aggregation) GetAggregation() isAggregateReply_Aggregations_Aggregation_Aggregation {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

func (x *AggregateReply_Aggregations_Aggregation) GetInt() *AggregateReply_Aggregations_Aggregation_Integer {
	if x != nil {
		if x, ok := x.Aggregation.(*AggregateReply_Aggregations_Aggregation_Int); ok {
			return x.Int
		}
	}
	return nil
}

func (x *AggregateReply_Aggregations_Aggregation) GetNumber() *AggregateReply_Aggregations_Aggregation_Number {
	if x != nil {
		if x, ok := x.Aggregation.(*AggregateReply_Aggregations_Aggregation_Number_); ok {
			return x.Number
		}
	}
	return nil
}

func (x *AggregateReply_Aggregations_Aggregation) GetText() *AggregateReply_Aggregations_Aggregation_Text {
	if x != nil {
		if x, ok := x.Aggregation.(*AggregateReply_Aggregations_Aggregation_Text_); ok {
			return x.Text
		}
	}
	return nil
}

func (x *AggregateReply_Aggregations_Aggregation) GetBoolean() *AggregateReply_Aggregations_Aggregation_Boolean {
	if x != nil {
		if x, ok := x.Aggregation.(*AggregateReply_Aggregations_Aggregation_Boolean_); ok {
			return x.Boolean
		}
	}
	return nil
}

func (x *AggregateReply_Aggregations_Aggregation) GetDate() *AggregateReply_Aggregations_Aggregation_Date {
	if x != nil {
		if x, ok := x.Aggregation.(*AggregateReply_Aggregations_Aggregation_Date_); ok {
			return x.Date
		}
	}
	return nil
}

func (x *AggregateReply_Aggregations_Aggregation) GetReference() *AggregateReply_Aggregations_Aggregation_Reference {
	if x != nil {
		if x, ok := x.Aggregation.(*AggregateReply_Aggregations_Aggregation_Reference_); ok {
			return x.Reference
		}
	}
	return nil
}

type isAggregateReply_Aggregations_Aggregation_Aggregation interface {
	isAggregateReply_Aggregations_Aggregation_Aggregation()
}

type AggregateReply_Aggregations_Aggregation_Int struct {
	Int *AggregateReply_Aggregations_Aggregation_Integer `protobuf:"bytes,2,opt,name=int,proto3,oneof"`
}

type AggregateReply_Aggregations_Aggregation_Number_ struct {
	Number *AggregateReply_Aggregations_Aggregation_Number `protobuf:"bytes,3,opt,name=number,proto3,oneof"`
}

type AggregateReply_Aggregations_Aggregation_Text_ struct {
	Text *AggregateReply_Aggregations_Aggregation_Text `protobuf:"bytes,4,opt,name=text,proto3,oneof"`
}

type AggregateReply_Aggregations_Aggregation_Boolean_ struct {
	Boolean *AggregateReply_Aggregations_Aggregation_Boolean `protobuf:"bytes,5,opt,name=boolean,proto3,oneof"`
}

type AggregateReply_Aggregations_Aggregation_Date_ struct {
	Date *AggregateReply_Aggregations_Aggregation_Date `protobuf:"bytes,6,opt,name=date,proto3,oneof"`
}

type AggregateReply_Aggregations_Aggregation_Reference_ struct {
	Reference *AggregateReply_Aggregations_Aggregation_Reference `protobuf:"bytes,7,opt,name=reference,proto3,oneof"`
}

func (*AggregateReply_Aggregations_Aggregation_Int) isAggregateReply_Aggregations_Aggregation_Aggregation() {
}

func (*AggregateReply_Aggregations_Aggregation_Number_) isAggregateReply_Aggregations_Aggregation_Aggregation() {
}

func (*AggregateReply_Aggregations_Aggregation_Text_) isAggregateReply_Aggregations_Aggregation_Aggregation() {
}

func (*AggregateReply_Aggregations_Aggregation_Boolean_) isAggregateReply_Aggregations_Aggregation_Aggregation() {
}

func (*AggregateReply_Aggregations_Aggregation_Date_) isAggregateReply_Aggregations_Aggregation_Aggregation() {
}

func (*AggregateReply_Aggregations_Aggregation_Reference_) isAggregateReply_Aggregations_Aggregation_Aggregation() {
}

type AggregateReply_Aggregations_Aggregation_Integer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         *int64                 `protobuf:"varint,1,opt,name=count,proto3,oneof" json:"count,omitempty"`
	Type          *string                `protobuf:"bytes,2,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Mean          *float64               `protobuf:"fixed64,3,opt,name=mean,proto3,oneof" json:"mean,omitempty"`
	Median        *float64               `protobuf:"fixed64,4,opt,name=median,proto3,oneof" json:"median,omitempty"`
	Mode          *int64                 `protobuf:"varint,5,opt,name=mode,proto3,oneof" json:"mode,omitempty"`
	Maximum       *int64                 `protobuf:"varint,6,opt,name=maximum,proto3,oneof" json:"maximum,omitempty"`
	Minimum       *int64                 `protobuf:"varint,7,opt,name=minimum,proto3,oneof" json:"minimum,omitempty"`
	Sum           *int64                 `protobuf:"varint,8,opt,name=sum,proto3,oneof" json:"sum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateReply_Aggregations_Aggregation_Integer) Reset() {
	*x = AggregateReply_Aggregations_Aggregation_Integer{}
	mi := &file_v1_aggregate_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateReply_Aggregations_Aggregation_Integer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateReply_Aggregations_Aggregation_Integer) ProtoMessage() {}

func (x *AggregateReply_Aggregations_Aggregation_Integer) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateReply_Aggregations_Aggregation_Integer.ProtoReflect.Descriptor instead.
func (*AggregateReply_Aggregations_Aggregation_Integer) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{1, 0, 0, 0}
}

func (x *AggregateReply_Aggregations_Aggregation_Integer) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Integer) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *AggregateReply_Aggregations_Aggregation_Integer) GetMean() float64 {
	if x != nil && x.Mean != nil {
		return *x.Mean
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Integer) GetMedian() float64 {
	if x != nil && x.Median != nil {
		return *x.Median
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Integer) GetMode() int64 {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Integer) GetMaximum() int64 {
	if x != nil && x.Maximum != nil {
		return *x.Maximum
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Integer) GetMinimum() int64 {
	if x != nil && x.Minimum != nil {
		return *x.Minimum
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Integer) GetSum() int64 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

type AggregateReply_Aggregations_Aggregation_Number struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         *int64                 `protobuf:"varint,1,opt,name=count,proto3,oneof" json:"count,omitempty"`
	Type          *string                `protobuf:"bytes,2,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Mean          *float64               `protobuf:"fixed64,3,opt,name=mean,proto3,oneof" json:"mean,omitempty"`
	Median        *float64               `protobuf:"fixed64,4,opt,name=median,proto3,oneof" json:"median,omitempty"`
	Mode          *float64               `protobuf:"fixed64,5,opt,name=mode,proto3,oneof" json:"mode,omitempty"`
	Maximum       *float64               `protobuf:"fixed64,6,opt,name=maximum,proto3,oneof" json:"maximum,omitempty"`
	Minimum       *float64               `protobuf:"fixed64,7,opt,name=minimum,proto3,oneof" json:"minimum,omitempty"`
	Sum           *float64               `protobuf:"fixed64,8,opt,name=sum,proto3,oneof" json:"sum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateReply_Aggregations_Aggregation_Number) Reset() {
	*x = AggregateReply_Aggregations_Aggregation_Number{}
	mi := &file_v1_aggregate_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateReply_Aggregations_Aggregation_Number) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateReply_Aggregations_Aggregation_Number) ProtoMessage() {}

func (x *AggregateReply_Aggregations_Aggregation_Number) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateReply_Aggregations_Aggregation_Number.ProtoReflect.Descriptor instead.
func (*AggregateReply_Aggregations_Aggregation_Number) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{1, 0, 0, 1}
}

func (x *AggregateReply_Aggregations_Aggregation_Number) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Number) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *AggregateReply_Aggregations_Aggregation_Number) GetMean() float64 {
	if x != nil && x.Mean != nil {
		return *x.Mean
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Number) GetMedian() float64 {
	if x != nil && x.Median != nil {
		return *x.Median
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Number) GetMode() float64 {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Number) GetMaximum() float64 {
	if x != nil && x.Maximum != nil {
		return *x.Maximum
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Number) GetMinimum() float64 {
	if x != nil && x.Minimum != nil {
		return *x.Minimum
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Number) GetSum() float64 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

type AggregateReply_Aggregations_Aggregation_Text struct {
	state         protoimpl.MessageState                                       `protogen:"open.v1"`
	Count         *int64                                                       `protobuf:"varint,1,opt,name=count,proto3,oneof" json:"count,omitempty"`
	Type          *string                                                      `protobuf:"bytes,2,opt,name=type,proto3,oneof" json:"type,omitempty"`
	TopOccurences *AggregateReply_Aggregations_Aggregation_Text_TopOccurrences `protobuf:"bytes,3,opt,name=top_occurences,json=topOccurences,proto3,oneof" json:"top_occurences,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateReply_Aggregations_Aggregation_Text) Reset() {
	*x = AggregateReply_Aggregations_Aggregation_Text{}
	mi := &file_v1_aggregate_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateReply_Aggregations_Aggregation_Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateReply_Aggregations_Aggregation_Text) ProtoMessage() {}

func (x *AggregateReply_Aggregations_Aggregation_Text) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateReply_Aggregations_Aggregation_Text.ProtoReflect.Descriptor instead.
func (*AggregateReply_Aggregations_Aggregation_Text) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{1, 0, 0, 2}
}

func (x *AggregateReply_Aggregations_Aggregation_Text) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Text) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *AggregateReply_Aggregations_Aggregation_Text) GetTopOccurences() *AggregateReply_Aggregations_Aggregation_Text_TopOccurrences {
	if x != nil {
		return x.TopOccurences
	}
	return nil
}

type AggregateReply_Aggregations_Aggregation_Boolean struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Count           *int64                 `protobuf:"varint,1,opt,name=count,proto3,oneof" json:"count,omitempty"`
	Type            *string                `protobuf:"bytes,2,opt,name=type,proto3,oneof" json:"type,omitempty"`
	TotalTrue       *int64                 `protobuf:"varint,3,opt,name=total_true,json=totalTrue,proto3,oneof" json:"total_true,omitempty"`
	TotalFalse      *int64                 `protobuf:"varint,4,opt,name=total_false,json=totalFalse,proto3,oneof" json:"total_false,omitempty"`
	PercentageTrue  *float64               `protobuf:"fixed64,5,opt,name=percentage_true,json=percentageTrue,proto3,oneof" json:"percentage_true,omitempty"`
	PercentageFalse *float64               `protobuf:"fixed64,6,opt,name=percentage_false,json=percentageFalse,proto3,oneof" json:"percentage_false,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AggregateReply_Aggregations_Aggregation_Boolean) Reset() {
	*x = AggregateReply_Aggregations_Aggregation_Boolean{}
	mi := &file_v1_aggregate_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateReply_Aggregations_Aggregation_Boolean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateReply_Aggregations_Aggregation_Boolean) ProtoMessage() {}

func (x *AggregateReply_Aggregations_Aggregation_Boolean) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateReply_Aggregations_Aggregation_Boolean.ProtoReflect.Descriptor instead.
func (*AggregateReply_Aggregations_Aggregation_Boolean) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{1, 0, 0, 3}
}

func (x *AggregateReply_Aggregations_Aggregation_Boolean) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Boolean) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *AggregateReply_Aggregations_Aggregation_Boolean) GetTotalTrue() int64 {
	if x != nil && x.TotalTrue != nil {
		return *x.TotalTrue
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Boolean) GetTotalFalse() int64 {
	if x != nil && x.TotalFalse != nil {
		return *x.TotalFalse
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Boolean) GetPercentageTrue() float64 {
	if x != nil && x.PercentageTrue != nil {
		return *x.PercentageTrue
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Boolean) GetPercentageFalse() float64 {
	if x != nil && x.PercentageFalse != nil {
		return *x.PercentageFalse
	}
	return 0
}

type AggregateReply_Aggregations_Aggregation_Date struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         *int64                 `protobuf:"varint,1,opt,name=count,proto3,oneof" json:"count,omitempty"`
	Type          *string                `protobuf:"bytes,2,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Median        *string                `protobuf:"bytes,3,opt,name=median,proto3,oneof" json:"median,omitempty"`
	Mode          *string                `protobuf:"bytes,4,opt,name=mode,proto3,oneof" json:"mode,omitempty"`
	Maximum       *string                `protobuf:"bytes,5,opt,name=maximum,proto3,oneof" json:"maximum,omitempty"`
	Minimum       *string                `protobuf:"bytes,6,opt,name=minimum,proto3,oneof" json:"minimum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateReply_Aggregations_Aggregation_Date) Reset() {
	*x = AggregateReply_Aggregations_Aggregation_Date{}
	mi := &file_v1_aggregate_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateReply_Aggregations_Aggregation_Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateReply_Aggregations_Aggregation_Date) ProtoMessage() {}

func (x *AggregateReply_Aggregations_Aggregation_Date) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateReply_Aggregations_Aggregation_Date.ProtoReflect.Descriptor instead.
func (*AggregateReply_Aggregations_Aggregation_Date) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{1, 0, 0, 4}
}

func (x *AggregateReply_Aggregations_Aggregation_Date) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *AggregateReply_Aggregations_Aggregation_Date) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *AggregateReply_Aggregations_Aggregation_Date) GetMedian() string {
	if x != nil && x.Median != nil {
		return *x.Median
	}
	return ""
}

func (x *AggregateReply_Aggregations_Aggregation_Date) GetMode() string {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return ""
}

func (x *AggregateReply_Aggregations_Aggregation_Date) GetMaximum() string {
	if x != nil && x.Maximum != nil {
		return *x.Maximum
	}
	return ""
}

func (x *AggregateReply_Aggregations_Aggregation_Date) GetMinimum() string {
	if x != nil && x.Minimum != nil {
		return *x.Minimum
	}
	return ""
}

type AggregateReply_Aggregations_Aggregation_Reference struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  *string                `protobuf:"bytes,1,opt,name=type,proto3,oneof" json:"type,omitempty"`
	// protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
	PointingTo    []string `protobuf:"bytes,2,rep,name=pointing_to,json=pointingTo,proto3" json:"pointing_to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateReply_Aggregations_Aggregation_Reference) Reset() {
	*x = AggregateReply_Aggregations_Aggregation_Reference{}
	mi := &file_v1_aggregate_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateReply_Aggregations_Aggregation_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateReply_Aggregations_Aggregation_Reference) ProtoMessage() {}

func (x *AggregateReply_Aggregations_Aggregation_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateReply_Aggregations_Aggregation_Reference.ProtoReflect.Descriptor instead.
func (*AggregateReply_Aggregations_Aggregation_Reference) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{1, 0, 0, 5}
}

func (x *AggregateReply_Aggregations_Aggregation_Reference) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *AggregateReply_Aggregations_Aggregation_Reference) GetPointingTo() []string {
	if x != nil {
		return x.PointingTo
	}
	return nil
}

type AggregateReply_Aggregations_Aggregation_Text_TopOccurrences struct {
	state         protoimpl.MessageState                                                       `protogen:"open.v1"`
	Items         []*AggregateReply_Aggregations_Aggregation_Text_TopOccurrences_TopOccurrence `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateReply_Aggregations_Aggregation_Text_TopOccurrences) Reset() {
	*x = AggregateReply_Aggregations_Aggregation_Text_TopOccurrences{}
	mi := &file_v1_aggregate_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateReply_Aggregations_Aggregation_Text_TopOccurrences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateReply_Aggregations_Aggregation_Text_TopOccurrences) ProtoMessage() {}

func (x *AggregateReply_Aggregations_Aggregation_Text_TopOccurrences) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateReply_Aggregations_Aggregation_Text_TopOccurrences.ProtoReflect.Descriptor instead.
func (*AggregateReply_Aggregations_Aggregation_Text_TopOccurrences) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{1, 0, 0, 2, 0}
}

func (x *AggregateReply_Aggregations_Aggregation_Text_TopOccurrences) GetItems() []*AggregateReply_Aggregations_Aggregation_Text_TopOccurrences_TopOccurrence {
	if x != nil {
		return x.Items
	}
	return nil
}

type AggregateReply_Aggregations_Aggregation_Text_TopOccurrences_TopOccurrence struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Occurs        int64                  `protobuf:"varint,2,opt,name=occurs,proto3" json:"occurs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateReply_Aggregations_Aggregation_Text_TopOccurrences_TopOccurrence) Reset() {
	*x = AggregateReply_Aggregations_Aggregation_Text_TopOccurrences_TopOccurrence{}
	mi := &file_v1_aggregate_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateReply_Aggregations_Aggregation_Text_TopOccurrences_TopOccurrence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateReply_Aggregations_Aggregation_Text_TopOccurrences_TopOccurrence) ProtoMessage() {}

func (x *AggregateReply_Aggregations_Aggregation_Text_TopOccurrences_TopOccurrence) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateReply_Aggregations_Aggregation_Text_TopOccurrences_TopOccurrence.ProtoReflect.Descriptor instead.
func (*AggregateReply_Aggregations_Aggregation_Text_TopOccurrences_TopOccurrence) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{1, 0, 0, 2, 0, 0}
}

func (x *AggregateReply_Aggregations_Aggregation_Text_TopOccurrences_TopOccurrence) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AggregateReply_Aggregations_Aggregation_Text_TopOccurrences_TopOccurrence) GetOccurs() int64 {
	if x != nil {
		return x.Occurs
	}
	return 0
}

type AggregateReply_Group_GroupedBy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
	Path []string `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*AggregateReply_Group_GroupedBy_Text
	//	*AggregateReply_Group_GroupedBy_Int
	//	*AggregateReply_Group_GroupedBy_Boolean
	//	*AggregateReply_Group_GroupedBy_Number
	//	*AggregateReply_Group_GroupedBy_Texts
	//	*AggregateReply_Group_GroupedBy_Ints
	//	*AggregateReply_Group_GroupedBy_Booleans
	//	*AggregateReply_Group_GroupedBy_Numbers
	//	*AggregateReply_Group_GroupedBy_Geo
	Value         isAggregateReply_Group_GroupedBy_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateReply_Group_GroupedBy) Reset() {
	*x = AggregateReply_Group_GroupedBy{}
	mi := &file_v1_aggregate_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateReply_Group_GroupedBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateReply_Group_GroupedBy) ProtoMessage() {}

func (x *AggregateReply_Group_GroupedBy) ProtoReflect() protoreflect.Message {
	mi := &file_v1_aggregate_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateReply_Group_GroupedBy.ProtoReflect.Descriptor instead.
func (*AggregateReply_Group_GroupedBy) Descriptor() ([]byte, []int) {
	return file_v1_aggregate_proto_rawDescGZIP(), []int{1, 2, 0}
}

func (x *AggregateReply_Group_GroupedBy) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *AggregateReply_Group_GroupedBy) GetValue() isAggregateReply_Group_GroupedBy_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AggregateReply_Group_GroupedBy) GetText() string {
	if x != nil {
		if x, ok := x.Value.(*AggregateReply_Group_GroupedBy_Text); ok {
			return x.Text
		}
	}
	return ""
}

func (x *AggregateReply_Group_GroupedBy) GetInt() int64 {
	if x != nil {
		if x, ok := x.Value.(*AggregateReply_Group_GroupedBy_Int); ok {
			return x.Int
		}
	}
	return 0
}

func (x *AggregateReply_Group_GroupedBy) GetBoolean() bool {
	if x != nil {
		if x, ok := x.Value.(*AggregateReply_Group_GroupedBy_Boolean); ok {
			return x.Boolean
		}
	}
	return false
}

func (x *AggregateReply_Group_GroupedBy) GetNumber() float64 {
	if x != nil {
		if x, ok := x.Value.(*AggregateReply_Group_GroupedBy_Number); ok {
			return x.Number
		}
	}
	return 0
}

func (x *AggregateReply_Group_GroupedBy) GetTexts() *TextArray {
	if x != nil {
		if x, ok := x.Value.(*AggregateReply_Group_GroupedBy_Texts); ok {
			return x.Texts
		}
	}
	return nil
}

func (x *AggregateReply_Group_GroupedBy) GetInts() *IntArray {
	if x != nil {
		if x, ok := x.Value.(*AggregateReply_Group_GroupedBy_Ints); ok {
			return x.Ints
		}
	}
	return nil
}

func (x *AggregateReply_Group_GroupedBy) GetBooleans() *BooleanArray {
	if x != nil {
		if x, ok := x.Value.(*AggregateReply_Group_GroupedBy_Booleans); ok {
			return x.Booleans
		}
	}
	return nil
}

func (x *AggregateReply_Group_GroupedBy) GetNumbers() *NumberArray {
	if x != nil {
		if x, ok := x.Value.(*AggregateReply_Group_GroupedBy_Numbers); ok {
			return x.Numbers
		}
	}
	return nil
}

func (x *AggregateReply_Group_GroupedBy) GetGeo() *GeoCoordinatesFilter {
	if x != nil {
		if x, ok := x.Value.(*AggregateReply_Group_GroupedBy_Geo); ok {
			return x.Geo
		}
	}
	return nil
}

type isAggregateReply_Group_GroupedBy_Value interface {
	isAggregateReply_Group_GroupedBy_Value()
}

type AggregateReply_Group_GroupedBy_Text struct {
	Text string `protobuf:"bytes,2,opt,name=text,proto3,oneof"`
}

type AggregateReply_Group_GroupedBy_Int struct {
	Int int64 `protobuf:"varint,3,opt,name=int,proto3,oneof"`
}

type AggregateReply_Group_GroupedBy_Boolean struct {
	Boolean bool `protobuf:"varint,4,opt,name=boolean,proto3,oneof"`
}

type AggregateReply_Group_GroupedBy_Number struct {
	Number float64 `protobuf:"fixed64,5,opt,name=number,proto3,oneof"`
}

type AggregateReply_Group_GroupedBy_Texts struct {
	Texts *TextArray `protobuf:"bytes,6,opt,name=texts,proto3,oneof"`
}

type AggregateReply_Group_GroupedBy_Ints struct {
	Ints *IntArray `protobuf:"bytes,7,opt,name=ints,proto3,oneof"`
}

type AggregateReply_Group_GroupedBy_Booleans struct {
	Booleans *BooleanArray `protobuf:"bytes,8,opt,name=booleans,proto3,oneof"`
}

type AggregateReply_Group_GroupedBy_Numbers struct {
	Numbers *NumberArray `protobuf:"bytes,9,opt,name=numbers,proto3,oneof"`
}

type AggregateReply_Group_GroupedBy_Geo struct {
	Geo *GeoCoordinatesFilter `protobuf:"bytes,10,opt,name=geo,proto3,oneof"`
}

func (*AggregateReply_Group_GroupedBy_Text) isAggregateReply_Group_GroupedBy_Value() {}

func (*AggregateReply_Group_GroupedBy_Int) isAggregateReply_Group_GroupedBy_Value() {}

func (*AggregateReply_Group_GroupedBy_Boolean) isAggregateReply_Group_GroupedBy_Value() {}

func (*AggregateReply_Group_GroupedBy_Number) isAggregateReply_Group_GroupedBy_Value() {}

func (*AggregateReply_Group_GroupedBy_Texts) isAggregateReply_Group_GroupedBy_Value() {}

func (*AggregateReply_Group_GroupedBy_Ints) isAggregateReply_Group_GroupedBy_Value() {}

func (*AggregateReply_Group_GroupedBy_Booleans) isAggregateReply_Group_GroupedBy_Value() {}

func (*AggregateReply_Group_GroupedBy_Numbers) isAggregateReply_Group_GroupedBy_Value() {}

func (*AggregateReply_Group_GroupedBy_Geo) isAggregateReply_Group_GroupedBy_Value() {}

var File_v1_aggregate_proto protoreflect.FileDescriptor

const file_v1_aggregate_proto_rawDesc = "" +
	"\n" +
	"\x12v1/aggregate.proto\x12\vweaviate.v1\x1a\rv1/base.proto\x1a\x14v1/base_search.proto\"\x9d\x14\n" +
	"\x10AggregateRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12\x16\n" +
	"\x06tenant\x18\n" +
	" \x01(\tR\x06tenant\x12#\n" +
	"\robjects_count\x18\x14 \x01(\bR\fobjectsCount\x12M\n" +
	"\faggregations\x18\x15 \x03(\v2).weaviate.v1.AggregateRequest.AggregationR\faggregations\x12&\n" +
	"\fobject_limit\x18\x1e \x01(\rH\x01R\vobjectLimit\x88\x01\x01\x12E\n" +
	"\bgroup_by\x18\x1f \x01(\v2%.weaviate.v1.AggregateRequest.GroupByH\x02R\agroupBy\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18  \x01(\rH\x03R\x05limit\x88\x01\x01\x123\n" +
	"\afilters\x18( \x01(\v2\x14.weaviate.v1.FiltersH\x04R\afilters\x88\x01\x01\x12-\n" +
	"\x06hybrid\x18) \x01(\v2\x13.weaviate.v1.HybridH\x00R\x06hybrid\x12:\n" +
	"\vnear_vector\x18* \x01(\v2\x17.weaviate.v1.NearVectorH\x00R\n" +
	"nearVector\x12:\n" +
	"\vnear_object\x18+ \x01(\v2\x17.weaviate.v1.NearObjectH\x00R\n" +
	"nearObject\x12:\n" +
	"\tnear_text\x18, \x01(\v2\x1b.weaviate.v1.NearTextSearchH\x00R\bnearText\x12=\n" +
	"\n" +
	"near_image\x18- \x01(\v2\x1c.weaviate.v1.NearImageSearchH\x00R\tnearImage\x12=\n" +
	"\n" +
	"near_audio\x18. \x01(\v2\x1c.weaviate.v1.NearAudioSearchH\x00R\tnearAudio\x12=\n" +
	"\n" +
	"near_video\x18/ \x01(\v2\x1c.weaviate.v1.NearVideoSearchH\x00R\tnearVideo\x12=\n" +
	"\n" +
	"near_depth\x180 \x01(\v2\x1c.weaviate.v1.NearDepthSearchH\x00R\tnearDepth\x12C\n" +
	"\fnear_thermal\x181 \x01(\v2\x1e.weaviate.v1.NearThermalSearchH\x00R\vnearThermal\x127\n" +
	"\bnear_imu\x182 \x01(\v2\x1a.weaviate.v1.NearIMUSearchH\x00R\anearImu\x1a\xbb\v\n" +
	"\vAggregation\x12\x1a\n" +
	"\bproperty\x18\x01 \x01(\tR\bproperty\x12E\n" +
	"\x03int\x18\x02 \x01(\v21.weaviate.v1.AggregateRequest.Aggregation.IntegerH\x00R\x03int\x12J\n" +
	"\x06number\x18\x03 \x01(\v20.weaviate.v1.AggregateRequest.Aggregation.NumberH\x00R\x06number\x12D\n" +
	"\x04text\x18\x04 \x01(\v2..weaviate.v1.AggregateRequest.Aggregation.TextH\x00R\x04text\x12M\n" +
	"\aboolean\x18\x05 \x01(\v21.weaviate.v1.AggregateRequest.Aggregation.BooleanH\x00R\aboolean\x12D\n" +
	"\x04date\x18\x06 \x01(\v2..weaviate.v1.AggregateRequest.Aggregation.DateH\x00R\x04date\x12S\n" +
	"\treference\x18\a \x01(\v23.weaviate.v1.AggregateRequest.Aggregation.ReferenceH\x00R\treference\x1a\xb9\x01\n" +
	"\aInteger\x12\x14\n" +
	"\x05count\x18\x01 \x01(\bR\x05count\x12\x12\n" +
	"\x04type\x18\x02 \x01(\bR\x04type\x12\x10\n" +
	"\x03sum\x18\x03 \x01(\bR\x03sum\x12\x12\n" +
	"\x04mean\x18\x04 \x01(\bR\x04mean\x12\x12\n" +
	"\x04mode\x18\x05 \x01(\bR\x04mode\x12\x16\n" +
	"\x06median\x18\x06 \x01(\bR\x06median\x12\x18\n" +
	"\amaximum\x18\a \x01(\bR\amaximum\x12\x18\n" +
	"\aminimum\x18\b \x01(\bR\aminimum\x1a\xb8\x01\n" +
	"\x06Number\x12\x14\n" +
	"\x05count\x18\x01 \x01(\bR\x05count\x12\x12\n" +
	"\x04type\x18\x02 \x01(\bR\x04type\x12\x10\n" +
	"\x03sum\x18\x03 \x01(\bR\x03sum\x12\x12\n" +
	"\x04mean\x18\x04 \x01(\bR\x04mean\x12\x12\n" +
	"\x04mode\x18\x05 \x01(\bR\x04mode\x12\x16\n" +
	"\x06median\x18\x06 \x01(\bR\x06median\x12\x18\n" +
	"\amaximum\x18\a \x01(\bR\amaximum\x12\x18\n" +
	"\aminimum\x18\b \x01(\bR\aminimum\x1a\xa7\x01\n" +
	"\x04Text\x12\x14\n" +
	"\x05count\x18\x01 \x01(\bR\x05count\x12\x12\n" +
	"\x04type\x18\x02 \x01(\bR\x04type\x12%\n" +
	"\x0etop_occurences\x18\x03 \x01(\bR\rtopOccurences\x125\n" +
	"\x14top_occurences_limit\x18\x04 \x01(\rH\x00R\x12topOccurencesLimit\x88\x01\x01B\x17\n" +
	"\x15_top_occurences_limit\x1a\xc7\x01\n" +
	"\aBoolean\x12\x14\n" +
	"\x05count\x18\x01 \x01(\bR\x05count\x12\x12\n" +
	"\x04type\x18\x02 \x01(\bR\x04type\x12\x1d\n" +
	"\n" +
	"total_true\x18\x03 \x01(\bR\ttotalTrue\x12\x1f\n" +
	"\vtotal_false\x18\x04 \x01(\bR\n" +
	"totalFalse\x12'\n" +
	"\x0fpercentage_true\x18\x05 \x01(\bR\x0epercentageTrue\x12)\n" +
	"\x10percentage_false\x18\x06 \x01(\bR\x0fpercentageFalse\x1a\x90\x01\n" +
	"\x04Date\x12\x14\n" +
	"\x05count\x18\x01 \x01(\bR\x05count\x12\x12\n" +
	"\x04type\x18\x02 \x01(\bR\x04type\x12\x16\n" +
	"\x06median\x18\x03 \x01(\bR\x06median\x12\x12\n" +
	"\x04mode\x18\x04 \x01(\bR\x04mode\x12\x18\n" +
	"\amaximum\x18\x05 \x01(\bR\amaximum\x12\x18\n" +
	"\aminimum\x18\x06 \x01(\bR\aminimum\x1a@\n" +
	"\tReference\x12\x12\n" +
	"\x04type\x18\x01 \x01(\bR\x04type\x12\x1f\n" +
	"\vpointing_to\x18\x02 \x01(\bR\n" +
	"pointingToB\r\n" +
	"\vaggregation\x1aE\n" +
	"\aGroupBy\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12\x1a\n" +
	"\bproperty\x18\x02 \x01(\tR\bpropertyB\b\n" +
	"\x06searchB\x0f\n" +
	"\r_object_limitB\v\n" +
	"\t_group_byB\b\n" +
	"\x06_limitB\n" +
	"\n" +
	"\b_filters\"\x80\x1b\n" +
	"\x0eAggregateReply\x12\x12\n" +
	"\x04took\x18\x01 \x01(\x02R\x04took\x12I\n" +
	"\rsingle_result\x18\x02 \x01(\v2\".weaviate.v1.AggregateReply.SingleH\x00R\fsingleResult\x12N\n" +
	"\x0fgrouped_results\x18\x03 \x01(\v2#.weaviate.v1.AggregateReply.GroupedH\x00R\x0egroupedResults\x1a\xab\x12\n" +
	"\fAggregations\x12X\n" +
	"\faggregations\x18\x01 \x03(\v24.weaviate.v1.AggregateReply.Aggregations.AggregationR\faggregations\x1a\xc0\x11\n" +
	"\vAggregation\x12\x1a\n" +
	"\bproperty\x18\x01 \x01(\tR\bproperty\x12P\n" +
	"\x03int\x18\x02 \x01(\v2<.weaviate.v1.AggregateReply.Aggregations.Aggregation.IntegerH\x00R\x03int\x12U\n" +
	"\x06number\x18\x03 \x01(\v2;.weaviate.v1.AggregateReply.Aggregations.Aggregation.NumberH\x00R\x06number\x12O\n" +
	"\x04text\x18\x04 \x01(\v29.weaviate.v1.AggregateReply.Aggregations.Aggregation.TextH\x00R\x04text\x12X\n" +
	"\aboolean\x18\x05 \x01(\v2<.weaviate.v1.AggregateReply.Aggregations.Aggregation.BooleanH\x00R\aboolean\x12O\n" +
	"\x04date\x18\x06 \x01(\v29.weaviate.v1.AggregateReply.Aggregations.Aggregation.DateH\x00R\x04date\x12^\n" +
	"\treference\x18\a \x01(\v2>.weaviate.v1.AggregateReply.Aggregations.Aggregation.ReferenceH\x00R\treference\x1a\xb1\x02\n" +
	"\aInteger\x12\x19\n" +
	"\x05count\x18\x01 \x01(\x03H\x00R\x05count\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\x02 \x01(\tH\x01R\x04type\x88\x01\x01\x12\x17\n" +
	"\x04mean\x18\x03 \x01(\x01H\x02R\x04mean\x88\x01\x01\x12\x1b\n" +
	"\x06median\x18\x04 \x01(\x01H\x03R\x06median\x88\x01\x01\x12\x17\n" +
	"\x04mode\x18\x05 \x01(\x03H\x04R\x04mode\x88\x01\x01\x12\x1d\n" +
	"\amaximum\x18\x06 \x01(\x03H\x05R\amaximum\x88\x01\x01\x12\x1d\n" +
	"\aminimum\x18\a \x01(\x03H\x06R\aminimum\x88\x01\x01\x12\x15\n" +
	"\x03sum\x18\b \x01(\x03H\aR\x03sum\x88\x01\x01B\b\n" +
	"\x06_countB\a\n" +
	"\x05_typeB\a\n" +
	"\x05_meanB\t\n" +
	"\a_medianB\a\n" +
	"\x05_modeB\n" +
	"\n" +
	"\b_maximumB\n" +
	"\n" +
	"\b_minimumB\x06\n" +
	"\x04_sum\x1a\xb0\x02\n" +
	"\x06Number\x12\x19\n" +
	"\x05count\x18\x01 \x01(\x03H\x00R\x05count\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\x02 \x01(\tH\x01R\x04type\x88\x01\x01\x12\x17\n" +
	"\x04mean\x18\x03 \x01(\x01H\x02R\x04mean\x88\x01\x01\x12\x1b\n" +
	"\x06median\x18\x04 \x01(\x01H\x03R\x06median\x88\x01\x01\x12\x17\n" +
	"\x04mode\x18\x05 \x01(\x01H\x04R\x04mode\x88\x01\x01\x12\x1d\n" +
	"\amaximum\x18\x06 \x01(\x01H\x05R\amaximum\x88\x01\x01\x12\x1d\n" +
	"\aminimum\x18\a \x01(\x01H\x06R\aminimum\x88\x01\x01\x12\x15\n" +
	"\x03sum\x18\b \x01(\x01H\aR\x03sum\x88\x01\x01B\b\n" +
	"\x06_countB\a\n" +
	"\x05_typeB\a\n" +
	"\x05_meanB\t\n" +
	"\a_medianB\a\n" +
	"\x05_modeB\n" +
	"\n" +
	"\b_maximumB\n" +
	"\n" +
	"\b_minimumB\x06\n" +
	"\x04_sum\x1a\x96\x03\n" +
	"\x04Text\x12\x19\n" +
	"\x05count\x18\x01 \x01(\x03H\x00R\x05count\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\x02 \x01(\tH\x01R\x04type\x88\x01\x01\x12t\n" +
	"\x0etop_occurences\x18\x03 \x01(\v2H.weaviate.v1.AggregateReply.Aggregations.Aggregation.Text.TopOccurrencesH\x02R\rtopOccurences\x88\x01\x01\x1a\xbd\x01\n" +
	"\x0eTopOccurrences\x12l\n" +
	"\x05items\x18\x01 \x03(\v2V.weaviate.v1.AggregateReply.Aggregations.Aggregation.Text.TopOccurrences.TopOccurrenceR\x05items\x1a=\n" +
	"\rTopOccurrence\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x16\n" +
	"\x06occurs\x18\x02 \x01(\x03R\x06occursB\b\n" +
	"\x06_countB\a\n" +
	"\x05_typeB\x11\n" +
	"\x0f_top_occurences\x1a\xc0\x02\n" +
	"\aBoolean\x12\x19\n" +
	"\x05count\x18\x01 \x01(\x03H\x00R\x05count\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\x02 \x01(\tH\x01R\x04type\x88\x01\x01\x12\"\n" +
	"\n" +
	"total_true\x18\x03 \x01(\x03H\x02R\ttotalTrue\x88\x01\x01\x12$\n" +
	"\vtotal_false\x18\x04 \x01(\x03H\x03R\n" +
	"totalFalse\x88\x01\x01\x12,\n" +
	"\x0fpercentage_true\x18\x05 \x01(\x01H\x04R\x0epercentageTrue\x88\x01\x01\x12.\n" +
	"\x10percentage_false\x18\x06 \x01(\x01H\x05R\x0fpercentageFalse\x88\x01\x01B\b\n" +
	"\x06_countB\a\n" +
	"\x05_typeB\r\n" +
	"\v_total_trueB\x0e\n" +
	"\f_total_falseB\x12\n" +
	"\x10_percentage_trueB\x13\n" +
	"\x11_percentage_false\x1a\xed\x01\n" +
	"\x04Date\x12\x19\n" +
	"\x05count\x18\x01 \x01(\x03H\x00R\x05count\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\x02 \x01(\tH\x01R\x04type\x88\x01\x01\x12\x1b\n" +
	"\x06median\x18\x03 \x01(\tH\x02R\x06median\x88\x01\x01\x12\x17\n" +
	"\x04mode\x18\x04 \x01(\tH\x03R\x04mode\x88\x01\x01\x12\x1d\n" +
	"\amaximum\x18\x05 \x01(\tH\x04R\amaximum\x88\x01\x01\x12\x1d\n" +
	"\aminimum\x18\x06 \x01(\tH\x05R\aminimum\x88\x01\x01B\b\n" +
	"\x06_countB\a\n" +
	"\x05_typeB\t\n" +
	"\a_medianB\a\n" +
	"\x05_modeB\n" +
	"\n" +
	"\b_maximumB\n" +
	"\n" +
	"\b_minimum\x1aN\n" +
	"\tReference\x12\x17\n" +
	"\x04type\x18\x01 \x01(\tH\x00R\x04type\x88\x01\x01\x12\x1f\n" +
	"\vpointing_to\x18\x02 \x03(\tR\n" +
	"pointingToB\a\n" +
	"\x05_typeB\r\n" +
	"\vaggregation\x1a\xa8\x01\n" +
	"\x06Single\x12(\n" +
	"\robjects_count\x18\x01 \x01(\x03H\x00R\fobjectsCount\x88\x01\x01\x12Q\n" +
	"\faggregations\x18\x02 \x01(\v2(.weaviate.v1.AggregateReply.AggregationsH\x01R\faggregations\x88\x01\x01B\x10\n" +
	"\x0e_objects_countB\x0f\n" +
	"\r_aggregations\x1a\x95\x05\n" +
	"\x05Group\x12(\n" +
	"\robjects_count\x18\x01 \x01(\x03H\x00R\fobjectsCount\x88\x01\x01\x12Q\n" +
	"\faggregations\x18\x02 \x01(\v2(.weaviate.v1.AggregateReply.AggregationsH\x01R\faggregations\x88\x01\x01\x12O\n" +
	"\n" +
	"grouped_by\x18\x03 \x01(\v2+.weaviate.v1.AggregateReply.Group.GroupedByH\x02R\tgroupedBy\x88\x01\x01\x1a\x8b\x03\n" +
	"\tGroupedBy\x12\x12\n" +
	"\x04path\x18\x01 \x03(\tR\x04path\x12\x14\n" +
	"\x04text\x18\x02 \x01(\tH\x00R\x04text\x12\x12\n" +
	"\x03int\x18\x03 \x01(\x03H\x00R\x03int\x12\x1a\n" +
	"\aboolean\x18\x04 \x01(\bH\x00R\aboolean\x12\x18\n" +
	"\x06number\x18\x05 \x01(\x01H\x00R\x06number\x12.\n" +
	"\x05texts\x18\x06 \x01(\v2\x16.weaviate.v1.TextArrayH\x00R\x05texts\x12+\n" +
	"\x04ints\x18\a \x01(\v2\x15.weaviate.v1.IntArrayH\x00R\x04ints\x127\n" +
	"\bbooleans\x18\b \x01(\v2\x19.weaviate.v1.BooleanArrayH\x00R\bbooleans\x124\n" +
	"\anumbers\x18\t \x01(\v2\x18.weaviate.v1.NumberArrayH\x00R\anumbers\x125\n" +
	"\x03geo\x18\n" +
	" \x01(\v2!.weaviate.v1.GeoCoordinatesFilterH\x00R\x03geoB\a\n" +
	"\x05valueB\x10\n" +
	"\x0e_objects_countB\x0f\n" +
	"\r_aggregationsB\r\n" +
	"\v_grouped_by\x1aD\n" +
	"\aGrouped\x129\n" +
	"\x06groups\x18\x01 \x03(\v2!.weaviate.v1.AggregateReply.GroupR\x06groupsB\b\n" +
	"\x06resultBs\n" +
	"#io.weaviate.client.grpc.protocol.v1B\x16WeaviateProtoAggregateZ4github.com/weaviate/weaviate/grpc/generated;protocolb\x06proto3"

var (
	file_v1_aggregate_proto_rawDescOnce sync.Once
	file_v1_aggregate_proto_rawDescData []byte
)

func file_v1_aggregate_proto_rawDescGZIP() []byte {
	file_v1_aggregate_proto_rawDescOnce.Do(func() {
		file_v1_aggregate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_aggregate_proto_rawDesc), len(file_v1_aggregate_proto_rawDesc)))
	})
	return file_v1_aggregate_proto_rawDescData
}

var (
	file_v1_aggregate_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
	file_v1_aggregate_proto_goTypes  = []any{
		(*AggregateRequest)(nil),                                                          // 0: weaviate.v1.AggregateRequest
		(*AggregateReply)(nil),                                                            // 1: weaviate.v1.AggregateReply
		(*AggregateRequest_Aggregation)(nil),                                              // 2: weaviate.v1.AggregateRequest.Aggregation
		(*AggregateRequest_GroupBy)(nil),                                                  // 3: weaviate.v1.AggregateRequest.GroupBy
		(*AggregateRequest_Aggregation_Integer)(nil),                                      // 4: weaviate.v1.AggregateRequest.Aggregation.Integer
		(*AggregateRequest_Aggregation_Number)(nil),                                       // 5: weaviate.v1.AggregateRequest.Aggregation.Number
		(*AggregateRequest_Aggregation_Text)(nil),                                         // 6: weaviate.v1.AggregateRequest.Aggregation.Text
		(*AggregateRequest_Aggregation_Boolean)(nil),                                      // 7: weaviate.v1.AggregateRequest.Aggregation.Boolean
		(*AggregateRequest_Aggregation_Date)(nil),                                         // 8: weaviate.v1.AggregateRequest.Aggregation.Date
		(*AggregateRequest_Aggregation_Reference)(nil),                                    // 9: weaviate.v1.AggregateRequest.Aggregation.Reference
		(*AggregateReply_Aggregations)(nil),                                               // 10: weaviate.v1.AggregateReply.Aggregations
		(*AggregateReply_Single)(nil),                                                     // 11: weaviate.v1.AggregateReply.Single
		(*AggregateReply_Group)(nil),                                                      // 12: weaviate.v1.AggregateReply.Group
		(*AggregateReply_Grouped)(nil),                                                    // 13: weaviate.v1.AggregateReply.Grouped
		(*AggregateReply_Aggregations_Aggregation)(nil),                                   // 14: weaviate.v1.AggregateReply.Aggregations.Aggregation
		(*AggregateReply_Aggregations_Aggregation_Integer)(nil),                           // 15: weaviate.v1.AggregateReply.Aggregations.Aggregation.Integer
		(*AggregateReply_Aggregations_Aggregation_Number)(nil),                            // 16: weaviate.v1.AggregateReply.Aggregations.Aggregation.Number
		(*AggregateReply_Aggregations_Aggregation_Text)(nil),                              // 17: weaviate.v1.AggregateReply.Aggregations.Aggregation.Text
		(*AggregateReply_Aggregations_Aggregation_Boolean)(nil),                           // 18: weaviate.v1.AggregateReply.Aggregations.Aggregation.Boolean
		(*AggregateReply_Aggregations_Aggregation_Date)(nil),                              // 19: weaviate.v1.AggregateReply.Aggregations.Aggregation.Date
		(*AggregateReply_Aggregations_Aggregation_Reference)(nil),                         // 20: weaviate.v1.AggregateReply.Aggregations.Aggregation.Reference
		(*AggregateReply_Aggregations_Aggregation_Text_TopOccurrences)(nil),               // 21: weaviate.v1.AggregateReply.Aggregations.Aggregation.Text.TopOccurrences
		(*AggregateReply_Aggregations_Aggregation_Text_TopOccurrences_TopOccurrence)(nil), // 22: weaviate.v1.AggregateReply.Aggregations.Aggregation.Text.TopOccurrences.TopOccurrence
		(*AggregateReply_Group_GroupedBy)(nil),                                            // 23: weaviate.v1.AggregateReply.Group.GroupedBy
		(*Filters)(nil),                                                                   // 24: weaviate.v1.Filters
		(*Hybrid)(nil),                                                                    // 25: weaviate.v1.Hybrid
		(*NearVector)(nil),                                                                // 26: weaviate.v1.NearVector
		(*NearObject)(nil),                                                                // 27: weaviate.v1.NearObject
		(*NearTextSearch)(nil),                                                            // 28: weaviate.v1.NearTextSearch
		(*NearImageSearch)(nil),                                                           // 29: weaviate.v1.NearImageSearch
		(*NearAudioSearch)(nil),                                                           // 30: weaviate.v1.NearAudioSearch
		(*NearVideoSearch)(nil),                                                           // 31: weaviate.v1.NearVideoSearch
		(*NearDepthSearch)(nil),                                                           // 32: weaviate.v1.NearDepthSearch
		(*NearThermalSearch)(nil),                                                         // 33: weaviate.v1.NearThermalSearch
		(*NearIMUSearch)(nil),                                                             // 34: weaviate.v1.NearIMUSearch
		(*TextArray)(nil),                                                                 // 35: weaviate.v1.TextArray
		(*IntArray)(nil),                                                                  // 36: weaviate.v1.IntArray
		(*BooleanArray)(nil),                                                              // 37: weaviate.v1.BooleanArray
		(*NumberArray)(nil),                                                               // 38: weaviate.v1.NumberArray
		(*GeoCoordinatesFilter)(nil),                                                      // 39: weaviate.v1.GeoCoordinatesFilter
	}
)

var file_v1_aggregate_proto_depIdxs = []int32{
	2,  // 0: weaviate.v1.AggregateRequest.aggregations:type_name -> weaviate.v1.AggregateRequest.Aggregation
	3,  // 1: weaviate.v1.AggregateRequest.group_by:type_name -> weaviate.v1.AggregateRequest.GroupBy
	24, // 2: weaviate.v1.AggregateRequest.filters:type_name -> weaviate.v1.Filters
	25, // 3: weaviate.v1.AggregateRequest.hybrid:type_name -> weaviate.v1.Hybrid
	26, // 4: weaviate.v1.AggregateRequest.near_vector:type_name -> weaviate.v1.NearVector
	27, // 5: weaviate.v1.AggregateRequest.near_object:type_name -> weaviate.v1.NearObject
	28, // 6: weaviate.v1.AggregateRequest.near_text:type_name -> weaviate.v1.NearTextSearch
	29, // 7: weaviate.v1.AggregateRequest.near_image:type_name -> weaviate.v1.NearImageSearch
	30, // 8: weaviate.v1.AggregateRequest.near_audio:type_name -> weaviate.v1.NearAudioSearch
	31, // 9: weaviate.v1.AggregateRequest.near_video:type_name -> weaviate.v1.NearVideoSearch
	32, // 10: weaviate.v1.AggregateRequest.near_depth:type_name -> weaviate.v1.NearDepthSearch
	33, // 11: weaviate.v1.AggregateRequest.near_thermal:type_name -> weaviate.v1.NearThermalSearch
	34, // 12: weaviate.v1.AggregateRequest.near_imu:type_name -> weaviate.v1.NearIMUSearch
	11, // 13: weaviate.v1.AggregateReply.single_result:type_name -> weaviate.v1.AggregateReply.Single
	13, // 14: weaviate.v1.AggregateReply.grouped_results:type_name -> weaviate.v1.AggregateReply.Grouped
	4,  // 15: weaviate.v1.AggregateRequest.Aggregation.int:type_name -> weaviate.v1.AggregateRequest.Aggregation.Integer
	5,  // 16: weaviate.v1.AggregateRequest.Aggregation.number:type_name -> weaviate.v1.AggregateRequest.Aggregation.Number
	6,  // 17: weaviate.v1.AggregateRequest.Aggregation.text:type_name -> weaviate.v1.AggregateRequest.Aggregation.Text
	7,  // 18: weaviate.v1.AggregateRequest.Aggregation.boolean:type_name -> weaviate.v1.AggregateRequest.Aggregation.Boolean
	8,  // 19: weaviate.v1.AggregateRequest.Aggregation.date:type_name -> weaviate.v1.AggregateRequest.Aggregation.Date
	9,  // 20: weaviate.v1.AggregateRequest.Aggregation.reference:type_name -> weaviate.v1.AggregateRequest.Aggregation.Reference
	14, // 21: weaviate.v1.AggregateReply.Aggregations.aggregations:type_name -> weaviate.v1.AggregateReply.Aggregations.Aggregation
	10, // 22: weaviate.v1.AggregateReply.Single.aggregations:type_name -> weaviate.v1.AggregateReply.Aggregations
	10, // 23: weaviate.v1.AggregateReply.Group.aggregations:type_name -> weaviate.v1.AggregateReply.Aggregations
	23, // 24: weaviate.v1.AggregateReply.Group.grouped_by:type_name -> weaviate.v1.AggregateReply.Group.GroupedBy
	12, // 25: weaviate.v1.AggregateReply.Grouped.groups:type_name -> weaviate.v1.AggregateReply.Group
	15, // 26: weaviate.v1.AggregateReply.Aggregations.Aggregation.int:type_name -> weaviate.v1.AggregateReply.Aggregations.Aggregation.Integer
	16, // 27: weaviate.v1.AggregateReply.Aggregations.Aggregation.number:type_name -> weaviate.v1.AggregateReply.Aggregations.Aggregation.Number
	17, // 28: weaviate.v1.AggregateReply.Aggregations.Aggregation.text:type_name -> weaviate.v1.AggregateReply.Aggregations.Aggregation.Text
	18, // 29: weaviate.v1.AggregateReply.Aggregations.Aggregation.boolean:type_name -> weaviate.v1.AggregateReply.Aggregations.Aggregation.Boolean
	19, // 30: weaviate.v1.AggregateReply.Aggregations.Aggregation.date:type_name -> weaviate.v1.AggregateReply.Aggregations.Aggregation.Date
	20, // 31: weaviate.v1.AggregateReply.Aggregations.Aggregation.reference:type_name -> weaviate.v1.AggregateReply.Aggregations.Aggregation.Reference
	21, // 32: weaviate.v1.AggregateReply.Aggregations.Aggregation.Text.top_occurences:type_name -> weaviate.v1.AggregateReply.Aggregations.Aggregation.Text.TopOccurrences
	22, // 33: weaviate.v1.AggregateReply.Aggregations.Aggregation.Text.TopOccurrences.items:type_name -> weaviate.v1.AggregateReply.Aggregations.Aggregation.Text.TopOccurrences.TopOccurrence
	35, // 34: weaviate.v1.AggregateReply.Group.GroupedBy.texts:type_name -> weaviate.v1.TextArray
	36, // 35: weaviate.v1.AggregateReply.Group.GroupedBy.ints:type_name -> weaviate.v1.IntArray
	37, // 36: weaviate.v1.AggregateReply.Group.GroupedBy.booleans:type_name -> weaviate.v1.BooleanArray
	38, // 37: weaviate.v1.AggregateReply.Group.GroupedBy.numbers:type_name -> weaviate.v1.NumberArray
	39, // 38: weaviate.v1.AggregateReply.Group.GroupedBy.geo:type_name -> weaviate.v1.GeoCoordinatesFilter
	39, // [39:39] is the sub-list for method output_type
	39, // [39:39] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_v1_aggregate_proto_init() }
func file_v1_aggregate_proto_init() {
	if File_v1_aggregate_proto != nil {
		return
	}
	file_v1_base_proto_init()
	file_v1_base_search_proto_init()
	file_v1_aggregate_proto_msgTypes[0].OneofWrappers = []any{
		(*AggregateRequest_Hybrid)(nil),
		(*AggregateRequest_NearVector)(nil),
		(*AggregateRequest_NearObject)(nil),
		(*AggregateRequest_NearText)(nil),
		(*AggregateRequest_NearImage)(nil),
		(*AggregateRequest_NearAudio)(nil),
		(*AggregateRequest_NearVideo)(nil),
		(*AggregateRequest_NearDepth)(nil),
		(*AggregateRequest_NearThermal)(nil),
		(*AggregateRequest_NearImu)(nil),
	}
	file_v1_aggregate_proto_msgTypes[1].OneofWrappers = []any{
		(*AggregateReply_SingleResult)(nil),
		(*AggregateReply_GroupedResults)(nil),
	}
	file_v1_aggregate_proto_msgTypes[2].OneofWrappers = []any{
		(*AggregateRequest_Aggregation_Int)(nil),
		(*AggregateRequest_Aggregation_Number_)(nil),
		(*AggregateRequest_Aggregation_Text_)(nil),
		(*AggregateRequest_Aggregation_Boolean_)(nil),
		(*AggregateRequest_Aggregation_Date_)(nil),
		(*AggregateRequest_Aggregation_Reference_)(nil),
	}
	file_v1_aggregate_proto_msgTypes[6].OneofWrappers = []any{}
	file_v1_aggregate_proto_msgTypes[11].OneofWrappers = []any{}
	file_v1_aggregate_proto_msgTypes[12].OneofWrappers = []any{}
	file_v1_aggregate_proto_msgTypes[14].OneofWrappers = []any{
		(*AggregateReply_Aggregations_Aggregation_Int)(nil),
		(*AggregateReply_Aggregations_Aggregation_Number_)(nil),
		(*AggregateReply_Aggregations_Aggregation_Text_)(nil),
		(*AggregateReply_Aggregations_Aggregation_Boolean_)(nil),
		(*AggregateReply_Aggregations_Aggregation_Date_)(nil),
		(*AggregateReply_Aggregations_Aggregation_Reference_)(nil),
	}
	file_v1_aggregate_proto_msgTypes[15].OneofWrappers = []any{}
	file_v1_aggregate_proto_msgTypes[16].OneofWrappers = []any{}
	file_v1_aggregate_proto_msgTypes[17].OneofWrappers = []any{}
	file_v1_aggregate_proto_msgTypes[18].OneofWrappers = []any{}
	file_v1_aggregate_proto_msgTypes[19].OneofWrappers = []any{}
	file_v1_aggregate_proto_msgTypes[20].OneofWrappers = []any{}
	file_v1_aggregate_proto_msgTypes[23].OneofWrappers = []any{
		(*AggregateReply_Group_GroupedBy_Text)(nil),
		(*AggregateReply_Group_GroupedBy_Int)(nil),
		(*AggregateReply_Group_GroupedBy_Boolean)(nil),
		(*AggregateReply_Group_GroupedBy_Number)(nil),
		(*AggregateReply_Group_GroupedBy_Texts)(nil),
		(*AggregateReply_Group_GroupedBy_Ints)(nil),
		(*AggregateReply_Group_GroupedBy_Booleans)(nil),
		(*AggregateReply_Group_GroupedBy_Numbers)(nil),
		(*AggregateReply_Group_GroupedBy_Geo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_aggregate_proto_rawDesc), len(file_v1_aggregate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_aggregate_proto_goTypes,
		DependencyIndexes: file_v1_aggregate_proto_depIdxs,
		MessageInfos:      file_v1_aggregate_proto_msgTypes,
	}.Build()
	File_v1_aggregate_proto = out.File
	file_v1_aggregate_proto_goTypes = nil
	file_v1_aggregate_proto_depIdxs = nil
}
