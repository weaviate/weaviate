//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2022 SeMI Technologies B.V. All rights reserved.
//
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package objects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/semi-technologies/weaviate/entities/models"
)

// ObjectsValidateReader is a Reader for the ObjectsValidate structure.
type ObjectsValidateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ObjectsValidateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewObjectsValidateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewObjectsValidateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewObjectsValidateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewObjectsValidateUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewObjectsValidateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewObjectsValidateOK creates a ObjectsValidateOK with default headers values
func NewObjectsValidateOK() *ObjectsValidateOK {
	return &ObjectsValidateOK{}
}

/*
ObjectsValidateOK handles this case with default header values.

Successfully validated.
*/
type ObjectsValidateOK struct {
}

func (o *ObjectsValidateOK) Error() string {
	return fmt.Sprintf("[POST /objects/validate][%d] objectsValidateOK ", 200)
}

func (o *ObjectsValidateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewObjectsValidateUnauthorized creates a ObjectsValidateUnauthorized with default headers values
func NewObjectsValidateUnauthorized() *ObjectsValidateUnauthorized {
	return &ObjectsValidateUnauthorized{}
}

/*
ObjectsValidateUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type ObjectsValidateUnauthorized struct {
}

func (o *ObjectsValidateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /objects/validate][%d] objectsValidateUnauthorized ", 401)
}

func (o *ObjectsValidateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewObjectsValidateForbidden creates a ObjectsValidateForbidden with default headers values
func NewObjectsValidateForbidden() *ObjectsValidateForbidden {
	return &ObjectsValidateForbidden{}
}

/*
ObjectsValidateForbidden handles this case with default header values.

Forbidden
*/
type ObjectsValidateForbidden struct {
	Payload *models.ErrorResponse
}

func (o *ObjectsValidateForbidden) Error() string {
	return fmt.Sprintf("[POST /objects/validate][%d] objectsValidateForbidden  %+v", 403, o.Payload)
}

func (o *ObjectsValidateForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ObjectsValidateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObjectsValidateUnprocessableEntity creates a ObjectsValidateUnprocessableEntity with default headers values
func NewObjectsValidateUnprocessableEntity() *ObjectsValidateUnprocessableEntity {
	return &ObjectsValidateUnprocessableEntity{}
}

/*
ObjectsValidateUnprocessableEntity handles this case with default header values.

Request body is well-formed (i.e., syntactically correct), but semantically erroneous. Are you sure the class is defined in the configuration file?
*/
type ObjectsValidateUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

func (o *ObjectsValidateUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /objects/validate][%d] objectsValidateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ObjectsValidateUnprocessableEntity) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ObjectsValidateUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObjectsValidateInternalServerError creates a ObjectsValidateInternalServerError with default headers values
func NewObjectsValidateInternalServerError() *ObjectsValidateInternalServerError {
	return &ObjectsValidateInternalServerError{}
}

/*
ObjectsValidateInternalServerError handles this case with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type ObjectsValidateInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ObjectsValidateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /objects/validate][%d] objectsValidateInternalServerError  %+v", 500, o.Payload)
}

func (o *ObjectsValidateInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ObjectsValidateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
