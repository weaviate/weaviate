//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2022 SeMI Technologies B.V. All rights reserved.
//
//  CONTACT: hello@semi.technology
//

// Code generated by go-swagger; DO NOT EDIT.

package objects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/semi-technologies/weaviate/entities/models"
)

// ObjectsUpdateReader is a Reader for the ObjectsUpdate structure.
type ObjectsUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ObjectsUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewObjectsUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewObjectsUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewObjectsUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewObjectsUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewObjectsUpdateUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewObjectsUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewObjectsUpdateOK creates a ObjectsUpdateOK with default headers values
func NewObjectsUpdateOK() *ObjectsUpdateOK {
	return &ObjectsUpdateOK{}
}

/*
ObjectsUpdateOK handles this case with default header values.

Successfully received.
*/
type ObjectsUpdateOK struct {
	Payload *models.Object
}

func (o *ObjectsUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /objects/{id}][%d] objectsUpdateOK  %+v", 200, o.Payload)
}

func (o *ObjectsUpdateOK) GetPayload() *models.Object {
	return o.Payload
}

func (o *ObjectsUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Object)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObjectsUpdateUnauthorized creates a ObjectsUpdateUnauthorized with default headers values
func NewObjectsUpdateUnauthorized() *ObjectsUpdateUnauthorized {
	return &ObjectsUpdateUnauthorized{}
}

/*
ObjectsUpdateUnauthorized handles this case with default header values.

Unauthorized or invalid credentials.
*/
type ObjectsUpdateUnauthorized struct {
}

func (o *ObjectsUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /objects/{id}][%d] objectsUpdateUnauthorized ", 401)
}

func (o *ObjectsUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewObjectsUpdateForbidden creates a ObjectsUpdateForbidden with default headers values
func NewObjectsUpdateForbidden() *ObjectsUpdateForbidden {
	return &ObjectsUpdateForbidden{}
}

/*
ObjectsUpdateForbidden handles this case with default header values.

Forbidden
*/
type ObjectsUpdateForbidden struct {
	Payload *models.ErrorResponse
}

func (o *ObjectsUpdateForbidden) Error() string {
	return fmt.Sprintf("[PUT /objects/{id}][%d] objectsUpdateForbidden  %+v", 403, o.Payload)
}

func (o *ObjectsUpdateForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ObjectsUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObjectsUpdateNotFound creates a ObjectsUpdateNotFound with default headers values
func NewObjectsUpdateNotFound() *ObjectsUpdateNotFound {
	return &ObjectsUpdateNotFound{}
}

/*
ObjectsUpdateNotFound handles this case with default header values.

Successful query result but no resource was found.
*/
type ObjectsUpdateNotFound struct {
}

func (o *ObjectsUpdateNotFound) Error() string {
	return fmt.Sprintf("[PUT /objects/{id}][%d] objectsUpdateNotFound ", 404)
}

func (o *ObjectsUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewObjectsUpdateUnprocessableEntity creates a ObjectsUpdateUnprocessableEntity with default headers values
func NewObjectsUpdateUnprocessableEntity() *ObjectsUpdateUnprocessableEntity {
	return &ObjectsUpdateUnprocessableEntity{}
}

/*
ObjectsUpdateUnprocessableEntity handles this case with default header values.

Request body is well-formed (i.e., syntactically correct), but semantically erroneous. Are you sure the class is defined in the configuration file?
*/
type ObjectsUpdateUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

func (o *ObjectsUpdateUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /objects/{id}][%d] objectsUpdateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ObjectsUpdateUnprocessableEntity) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ObjectsUpdateUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObjectsUpdateInternalServerError creates a ObjectsUpdateInternalServerError with default headers values
func NewObjectsUpdateInternalServerError() *ObjectsUpdateInternalServerError {
	return &ObjectsUpdateInternalServerError{}
}

/*
ObjectsUpdateInternalServerError handles this case with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type ObjectsUpdateInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ObjectsUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /objects/{id}][%d] objectsUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *ObjectsUpdateInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ObjectsUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
