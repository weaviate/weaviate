//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package authz

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/weaviate/weaviate/entities/models"
)

// RemovedPermissionReader is a Reader for the RemovedPermission structure.
type RemovedPermissionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemovedPermissionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewRemovedPermissionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRemovedPermissionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRemovedPermissionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewRemovedPermissionUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemovedPermissionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRemovedPermissionCreated creates a RemovedPermissionCreated with default headers values
func NewRemovedPermissionCreated() *RemovedPermissionCreated {
	return &RemovedPermissionCreated{}
}

/*
RemovedPermissionCreated describes a response with status code 201, with default header values.

Permission removed successfully
*/
type RemovedPermissionCreated struct {
}

// IsSuccess returns true when this removed permission created response has a 2xx status code
func (o *RemovedPermissionCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this removed permission created response has a 3xx status code
func (o *RemovedPermissionCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this removed permission created response has a 4xx status code
func (o *RemovedPermissionCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this removed permission created response has a 5xx status code
func (o *RemovedPermissionCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this removed permission created response a status code equal to that given
func (o *RemovedPermissionCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the removed permission created response
func (o *RemovedPermissionCreated) Code() int {
	return 201
}

func (o *RemovedPermissionCreated) Error() string {
	return fmt.Sprintf("[POST /authz/roles/remove-permission][%d] removedPermissionCreated ", 201)
}

func (o *RemovedPermissionCreated) String() string {
	return fmt.Sprintf("[POST /authz/roles/remove-permission][%d] removedPermissionCreated ", 201)
}

func (o *RemovedPermissionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemovedPermissionUnauthorized creates a RemovedPermissionUnauthorized with default headers values
func NewRemovedPermissionUnauthorized() *RemovedPermissionUnauthorized {
	return &RemovedPermissionUnauthorized{}
}

/*
RemovedPermissionUnauthorized describes a response with status code 401, with default header values.

Unauthorized or invalid credentials.
*/
type RemovedPermissionUnauthorized struct {
}

// IsSuccess returns true when this removed permission unauthorized response has a 2xx status code
func (o *RemovedPermissionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this removed permission unauthorized response has a 3xx status code
func (o *RemovedPermissionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this removed permission unauthorized response has a 4xx status code
func (o *RemovedPermissionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this removed permission unauthorized response has a 5xx status code
func (o *RemovedPermissionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this removed permission unauthorized response a status code equal to that given
func (o *RemovedPermissionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the removed permission unauthorized response
func (o *RemovedPermissionUnauthorized) Code() int {
	return 401
}

func (o *RemovedPermissionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /authz/roles/remove-permission][%d] removedPermissionUnauthorized ", 401)
}

func (o *RemovedPermissionUnauthorized) String() string {
	return fmt.Sprintf("[POST /authz/roles/remove-permission][%d] removedPermissionUnauthorized ", 401)
}

func (o *RemovedPermissionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemovedPermissionForbidden creates a RemovedPermissionForbidden with default headers values
func NewRemovedPermissionForbidden() *RemovedPermissionForbidden {
	return &RemovedPermissionForbidden{}
}

/*
RemovedPermissionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RemovedPermissionForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this removed permission forbidden response has a 2xx status code
func (o *RemovedPermissionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this removed permission forbidden response has a 3xx status code
func (o *RemovedPermissionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this removed permission forbidden response has a 4xx status code
func (o *RemovedPermissionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this removed permission forbidden response has a 5xx status code
func (o *RemovedPermissionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this removed permission forbidden response a status code equal to that given
func (o *RemovedPermissionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the removed permission forbidden response
func (o *RemovedPermissionForbidden) Code() int {
	return 403
}

func (o *RemovedPermissionForbidden) Error() string {
	return fmt.Sprintf("[POST /authz/roles/remove-permission][%d] removedPermissionForbidden  %+v", 403, o.Payload)
}

func (o *RemovedPermissionForbidden) String() string {
	return fmt.Sprintf("[POST /authz/roles/remove-permission][%d] removedPermissionForbidden  %+v", 403, o.Payload)
}

func (o *RemovedPermissionForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *RemovedPermissionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemovedPermissionUnprocessableEntity creates a RemovedPermissionUnprocessableEntity with default headers values
func NewRemovedPermissionUnprocessableEntity() *RemovedPermissionUnprocessableEntity {
	return &RemovedPermissionUnprocessableEntity{}
}

/*
RemovedPermissionUnprocessableEntity describes a response with status code 422, with default header values.

Request body is well-formed (i.e., syntactically correct), but semantically erroneous. Are you sure the class is defined in the configuration file?
*/
type RemovedPermissionUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this removed permission unprocessable entity response has a 2xx status code
func (o *RemovedPermissionUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this removed permission unprocessable entity response has a 3xx status code
func (o *RemovedPermissionUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this removed permission unprocessable entity response has a 4xx status code
func (o *RemovedPermissionUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this removed permission unprocessable entity response has a 5xx status code
func (o *RemovedPermissionUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this removed permission unprocessable entity response a status code equal to that given
func (o *RemovedPermissionUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the removed permission unprocessable entity response
func (o *RemovedPermissionUnprocessableEntity) Code() int {
	return 422
}

func (o *RemovedPermissionUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /authz/roles/remove-permission][%d] removedPermissionUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *RemovedPermissionUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /authz/roles/remove-permission][%d] removedPermissionUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *RemovedPermissionUnprocessableEntity) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *RemovedPermissionUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemovedPermissionInternalServerError creates a RemovedPermissionInternalServerError with default headers values
func NewRemovedPermissionInternalServerError() *RemovedPermissionInternalServerError {
	return &RemovedPermissionInternalServerError{}
}

/*
RemovedPermissionInternalServerError describes a response with status code 500, with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type RemovedPermissionInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this removed permission internal server error response has a 2xx status code
func (o *RemovedPermissionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this removed permission internal server error response has a 3xx status code
func (o *RemovedPermissionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this removed permission internal server error response has a 4xx status code
func (o *RemovedPermissionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this removed permission internal server error response has a 5xx status code
func (o *RemovedPermissionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this removed permission internal server error response a status code equal to that given
func (o *RemovedPermissionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the removed permission internal server error response
func (o *RemovedPermissionInternalServerError) Code() int {
	return 500
}

func (o *RemovedPermissionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /authz/roles/remove-permission][%d] removedPermissionInternalServerError  %+v", 500, o.Payload)
}

func (o *RemovedPermissionInternalServerError) String() string {
	return fmt.Sprintf("[POST /authz/roles/remove-permission][%d] removedPermissionInternalServerError  %+v", 500, o.Payload)
}

func (o *RemovedPermissionInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *RemovedPermissionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
RemovedPermissionBody removed permission body
swagger:model RemovedPermissionBody
*/
type RemovedPermissionBody struct {

	// name
	Name interface{} `json:"name,omitempty"`

	// permissions
	Permissions []*models.Permission `json:"permissions"`
}

// Validate validates this removed permission body
func (o *RemovedPermissionBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePermissions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RemovedPermissionBody) validatePermissions(formats strfmt.Registry) error {
	if swag.IsZero(o.Permissions) { // not required
		return nil
	}

	for i := 0; i < len(o.Permissions); i++ {
		if swag.IsZero(o.Permissions[i]) { // not required
			continue
		}

		if o.Permissions[i] != nil {
			if err := o.Permissions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "permissions" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "permissions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this removed permission body based on the context it is used
func (o *RemovedPermissionBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidatePermissions(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RemovedPermissionBody) contextValidatePermissions(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Permissions); i++ {

		if o.Permissions[i] != nil {
			if err := o.Permissions[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "permissions" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "permissions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *RemovedPermissionBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RemovedPermissionBody) UnmarshalBinary(b []byte) error {
	var res RemovedPermissionBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
