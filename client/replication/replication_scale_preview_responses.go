//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package replication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/weaviate/weaviate/entities/models"
)

// ReplicationScalePreviewReader is a Reader for the ReplicationScalePreview structure.
type ReplicationScalePreviewReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplicationScalePreviewReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReplicationScalePreviewOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReplicationScalePreviewBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReplicationScalePreviewUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReplicationScalePreviewForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReplicationScalePreviewNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReplicationScalePreviewInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewReplicationScalePreviewNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewReplicationScalePreviewOK creates a ReplicationScalePreviewOK with default headers values
func NewReplicationScalePreviewOK() *ReplicationScalePreviewOK {
	return &ReplicationScalePreviewOK{}
}

/*
ReplicationScalePreviewOK describes a response with status code 200, with default header values.

Projected sharding state for the desired replication factor
*/
type ReplicationScalePreviewOK struct {
	Payload *models.ReplicationScalePreviewResponse
}

// IsSuccess returns true when this replication scale preview o k response has a 2xx status code
func (o *ReplicationScalePreviewOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this replication scale preview o k response has a 3xx status code
func (o *ReplicationScalePreviewOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replication scale preview o k response has a 4xx status code
func (o *ReplicationScalePreviewOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this replication scale preview o k response has a 5xx status code
func (o *ReplicationScalePreviewOK) IsServerError() bool {
	return false
}

// IsCode returns true when this replication scale preview o k response a status code equal to that given
func (o *ReplicationScalePreviewOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the replication scale preview o k response
func (o *ReplicationScalePreviewOK) Code() int {
	return 200
}

func (o *ReplicationScalePreviewOK) Error() string {
	return fmt.Sprintf("[GET /replication/scale][%d] replicationScalePreviewOK  %+v", 200, o.Payload)
}

func (o *ReplicationScalePreviewOK) String() string {
	return fmt.Sprintf("[GET /replication/scale][%d] replicationScalePreviewOK  %+v", 200, o.Payload)
}

func (o *ReplicationScalePreviewOK) GetPayload() *models.ReplicationScalePreviewResponse {
	return o.Payload
}

func (o *ReplicationScalePreviewOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReplicationScalePreviewResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplicationScalePreviewBadRequest creates a ReplicationScalePreviewBadRequest with default headers values
func NewReplicationScalePreviewBadRequest() *ReplicationScalePreviewBadRequest {
	return &ReplicationScalePreviewBadRequest{}
}

/*
ReplicationScalePreviewBadRequest describes a response with status code 400, with default header values.

Bad request.
*/
type ReplicationScalePreviewBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this replication scale preview bad request response has a 2xx status code
func (o *ReplicationScalePreviewBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replication scale preview bad request response has a 3xx status code
func (o *ReplicationScalePreviewBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replication scale preview bad request response has a 4xx status code
func (o *ReplicationScalePreviewBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this replication scale preview bad request response has a 5xx status code
func (o *ReplicationScalePreviewBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this replication scale preview bad request response a status code equal to that given
func (o *ReplicationScalePreviewBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the replication scale preview bad request response
func (o *ReplicationScalePreviewBadRequest) Code() int {
	return 400
}

func (o *ReplicationScalePreviewBadRequest) Error() string {
	return fmt.Sprintf("[GET /replication/scale][%d] replicationScalePreviewBadRequest  %+v", 400, o.Payload)
}

func (o *ReplicationScalePreviewBadRequest) String() string {
	return fmt.Sprintf("[GET /replication/scale][%d] replicationScalePreviewBadRequest  %+v", 400, o.Payload)
}

func (o *ReplicationScalePreviewBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ReplicationScalePreviewBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplicationScalePreviewUnauthorized creates a ReplicationScalePreviewUnauthorized with default headers values
func NewReplicationScalePreviewUnauthorized() *ReplicationScalePreviewUnauthorized {
	return &ReplicationScalePreviewUnauthorized{}
}

/*
ReplicationScalePreviewUnauthorized describes a response with status code 401, with default header values.

Unauthorized or invalid credentials.
*/
type ReplicationScalePreviewUnauthorized struct {
}

// IsSuccess returns true when this replication scale preview unauthorized response has a 2xx status code
func (o *ReplicationScalePreviewUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replication scale preview unauthorized response has a 3xx status code
func (o *ReplicationScalePreviewUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replication scale preview unauthorized response has a 4xx status code
func (o *ReplicationScalePreviewUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this replication scale preview unauthorized response has a 5xx status code
func (o *ReplicationScalePreviewUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this replication scale preview unauthorized response a status code equal to that given
func (o *ReplicationScalePreviewUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the replication scale preview unauthorized response
func (o *ReplicationScalePreviewUnauthorized) Code() int {
	return 401
}

func (o *ReplicationScalePreviewUnauthorized) Error() string {
	return fmt.Sprintf("[GET /replication/scale][%d] replicationScalePreviewUnauthorized ", 401)
}

func (o *ReplicationScalePreviewUnauthorized) String() string {
	return fmt.Sprintf("[GET /replication/scale][%d] replicationScalePreviewUnauthorized ", 401)
}

func (o *ReplicationScalePreviewUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReplicationScalePreviewForbidden creates a ReplicationScalePreviewForbidden with default headers values
func NewReplicationScalePreviewForbidden() *ReplicationScalePreviewForbidden {
	return &ReplicationScalePreviewForbidden{}
}

/*
ReplicationScalePreviewForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ReplicationScalePreviewForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this replication scale preview forbidden response has a 2xx status code
func (o *ReplicationScalePreviewForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replication scale preview forbidden response has a 3xx status code
func (o *ReplicationScalePreviewForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replication scale preview forbidden response has a 4xx status code
func (o *ReplicationScalePreviewForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this replication scale preview forbidden response has a 5xx status code
func (o *ReplicationScalePreviewForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this replication scale preview forbidden response a status code equal to that given
func (o *ReplicationScalePreviewForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the replication scale preview forbidden response
func (o *ReplicationScalePreviewForbidden) Code() int {
	return 403
}

func (o *ReplicationScalePreviewForbidden) Error() string {
	return fmt.Sprintf("[GET /replication/scale][%d] replicationScalePreviewForbidden  %+v", 403, o.Payload)
}

func (o *ReplicationScalePreviewForbidden) String() string {
	return fmt.Sprintf("[GET /replication/scale][%d] replicationScalePreviewForbidden  %+v", 403, o.Payload)
}

func (o *ReplicationScalePreviewForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ReplicationScalePreviewForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplicationScalePreviewNotFound creates a ReplicationScalePreviewNotFound with default headers values
func NewReplicationScalePreviewNotFound() *ReplicationScalePreviewNotFound {
	return &ReplicationScalePreviewNotFound{}
}

/*
ReplicationScalePreviewNotFound describes a response with status code 404, with default header values.

Collection not found.
*/
type ReplicationScalePreviewNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this replication scale preview not found response has a 2xx status code
func (o *ReplicationScalePreviewNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replication scale preview not found response has a 3xx status code
func (o *ReplicationScalePreviewNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replication scale preview not found response has a 4xx status code
func (o *ReplicationScalePreviewNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this replication scale preview not found response has a 5xx status code
func (o *ReplicationScalePreviewNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this replication scale preview not found response a status code equal to that given
func (o *ReplicationScalePreviewNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the replication scale preview not found response
func (o *ReplicationScalePreviewNotFound) Code() int {
	return 404
}

func (o *ReplicationScalePreviewNotFound) Error() string {
	return fmt.Sprintf("[GET /replication/scale][%d] replicationScalePreviewNotFound  %+v", 404, o.Payload)
}

func (o *ReplicationScalePreviewNotFound) String() string {
	return fmt.Sprintf("[GET /replication/scale][%d] replicationScalePreviewNotFound  %+v", 404, o.Payload)
}

func (o *ReplicationScalePreviewNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ReplicationScalePreviewNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplicationScalePreviewInternalServerError creates a ReplicationScalePreviewInternalServerError with default headers values
func NewReplicationScalePreviewInternalServerError() *ReplicationScalePreviewInternalServerError {
	return &ReplicationScalePreviewInternalServerError{}
}

/*
ReplicationScalePreviewInternalServerError describes a response with status code 500, with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type ReplicationScalePreviewInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this replication scale preview internal server error response has a 2xx status code
func (o *ReplicationScalePreviewInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replication scale preview internal server error response has a 3xx status code
func (o *ReplicationScalePreviewInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replication scale preview internal server error response has a 4xx status code
func (o *ReplicationScalePreviewInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this replication scale preview internal server error response has a 5xx status code
func (o *ReplicationScalePreviewInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this replication scale preview internal server error response a status code equal to that given
func (o *ReplicationScalePreviewInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the replication scale preview internal server error response
func (o *ReplicationScalePreviewInternalServerError) Code() int {
	return 500
}

func (o *ReplicationScalePreviewInternalServerError) Error() string {
	return fmt.Sprintf("[GET /replication/scale][%d] replicationScalePreviewInternalServerError  %+v", 500, o.Payload)
}

func (o *ReplicationScalePreviewInternalServerError) String() string {
	return fmt.Sprintf("[GET /replication/scale][%d] replicationScalePreviewInternalServerError  %+v", 500, o.Payload)
}

func (o *ReplicationScalePreviewInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ReplicationScalePreviewInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplicationScalePreviewNotImplemented creates a ReplicationScalePreviewNotImplemented with default headers values
func NewReplicationScalePreviewNotImplemented() *ReplicationScalePreviewNotImplemented {
	return &ReplicationScalePreviewNotImplemented{}
}

/*
ReplicationScalePreviewNotImplemented describes a response with status code 501, with default header values.

Replica movement operations are disabled.
*/
type ReplicationScalePreviewNotImplemented struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this replication scale preview not implemented response has a 2xx status code
func (o *ReplicationScalePreviewNotImplemented) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this replication scale preview not implemented response has a 3xx status code
func (o *ReplicationScalePreviewNotImplemented) IsRedirect() bool {
	return false
}

// IsClientError returns true when this replication scale preview not implemented response has a 4xx status code
func (o *ReplicationScalePreviewNotImplemented) IsClientError() bool {
	return false
}

// IsServerError returns true when this replication scale preview not implemented response has a 5xx status code
func (o *ReplicationScalePreviewNotImplemented) IsServerError() bool {
	return true
}

// IsCode returns true when this replication scale preview not implemented response a status code equal to that given
func (o *ReplicationScalePreviewNotImplemented) IsCode(code int) bool {
	return code == 501
}

// Code gets the status code for the replication scale preview not implemented response
func (o *ReplicationScalePreviewNotImplemented) Code() int {
	return 501
}

func (o *ReplicationScalePreviewNotImplemented) Error() string {
	return fmt.Sprintf("[GET /replication/scale][%d] replicationScalePreviewNotImplemented  %+v", 501, o.Payload)
}

func (o *ReplicationScalePreviewNotImplemented) String() string {
	return fmt.Sprintf("[GET /replication/scale][%d] replicationScalePreviewNotImplemented  %+v", 501, o.Payload)
}

func (o *ReplicationScalePreviewNotImplemented) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ReplicationScalePreviewNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
