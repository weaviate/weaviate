//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package vectorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/weaviate/weaviate/entities/models"
)

// VectorizationCancelOKCode is the HTTP code returned for type VectorizationCancelOK
const VectorizationCancelOKCode int = 200

/*
VectorizationCancelOK The task was successfully cancelled

swagger:response vectorizationCancelOK
*/
type VectorizationCancelOK struct {
}

// NewVectorizationCancelOK creates VectorizationCancelOK with default headers values
func NewVectorizationCancelOK() *VectorizationCancelOK {

	return &VectorizationCancelOK{}
}

// WriteResponse to the client
func (o *VectorizationCancelOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// VectorizationCancelBadRequestCode is the HTTP code returned for type VectorizationCancelBadRequest
const VectorizationCancelBadRequestCode int = 400

/*
VectorizationCancelBadRequest Malformed request.

swagger:response vectorizationCancelBadRequest
*/
type VectorizationCancelBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewVectorizationCancelBadRequest creates VectorizationCancelBadRequest with default headers values
func NewVectorizationCancelBadRequest() *VectorizationCancelBadRequest {

	return &VectorizationCancelBadRequest{}
}

// WithPayload adds the payload to the vectorization cancel bad request response
func (o *VectorizationCancelBadRequest) WithPayload(payload *models.ErrorResponse) *VectorizationCancelBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the vectorization cancel bad request response
func (o *VectorizationCancelBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VectorizationCancelBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VectorizationCancelUnauthorizedCode is the HTTP code returned for type VectorizationCancelUnauthorized
const VectorizationCancelUnauthorizedCode int = 401

/*
VectorizationCancelUnauthorized Unauthorized or invalid credentials.

swagger:response vectorizationCancelUnauthorized
*/
type VectorizationCancelUnauthorized struct {
}

// NewVectorizationCancelUnauthorized creates VectorizationCancelUnauthorized with default headers values
func NewVectorizationCancelUnauthorized() *VectorizationCancelUnauthorized {

	return &VectorizationCancelUnauthorized{}
}

// WriteResponse to the client
func (o *VectorizationCancelUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// VectorizationCancelForbiddenCode is the HTTP code returned for type VectorizationCancelForbidden
const VectorizationCancelForbiddenCode int = 403

/*
VectorizationCancelForbidden Forbidden

swagger:response vectorizationCancelForbidden
*/
type VectorizationCancelForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewVectorizationCancelForbidden creates VectorizationCancelForbidden with default headers values
func NewVectorizationCancelForbidden() *VectorizationCancelForbidden {

	return &VectorizationCancelForbidden{}
}

// WithPayload adds the payload to the vectorization cancel forbidden response
func (o *VectorizationCancelForbidden) WithPayload(payload *models.ErrorResponse) *VectorizationCancelForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the vectorization cancel forbidden response
func (o *VectorizationCancelForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VectorizationCancelForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VectorizationCancelNotFoundCode is the HTTP code returned for type VectorizationCancelNotFound
const VectorizationCancelNotFoundCode int = 404

/*
VectorizationCancelNotFound Vectorization task not found

swagger:response vectorizationCancelNotFound
*/
type VectorizationCancelNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewVectorizationCancelNotFound creates VectorizationCancelNotFound with default headers values
func NewVectorizationCancelNotFound() *VectorizationCancelNotFound {

	return &VectorizationCancelNotFound{}
}

// WithPayload adds the payload to the vectorization cancel not found response
func (o *VectorizationCancelNotFound) WithPayload(payload *models.ErrorResponse) *VectorizationCancelNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the vectorization cancel not found response
func (o *VectorizationCancelNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VectorizationCancelNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VectorizationCancelUnprocessableEntityCode is the HTTP code returned for type VectorizationCancelUnprocessableEntity
const VectorizationCancelUnprocessableEntityCode int = 422

/*
VectorizationCancelUnprocessableEntity Request body is well-formed (i.e., syntactically correct), but semantically erroneous.

swagger:response vectorizationCancelUnprocessableEntity
*/
type VectorizationCancelUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewVectorizationCancelUnprocessableEntity creates VectorizationCancelUnprocessableEntity with default headers values
func NewVectorizationCancelUnprocessableEntity() *VectorizationCancelUnprocessableEntity {

	return &VectorizationCancelUnprocessableEntity{}
}

// WithPayload adds the payload to the vectorization cancel unprocessable entity response
func (o *VectorizationCancelUnprocessableEntity) WithPayload(payload *models.ErrorResponse) *VectorizationCancelUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the vectorization cancel unprocessable entity response
func (o *VectorizationCancelUnprocessableEntity) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VectorizationCancelUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VectorizationCancelInternalServerErrorCode is the HTTP code returned for type VectorizationCancelInternalServerError
const VectorizationCancelInternalServerErrorCode int = 500

/*
VectorizationCancelInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response vectorizationCancelInternalServerError
*/
type VectorizationCancelInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewVectorizationCancelInternalServerError creates VectorizationCancelInternalServerError with default headers values
func NewVectorizationCancelInternalServerError() *VectorizationCancelInternalServerError {

	return &VectorizationCancelInternalServerError{}
}

// WithPayload adds the payload to the vectorization cancel internal server error response
func (o *VectorizationCancelInternalServerError) WithPayload(payload *models.ErrorResponse) *VectorizationCancelInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the vectorization cancel internal server error response
func (o *VectorizationCancelInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VectorizationCancelInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
