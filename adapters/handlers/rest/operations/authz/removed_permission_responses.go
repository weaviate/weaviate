//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package authz

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/weaviate/weaviate/entities/models"
)

// RemovedPermissionCreatedCode is the HTTP code returned for type RemovedPermissionCreated
const RemovedPermissionCreatedCode int = 201

/*
RemovedPermissionCreated Permission removed successfully

swagger:response removedPermissionCreated
*/
type RemovedPermissionCreated struct{}

// NewRemovedPermissionCreated creates RemovedPermissionCreated with default headers values
func NewRemovedPermissionCreated() *RemovedPermissionCreated {
	return &RemovedPermissionCreated{}
}

// WriteResponse to the client
func (o *RemovedPermissionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.Header().Del(runtime.HeaderContentType) // Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// RemovedPermissionUnauthorizedCode is the HTTP code returned for type RemovedPermissionUnauthorized
const RemovedPermissionUnauthorizedCode int = 401

/*
RemovedPermissionUnauthorized Unauthorized or invalid credentials.

swagger:response removedPermissionUnauthorized
*/
type RemovedPermissionUnauthorized struct{}

// NewRemovedPermissionUnauthorized creates RemovedPermissionUnauthorized with default headers values
func NewRemovedPermissionUnauthorized() *RemovedPermissionUnauthorized {
	return &RemovedPermissionUnauthorized{}
}

// WriteResponse to the client
func (o *RemovedPermissionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.Header().Del(runtime.HeaderContentType) // Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// RemovedPermissionForbiddenCode is the HTTP code returned for type RemovedPermissionForbidden
const RemovedPermissionForbiddenCode int = 403

/*
RemovedPermissionForbidden Forbidden

swagger:response removedPermissionForbidden
*/
type RemovedPermissionForbidden struct {
	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewRemovedPermissionForbidden creates RemovedPermissionForbidden with default headers values
func NewRemovedPermissionForbidden() *RemovedPermissionForbidden {
	return &RemovedPermissionForbidden{}
}

// WithPayload adds the payload to the removed permission forbidden response
func (o *RemovedPermissionForbidden) WithPayload(payload *models.ErrorResponse) *RemovedPermissionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the removed permission forbidden response
func (o *RemovedPermissionForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemovedPermissionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemovedPermissionUnprocessableEntityCode is the HTTP code returned for type RemovedPermissionUnprocessableEntity
const RemovedPermissionUnprocessableEntityCode int = 422

/*
RemovedPermissionUnprocessableEntity Request body is well-formed (i.e., syntactically correct), but semantically erroneous. Are you sure the class is defined in the configuration file?

swagger:response removedPermissionUnprocessableEntity
*/
type RemovedPermissionUnprocessableEntity struct {
	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewRemovedPermissionUnprocessableEntity creates RemovedPermissionUnprocessableEntity with default headers values
func NewRemovedPermissionUnprocessableEntity() *RemovedPermissionUnprocessableEntity {
	return &RemovedPermissionUnprocessableEntity{}
}

// WithPayload adds the payload to the removed permission unprocessable entity response
func (o *RemovedPermissionUnprocessableEntity) WithPayload(payload *models.ErrorResponse) *RemovedPermissionUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the removed permission unprocessable entity response
func (o *RemovedPermissionUnprocessableEntity) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemovedPermissionUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemovedPermissionInternalServerErrorCode is the HTTP code returned for type RemovedPermissionInternalServerError
const RemovedPermissionInternalServerErrorCode int = 500

/*
RemovedPermissionInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response removedPermissionInternalServerError
*/
type RemovedPermissionInternalServerError struct {
	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewRemovedPermissionInternalServerError creates RemovedPermissionInternalServerError with default headers values
func NewRemovedPermissionInternalServerError() *RemovedPermissionInternalServerError {
	return &RemovedPermissionInternalServerError{}
}

// WithPayload adds the payload to the removed permission internal server error response
func (o *RemovedPermissionInternalServerError) WithPayload(payload *models.ErrorResponse) *RemovedPermissionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the removed permission internal server error response
func (o *RemovedPermissionInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemovedPermissionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {
	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
