//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// WeaviateRootOKCode is the HTTP code returned for type WeaviateRootOK
const WeaviateRootOKCode int = 200

/*
WeaviateRootOK Weaviate is alive and ready to serve content

swagger:response weaviateRootOK
*/
type WeaviateRootOK struct {

	/*
	  In: Body
	*/
	Payload *WeaviateRootOKBody `json:"body,omitempty"`
}

// NewWeaviateRootOK creates WeaviateRootOK with default headers values
func NewWeaviateRootOK() *WeaviateRootOK {

	return &WeaviateRootOK{}
}

// WithPayload adds the payload to the weaviate root o k response
func (o *WeaviateRootOK) WithPayload(payload *WeaviateRootOKBody) *WeaviateRootOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the weaviate root o k response
func (o *WeaviateRootOK) SetPayload(payload *WeaviateRootOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *WeaviateRootOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
