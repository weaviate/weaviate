//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2025 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by mockery v2.53.2. DO NOT EDIT.

package db

import (
	mock "github.com/stretchr/testify/mock"
	schema "github.com/weaviate/weaviate/entities/schema"
)

// MockIndexGetter is an autogenerated mock type for the IndexGetter type
type MockIndexGetter struct {
	mock.Mock
}

type MockIndexGetter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIndexGetter) EXPECT() *MockIndexGetter_Expecter {
	return &MockIndexGetter_Expecter{mock: &_m.Mock}
}

// GetIndexLike provides a mock function with given fields: className
func (_m *MockIndexGetter) GetIndexLike(className schema.ClassName) IndexLike {
	ret := _m.Called(className)

	if len(ret) == 0 {
		panic("no return value specified for GetIndexLike")
	}

	var r0 IndexLike
	if rf, ok := ret.Get(0).(func(schema.ClassName) IndexLike); ok {
		r0 = rf(className)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(IndexLike)
		}
	}

	return r0
}

// MockIndexGetter_GetIndexLike_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetIndexLike'
type MockIndexGetter_GetIndexLike_Call struct {
	*mock.Call
}

// GetIndexLike is a helper method to define mock.On call
//   - className schema.ClassName
func (_e *MockIndexGetter_Expecter) GetIndexLike(className interface{}) *MockIndexGetter_GetIndexLike_Call {
	return &MockIndexGetter_GetIndexLike_Call{Call: _e.mock.On("GetIndexLike", className)}
}

func (_c *MockIndexGetter_GetIndexLike_Call) Run(run func(className schema.ClassName)) *MockIndexGetter_GetIndexLike_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(schema.ClassName))
	})
	return _c
}

func (_c *MockIndexGetter_GetIndexLike_Call) Return(_a0 IndexLike) *MockIndexGetter_GetIndexLike_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIndexGetter_GetIndexLike_Call) RunAndReturn(run func(schema.ClassName) IndexLike) *MockIndexGetter_GetIndexLike_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockIndexGetter creates a new instance of MockIndexGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIndexGetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIndexGetter {
	mock := &MockIndexGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
